<?php
/**
 * DefaultApi
 * PHP version 5
 *
 * @category Class
 * @package  Aylien\NewsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AYLIEN News API
 *
 * The AYLIEN News API is the most powerful way of sourcing, searching and syndicating analyzed and enriched news content. It is accessed by sending HTTP requests to our server, which returns information to your client.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@aylien.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Aylien\NewsApi\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use Aylien\NewsApi\ApiException;
use Aylien\NewsApi\Configuration;
use Aylien\NewsApi\HeaderSelector;
use Aylien\NewsApi\ObjectSerializer;

/**
 * DefaultApi Class Doc Comment
 *
 * @category Class
 * @package  Aylien\NewsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DefaultApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $host_index (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $host_index = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $host_index;
    }

    /**
     * Set the host index
     *
     * @param  int Host index (required)
     */
    public function setHostIndex($host_index)
    {
        $this->hostIndex = $host_index;
    }

    /**
     * Get the host index
     *
     * @return Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation listAutocompletes
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Autocompletes|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listAutocompletes($associative_array)
    {
        list($response) = $this->listAutocompletesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listAutocompletesWithHttpInfo
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Autocompletes|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listAutocompletesWithHttpInfo($associative_array)
    {
        $request = $this->listAutocompletesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Autocompletes' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Autocompletes', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Autocompletes';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Autocompletes',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listAutocompletesAsync
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listAutocompletesAsync($associative_array)
    {
        return $this->listAutocompletesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listAutocompletesAsyncWithHttpInfo
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listAutocompletesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Autocompletes';
        $request = $this->listAutocompletesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listAutocompletes'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listAutocompletesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $type = array_key_exists('type', $associative_array) ? $associative_array['type'] : null;
        $term = array_key_exists('term', $associative_array) ? $associative_array['term'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : 'en';
        $perPage = array_key_exists('perPage', $associative_array) ? $associative_array['perPage'] : 3;

        // verify the required parameter 'type' is set
        if ($type === null || (is_array($type) && count($type) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $type when calling listAutocompletes'
            );
        }
        // verify the required parameter 'term' is set
        if ($term === null || (is_array($term) && count($term) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $term when calling listAutocompletes'
            );
        }
        if (strlen($term) < 1) {
            throw new \InvalidArgumentException('invalid length for "$term" when calling DefaultApi.listAutocompletes, must be bigger than or equal to 1.');
        }

        if ($perPage !== null && $perPage > 100) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listAutocompletes, must be smaller than or equal to 100.');
        }
        if ($perPage !== null && $perPage < 1) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listAutocompletes, must be bigger than or equal to 1.');
        }


        $resourcePath = '/autocompletes';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($type !== null) {
            $queryParams['type'] = $type;
        }
        // query params
        if ($term !== null) {
            $queryParams['term'] = $term;
        }
        // query params
        if ($language !== null) {
            $queryParams['language'] = $language;
        }
        // query params
        if ($perPage !== null) {
            $queryParams['per_page'] = $perPage;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listClusters
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $notId This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $storyCountMin This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $storyCountMax This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $timeStart This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $timeEnd This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryStart This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryEnd This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryStart This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryEnd This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $locationCountry This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notLocationCountry This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Clusters|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listClusters($associative_array)
    {
        list($response) = $this->listClustersWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listClustersWithHttpInfo
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $notId This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $storyCountMin This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $storyCountMax This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $timeStart This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $timeEnd This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryStart This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryEnd This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryStart This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryEnd This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $locationCountry This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notLocationCountry This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Clusters|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listClustersWithHttpInfo($associative_array)
    {
        $request = $this->listClustersRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Clusters' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Clusters', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Clusters';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Clusters',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listClustersAsync
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $notId This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $storyCountMin This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $storyCountMax This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $timeStart This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $timeEnd This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryStart This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryEnd This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryStart This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryEnd This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $locationCountry This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notLocationCountry This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listClustersAsync($associative_array)
    {
        return $this->listClustersAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listClustersAsyncWithHttpInfo
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $notId This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $storyCountMin This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $storyCountMax This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $timeStart This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $timeEnd This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryStart This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryEnd This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryStart This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryEnd This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $locationCountry This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notLocationCountry This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listClustersAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Clusters';
        $request = $this->listClustersRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listClusters'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $notId This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $storyCountMin This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $storyCountMax This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $timeStart This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $timeEnd This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryStart This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliestStoryEnd This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryStart This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latestStoryEnd This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $locationCountry This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notLocationCountry This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listClustersRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $storyCountMin = array_key_exists('storyCountMin', $associative_array) ? $associative_array['storyCountMin'] : null;
        $storyCountMax = array_key_exists('storyCountMax', $associative_array) ? $associative_array['storyCountMax'] : null;
        $timeStart = array_key_exists('timeStart', $associative_array) ? $associative_array['timeStart'] : null;
        $timeEnd = array_key_exists('timeEnd', $associative_array) ? $associative_array['timeEnd'] : null;
        $earliestStoryStart = array_key_exists('earliestStoryStart', $associative_array) ? $associative_array['earliestStoryStart'] : null;
        $earliestStoryEnd = array_key_exists('earliestStoryEnd', $associative_array) ? $associative_array['earliestStoryEnd'] : null;
        $latestStoryStart = array_key_exists('latestStoryStart', $associative_array) ? $associative_array['latestStoryStart'] : null;
        $latestStoryEnd = array_key_exists('latestStoryEnd', $associative_array) ? $associative_array['latestStoryEnd'] : null;
        $locationCountry = array_key_exists('locationCountry', $associative_array) ? $associative_array['locationCountry'] : null;
        $notLocationCountry = array_key_exists('notLocationCountry', $associative_array) ? $associative_array['notLocationCountry'] : null;

        if ($storyCountMin !== null && $storyCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$storyCountMin" when calling DefaultApi.listClusters, must be bigger than 0.');
        }

        if ($storyCountMax !== null && $storyCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$storyCountMax" when calling DefaultApi.listClusters, must be bigger than 0.');
        }


        $resourcePath = '/clusters';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($storyCountMin !== null) {
            $queryParams['story_count.min'] = $storyCountMin;
        }
        // query params
        if ($storyCountMax !== null) {
            $queryParams['story_count.max'] = $storyCountMax;
        }
        // query params
        if ($timeStart !== null) {
            $queryParams['time.start'] = $timeStart;
        }
        // query params
        if ($timeEnd !== null) {
            $queryParams['time.end'] = $timeEnd;
        }
        // query params
        if ($earliestStoryStart !== null) {
            $queryParams['earliest_story.start'] = $earliestStoryStart;
        }
        // query params
        if ($earliestStoryEnd !== null) {
            $queryParams['earliest_story.end'] = $earliestStoryEnd;
        }
        // query params
        if ($latestStoryStart !== null) {
            $queryParams['latest_story.start'] = $latestStoryStart;
        }
        // query params
        if ($latestStoryEnd !== null) {
            $queryParams['latest_story.end'] = $latestStoryEnd;
        }
        // query params
        if ($locationCountry !== null) {
            $queryParams['location.country'] = $locationCountry;
        }
        // query params
        if ($notLocationCountry !== null) {
            $queryParams['!location.country'] = $notLocationCountry;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listCoverages
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  \DateTime $storyPublishedAt Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Coverages|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listCoverages($associative_array)
    {
        list($response) = $this->listCoveragesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listCoveragesWithHttpInfo
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  \DateTime $storyPublishedAt Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Coverages|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listCoveragesWithHttpInfo($associative_array)
    {
        $request = $this->listCoveragesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Coverages' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Coverages', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Coverages';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Coverages',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listCoveragesAsync
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  \DateTime $storyPublishedAt Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCoveragesAsync($associative_array)
    {
        return $this->listCoveragesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listCoveragesAsyncWithHttpInfo
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  \DateTime $storyPublishedAt Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCoveragesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Coverages';
        $request = $this->listCoveragesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listCoverages'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  \DateTime $storyPublishedAt Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listCoveragesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translationsEnTitle = array_key_exists('translationsEnTitle', $associative_array) ? $associative_array['translationsEnTitle'] : null;
        $translationsEnBody = array_key_exists('translationsEnBody', $associative_array) ? $associative_array['translationsEnBody'] : null;
        $translationsEnText = array_key_exists('translationsEnText', $associative_array) ? $associative_array['translationsEnText'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $notLanguage = array_key_exists('notLanguage', $associative_array) ? $associative_array['notLanguage'] : null;
        $publishedAtStart = array_key_exists('publishedAtStart', $associative_array) ? $associative_array['publishedAtStart'] : null;
        $publishedAtEnd = array_key_exists('publishedAtEnd', $associative_array) ? $associative_array['publishedAtEnd'] : null;
        $categoriesTaxonomy = array_key_exists('categoriesTaxonomy', $associative_array) ? $associative_array['categoriesTaxonomy'] : null;
        $categoriesConfident = array_key_exists('categoriesConfident', $associative_array) ? $associative_array['categoriesConfident'] : true;
        $categoriesId = array_key_exists('categoriesId', $associative_array) ? $associative_array['categoriesId'] : null;
        $notCategoriesId = array_key_exists('notCategoriesId', $associative_array) ? $associative_array['notCategoriesId'] : null;
        $categoriesLevel = array_key_exists('categoriesLevel', $associative_array) ? $associative_array['categoriesLevel'] : null;
        $notCategoriesLevel = array_key_exists('notCategoriesLevel', $associative_array) ? $associative_array['notCategoriesLevel'] : null;
        $entitiesTitleText = array_key_exists('entitiesTitleText', $associative_array) ? $associative_array['entitiesTitleText'] : null;
        $notEntitiesTitleText = array_key_exists('notEntitiesTitleText', $associative_array) ? $associative_array['notEntitiesTitleText'] : null;
        $entitiesTitleType = array_key_exists('entitiesTitleType', $associative_array) ? $associative_array['entitiesTitleType'] : null;
        $notEntitiesTitleType = array_key_exists('notEntitiesTitleType', $associative_array) ? $associative_array['notEntitiesTitleType'] : null;
        $entitiesTitleLinksDbpedia = array_key_exists('entitiesTitleLinksDbpedia', $associative_array) ? $associative_array['entitiesTitleLinksDbpedia'] : null;
        $notEntitiesTitleLinksDbpedia = array_key_exists('notEntitiesTitleLinksDbpedia', $associative_array) ? $associative_array['notEntitiesTitleLinksDbpedia'] : null;
        $entitiesBodyText = array_key_exists('entitiesBodyText', $associative_array) ? $associative_array['entitiesBodyText'] : null;
        $notEntitiesBodyText = array_key_exists('notEntitiesBodyText', $associative_array) ? $associative_array['notEntitiesBodyText'] : null;
        $entitiesBodyType = array_key_exists('entitiesBodyType', $associative_array) ? $associative_array['entitiesBodyType'] : null;
        $notEntitiesBodyType = array_key_exists('notEntitiesBodyType', $associative_array) ? $associative_array['notEntitiesBodyType'] : null;
        $entitiesBodyLinksDbpedia = array_key_exists('entitiesBodyLinksDbpedia', $associative_array) ? $associative_array['entitiesBodyLinksDbpedia'] : null;
        $notEntitiesBodyLinksDbpedia = array_key_exists('notEntitiesBodyLinksDbpedia', $associative_array) ? $associative_array['notEntitiesBodyLinksDbpedia'] : null;
        $sentimentTitlePolarity = array_key_exists('sentimentTitlePolarity', $associative_array) ? $associative_array['sentimentTitlePolarity'] : null;
        $notSentimentTitlePolarity = array_key_exists('notSentimentTitlePolarity', $associative_array) ? $associative_array['notSentimentTitlePolarity'] : null;
        $sentimentBodyPolarity = array_key_exists('sentimentBodyPolarity', $associative_array) ? $associative_array['sentimentBodyPolarity'] : null;
        $notSentimentBodyPolarity = array_key_exists('notSentimentBodyPolarity', $associative_array) ? $associative_array['notSentimentBodyPolarity'] : null;
        $mediaImagesCountMin = array_key_exists('mediaImagesCountMin', $associative_array) ? $associative_array['mediaImagesCountMin'] : null;
        $mediaImagesCountMax = array_key_exists('mediaImagesCountMax', $associative_array) ? $associative_array['mediaImagesCountMax'] : null;
        $mediaImagesWidthMin = array_key_exists('mediaImagesWidthMin', $associative_array) ? $associative_array['mediaImagesWidthMin'] : null;
        $mediaImagesWidthMax = array_key_exists('mediaImagesWidthMax', $associative_array) ? $associative_array['mediaImagesWidthMax'] : null;
        $mediaImagesHeightMin = array_key_exists('mediaImagesHeightMin', $associative_array) ? $associative_array['mediaImagesHeightMin'] : null;
        $mediaImagesHeightMax = array_key_exists('mediaImagesHeightMax', $associative_array) ? $associative_array['mediaImagesHeightMax'] : null;
        $mediaImagesContentLengthMin = array_key_exists('mediaImagesContentLengthMin', $associative_array) ? $associative_array['mediaImagesContentLengthMin'] : null;
        $mediaImagesContentLengthMax = array_key_exists('mediaImagesContentLengthMax', $associative_array) ? $associative_array['mediaImagesContentLengthMax'] : null;
        $mediaImagesFormat = array_key_exists('mediaImagesFormat', $associative_array) ? $associative_array['mediaImagesFormat'] : null;
        $notMediaImagesFormat = array_key_exists('notMediaImagesFormat', $associative_array) ? $associative_array['notMediaImagesFormat'] : null;
        $mediaVideosCountMin = array_key_exists('mediaVideosCountMin', $associative_array) ? $associative_array['mediaVideosCountMin'] : null;
        $mediaVideosCountMax = array_key_exists('mediaVideosCountMax', $associative_array) ? $associative_array['mediaVideosCountMax'] : null;
        $authorId = array_key_exists('authorId', $associative_array) ? $associative_array['authorId'] : null;
        $notAuthorId = array_key_exists('notAuthorId', $associative_array) ? $associative_array['notAuthorId'] : null;
        $authorName = array_key_exists('authorName', $associative_array) ? $associative_array['authorName'] : null;
        $notAuthorName = array_key_exists('notAuthorName', $associative_array) ? $associative_array['notAuthorName'] : null;
        $sourceId = array_key_exists('sourceId', $associative_array) ? $associative_array['sourceId'] : null;
        $notSourceId = array_key_exists('notSourceId', $associative_array) ? $associative_array['notSourceId'] : null;
        $sourceName = array_key_exists('sourceName', $associative_array) ? $associative_array['sourceName'] : null;
        $notSourceName = array_key_exists('notSourceName', $associative_array) ? $associative_array['notSourceName'] : null;
        $sourceDomain = array_key_exists('sourceDomain', $associative_array) ? $associative_array['sourceDomain'] : null;
        $notSourceDomain = array_key_exists('notSourceDomain', $associative_array) ? $associative_array['notSourceDomain'] : null;
        $sourceLocationsCountry = array_key_exists('sourceLocationsCountry', $associative_array) ? $associative_array['sourceLocationsCountry'] : null;
        $notSourceLocationsCountry = array_key_exists('notSourceLocationsCountry', $associative_array) ? $associative_array['notSourceLocationsCountry'] : null;
        $sourceLocationsState = array_key_exists('sourceLocationsState', $associative_array) ? $associative_array['sourceLocationsState'] : null;
        $notSourceLocationsState = array_key_exists('notSourceLocationsState', $associative_array) ? $associative_array['notSourceLocationsState'] : null;
        $sourceLocationsCity = array_key_exists('sourceLocationsCity', $associative_array) ? $associative_array['sourceLocationsCity'] : null;
        $notSourceLocationsCity = array_key_exists('notSourceLocationsCity', $associative_array) ? $associative_array['notSourceLocationsCity'] : null;
        $sourceScopesCountry = array_key_exists('sourceScopesCountry', $associative_array) ? $associative_array['sourceScopesCountry'] : null;
        $notSourceScopesCountry = array_key_exists('notSourceScopesCountry', $associative_array) ? $associative_array['notSourceScopesCountry'] : null;
        $sourceScopesState = array_key_exists('sourceScopesState', $associative_array) ? $associative_array['sourceScopesState'] : null;
        $notSourceScopesState = array_key_exists('notSourceScopesState', $associative_array) ? $associative_array['notSourceScopesState'] : null;
        $sourceScopesCity = array_key_exists('sourceScopesCity', $associative_array) ? $associative_array['sourceScopesCity'] : null;
        $notSourceScopesCity = array_key_exists('notSourceScopesCity', $associative_array) ? $associative_array['notSourceScopesCity'] : null;
        $sourceScopesLevel = array_key_exists('sourceScopesLevel', $associative_array) ? $associative_array['sourceScopesLevel'] : null;
        $notSourceScopesLevel = array_key_exists('notSourceScopesLevel', $associative_array) ? $associative_array['notSourceScopesLevel'] : null;
        $sourceLinksInCountMin = array_key_exists('sourceLinksInCountMin', $associative_array) ? $associative_array['sourceLinksInCountMin'] : null;
        $sourceLinksInCountMax = array_key_exists('sourceLinksInCountMax', $associative_array) ? $associative_array['sourceLinksInCountMax'] : null;
        $sourceRankingsAlexaRankMin = array_key_exists('sourceRankingsAlexaRankMin', $associative_array) ? $associative_array['sourceRankingsAlexaRankMin'] : null;
        $sourceRankingsAlexaRankMax = array_key_exists('sourceRankingsAlexaRankMax', $associative_array) ? $associative_array['sourceRankingsAlexaRankMax'] : null;
        $sourceRankingsAlexaCountry = array_key_exists('sourceRankingsAlexaCountry', $associative_array) ? $associative_array['sourceRankingsAlexaCountry'] : null;
        $socialSharesCountFacebookMin = array_key_exists('socialSharesCountFacebookMin', $associative_array) ? $associative_array['socialSharesCountFacebookMin'] : null;
        $socialSharesCountFacebookMax = array_key_exists('socialSharesCountFacebookMax', $associative_array) ? $associative_array['socialSharesCountFacebookMax'] : null;
        $socialSharesCountGooglePlusMin = array_key_exists('socialSharesCountGooglePlusMin', $associative_array) ? $associative_array['socialSharesCountGooglePlusMin'] : null;
        $socialSharesCountGooglePlusMax = array_key_exists('socialSharesCountGooglePlusMax', $associative_array) ? $associative_array['socialSharesCountGooglePlusMax'] : null;
        $socialSharesCountLinkedinMin = array_key_exists('socialSharesCountLinkedinMin', $associative_array) ? $associative_array['socialSharesCountLinkedinMin'] : null;
        $socialSharesCountLinkedinMax = array_key_exists('socialSharesCountLinkedinMax', $associative_array) ? $associative_array['socialSharesCountLinkedinMax'] : null;
        $socialSharesCountRedditMin = array_key_exists('socialSharesCountRedditMin', $associative_array) ? $associative_array['socialSharesCountRedditMin'] : null;
        $socialSharesCountRedditMax = array_key_exists('socialSharesCountRedditMax', $associative_array) ? $associative_array['socialSharesCountRedditMax'] : null;
        $clusters = array_key_exists('clusters', $associative_array) ? $associative_array['clusters'] : null;
        $return = array_key_exists('return', $associative_array) ? $associative_array['return'] : null;
        $storyId = array_key_exists('storyId', $associative_array) ? $associative_array['storyId'] : null;
        $storyUrl = array_key_exists('storyUrl', $associative_array) ? $associative_array['storyUrl'] : null;
        $storyTitle = array_key_exists('storyTitle', $associative_array) ? $associative_array['storyTitle'] : null;
        $storyBody = array_key_exists('storyBody', $associative_array) ? $associative_array['storyBody'] : null;
        $storyPublishedAt = array_key_exists('storyPublishedAt', $associative_array) ? $associative_array['storyPublishedAt'] : null;
        $storyLanguage = array_key_exists('storyLanguage', $associative_array) ? $associative_array['storyLanguage'] : 'auto';
        $perPage = array_key_exists('perPage', $associative_array) ? $associative_array['perPage'] : 3;

        if ($mediaImagesCountMin !== null && $mediaImagesCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesCountMax !== null && $mediaImagesCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesWidthMin !== null && $mediaImagesWidthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesWidthMax !== null && $mediaImagesWidthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesHeightMin !== null && $mediaImagesHeightMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesHeightMax !== null && $mediaImagesHeightMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMin !== null && $mediaImagesContentLengthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMax !== null && $mediaImagesContentLengthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaVideosCountMin !== null && $mediaVideosCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($mediaVideosCountMax !== null && $mediaVideosCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($sourceLinksInCountMin !== null && $sourceLinksInCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($sourceLinksInCountMax !== null && $sourceLinksInCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMin !== null && $sourceRankingsAlexaRankMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMax !== null && $sourceRankingsAlexaRankMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMin !== null && $socialSharesCountFacebookMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMax !== null && $socialSharesCountFacebookMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMin !== null && $socialSharesCountGooglePlusMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMax !== null && $socialSharesCountGooglePlusMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMin !== null && $socialSharesCountLinkedinMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMax !== null && $socialSharesCountLinkedinMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMin !== null && $socialSharesCountRedditMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMin" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMax !== null && $socialSharesCountRedditMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMax" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($perPage !== null && $perPage > 100) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listCoverages, must be smaller than or equal to 100.');
        }
        if ($perPage !== null && $perPage < 1) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listCoverages, must be bigger than or equal to 1.');
        }


        $resourcePath = '/coverages';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }
        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }
        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }
        // query params
        if ($translationsEnTitle !== null) {
            $queryParams['translations.en.title'] = $translationsEnTitle;
        }
        // query params
        if ($translationsEnBody !== null) {
            $queryParams['translations.en.body'] = $translationsEnBody;
        }
        // query params
        if ($translationsEnText !== null) {
            $queryParams['translations.en.text'] = $translationsEnText;
        }
        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }
        // query params
        if ($notLanguage !== null) {
            $queryParams['!language[]'] = $notLanguage;
        }
        // query params
        if ($publishedAtStart !== null) {
            $queryParams['published_at.start'] = $publishedAtStart;
        }
        // query params
        if ($publishedAtEnd !== null) {
            $queryParams['published_at.end'] = $publishedAtEnd;
        }
        // query params
        if ($categoriesTaxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categoriesTaxonomy;
        }
        // query params
        if ($categoriesConfident !== null) {
            $queryParams['categories.confident'] = $categoriesConfident;
        }
        // query params
        if ($categoriesId !== null) {
            $queryParams['categories.id[]'] = $categoriesId;
        }
        // query params
        if ($notCategoriesId !== null) {
            $queryParams['!categories.id[]'] = $notCategoriesId;
        }
        // query params
        if ($categoriesLevel !== null) {
            $queryParams['categories.level[]'] = $categoriesLevel;
        }
        // query params
        if ($notCategoriesLevel !== null) {
            $queryParams['!categories.level[]'] = $notCategoriesLevel;
        }
        // query params
        if ($entitiesTitleText !== null) {
            $queryParams['entities.title.text[]'] = $entitiesTitleText;
        }
        // query params
        if ($notEntitiesTitleText !== null) {
            $queryParams['!entities.title.text[]'] = $notEntitiesTitleText;
        }
        // query params
        if ($entitiesTitleType !== null) {
            $queryParams['entities.title.type[]'] = $entitiesTitleType;
        }
        // query params
        if ($notEntitiesTitleType !== null) {
            $queryParams['!entities.title.type[]'] = $notEntitiesTitleType;
        }
        // query params
        if ($entitiesTitleLinksDbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entitiesTitleLinksDbpedia;
        }
        // query params
        if ($notEntitiesTitleLinksDbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $notEntitiesTitleLinksDbpedia;
        }
        // query params
        if ($entitiesBodyText !== null) {
            $queryParams['entities.body.text[]'] = $entitiesBodyText;
        }
        // query params
        if ($notEntitiesBodyText !== null) {
            $queryParams['!entities.body.text[]'] = $notEntitiesBodyText;
        }
        // query params
        if ($entitiesBodyType !== null) {
            $queryParams['entities.body.type[]'] = $entitiesBodyType;
        }
        // query params
        if ($notEntitiesBodyType !== null) {
            $queryParams['!entities.body.type[]'] = $notEntitiesBodyType;
        }
        // query params
        if ($entitiesBodyLinksDbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entitiesBodyLinksDbpedia;
        }
        // query params
        if ($notEntitiesBodyLinksDbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $notEntitiesBodyLinksDbpedia;
        }
        // query params
        if ($sentimentTitlePolarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentimentTitlePolarity;
        }
        // query params
        if ($notSentimentTitlePolarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $notSentimentTitlePolarity;
        }
        // query params
        if ($sentimentBodyPolarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentimentBodyPolarity;
        }
        // query params
        if ($notSentimentBodyPolarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $notSentimentBodyPolarity;
        }
        // query params
        if ($mediaImagesCountMin !== null) {
            $queryParams['media.images.count.min'] = $mediaImagesCountMin;
        }
        // query params
        if ($mediaImagesCountMax !== null) {
            $queryParams['media.images.count.max'] = $mediaImagesCountMax;
        }
        // query params
        if ($mediaImagesWidthMin !== null) {
            $queryParams['media.images.width.min'] = $mediaImagesWidthMin;
        }
        // query params
        if ($mediaImagesWidthMax !== null) {
            $queryParams['media.images.width.max'] = $mediaImagesWidthMax;
        }
        // query params
        if ($mediaImagesHeightMin !== null) {
            $queryParams['media.images.height.min'] = $mediaImagesHeightMin;
        }
        // query params
        if ($mediaImagesHeightMax !== null) {
            $queryParams['media.images.height.max'] = $mediaImagesHeightMax;
        }
        // query params
        if ($mediaImagesContentLengthMin !== null) {
            $queryParams['media.images.content_length.min'] = $mediaImagesContentLengthMin;
        }
        // query params
        if ($mediaImagesContentLengthMax !== null) {
            $queryParams['media.images.content_length.max'] = $mediaImagesContentLengthMax;
        }
        // query params
        if ($mediaImagesFormat !== null) {
            $queryParams['media.images.format[]'] = $mediaImagesFormat;
        }
        // query params
        if ($notMediaImagesFormat !== null) {
            $queryParams['!media.images.format[]'] = $notMediaImagesFormat;
        }
        // query params
        if ($mediaVideosCountMin !== null) {
            $queryParams['media.videos.count.min'] = $mediaVideosCountMin;
        }
        // query params
        if ($mediaVideosCountMax !== null) {
            $queryParams['media.videos.count.max'] = $mediaVideosCountMax;
        }
        // query params
        if ($authorId !== null) {
            $queryParams['author.id[]'] = $authorId;
        }
        // query params
        if ($notAuthorId !== null) {
            $queryParams['!author.id[]'] = $notAuthorId;
        }
        // query params
        if ($authorName !== null) {
            $queryParams['author.name'] = $authorName;
        }
        // query params
        if ($notAuthorName !== null) {
            $queryParams['!author.name'] = $notAuthorName;
        }
        // query params
        if ($sourceId !== null) {
            $queryParams['source.id[]'] = $sourceId;
        }
        // query params
        if ($notSourceId !== null) {
            $queryParams['!source.id[]'] = $notSourceId;
        }
        // query params
        if ($sourceName !== null) {
            $queryParams['source.name[]'] = $sourceName;
        }
        // query params
        if ($notSourceName !== null) {
            $queryParams['!source.name[]'] = $notSourceName;
        }
        // query params
        if ($sourceDomain !== null) {
            $queryParams['source.domain[]'] = $sourceDomain;
        }
        // query params
        if ($notSourceDomain !== null) {
            $queryParams['!source.domain[]'] = $notSourceDomain;
        }
        // query params
        if ($sourceLocationsCountry !== null) {
            $queryParams['source.locations.country[]'] = $sourceLocationsCountry;
        }
        // query params
        if ($notSourceLocationsCountry !== null) {
            $queryParams['!source.locations.country[]'] = $notSourceLocationsCountry;
        }
        // query params
        if ($sourceLocationsState !== null) {
            $queryParams['source.locations.state[]'] = $sourceLocationsState;
        }
        // query params
        if ($notSourceLocationsState !== null) {
            $queryParams['!source.locations.state[]'] = $notSourceLocationsState;
        }
        // query params
        if ($sourceLocationsCity !== null) {
            $queryParams['source.locations.city[]'] = $sourceLocationsCity;
        }
        // query params
        if ($notSourceLocationsCity !== null) {
            $queryParams['!source.locations.city[]'] = $notSourceLocationsCity;
        }
        // query params
        if ($sourceScopesCountry !== null) {
            $queryParams['source.scopes.country[]'] = $sourceScopesCountry;
        }
        // query params
        if ($notSourceScopesCountry !== null) {
            $queryParams['!source.scopes.country[]'] = $notSourceScopesCountry;
        }
        // query params
        if ($sourceScopesState !== null) {
            $queryParams['source.scopes.state[]'] = $sourceScopesState;
        }
        // query params
        if ($notSourceScopesState !== null) {
            $queryParams['!source.scopes.state[]'] = $notSourceScopesState;
        }
        // query params
        if ($sourceScopesCity !== null) {
            $queryParams['source.scopes.city[]'] = $sourceScopesCity;
        }
        // query params
        if ($notSourceScopesCity !== null) {
            $queryParams['!source.scopes.city[]'] = $notSourceScopesCity;
        }
        // query params
        if ($sourceScopesLevel !== null) {
            $queryParams['source.scopes.level[]'] = $sourceScopesLevel;
        }
        // query params
        if ($notSourceScopesLevel !== null) {
            $queryParams['!source.scopes.level[]'] = $notSourceScopesLevel;
        }
        // query params
        if ($sourceLinksInCountMin !== null) {
            $queryParams['source.links_in_count.min'] = $sourceLinksInCountMin;
        }
        // query params
        if ($sourceLinksInCountMax !== null) {
            $queryParams['source.links_in_count.max'] = $sourceLinksInCountMax;
        }
        // query params
        if ($sourceRankingsAlexaRankMin !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $sourceRankingsAlexaRankMin;
        }
        // query params
        if ($sourceRankingsAlexaRankMax !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $sourceRankingsAlexaRankMax;
        }
        // query params
        if ($sourceRankingsAlexaCountry !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $sourceRankingsAlexaCountry;
        }
        // query params
        if ($socialSharesCountFacebookMin !== null) {
            $queryParams['social_shares_count.facebook.min'] = $socialSharesCountFacebookMin;
        }
        // query params
        if ($socialSharesCountFacebookMax !== null) {
            $queryParams['social_shares_count.facebook.max'] = $socialSharesCountFacebookMax;
        }
        // query params
        if ($socialSharesCountGooglePlusMin !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $socialSharesCountGooglePlusMin;
        }
        // query params
        if ($socialSharesCountGooglePlusMax !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $socialSharesCountGooglePlusMax;
        }
        // query params
        if ($socialSharesCountLinkedinMin !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $socialSharesCountLinkedinMin;
        }
        // query params
        if ($socialSharesCountLinkedinMax !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $socialSharesCountLinkedinMax;
        }
        // query params
        if ($socialSharesCountRedditMin !== null) {
            $queryParams['social_shares_count.reddit.min'] = $socialSharesCountRedditMin;
        }
        // query params
        if ($socialSharesCountRedditMax !== null) {
            $queryParams['social_shares_count.reddit.max'] = $socialSharesCountRedditMax;
        }
        // query params
        if ($clusters !== null) {
            $queryParams['clusters[]'] = $clusters;
        }
        // query params
        if ($return !== null) {
            $queryParams['return[]'] = $return;
        }
        // query params
        if ($storyId !== null) {
            $queryParams['story_id'] = $storyId;
        }
        // query params
        if ($storyUrl !== null) {
            $queryParams['story_url'] = $storyUrl;
        }
        // query params
        if ($storyTitle !== null) {
            $queryParams['story_title'] = $storyTitle;
        }
        // query params
        if ($storyBody !== null) {
            $queryParams['story_body'] = $storyBody;
        }
        // query params
        if ($storyPublishedAt !== null) {
            $queryParams['story_published_at'] = $storyPublishedAt;
        }
        // query params
        if ($storyLanguage !== null) {
            $queryParams['story_language'] = $storyLanguage;
        }
        // query params
        if ($perPage !== null) {
            $queryParams['per_page'] = $perPage;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listHistograms
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $intervalStart This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $intervalEnd This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $intervalWidth This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Histograms|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listHistograms($associative_array)
    {
        list($response) = $this->listHistogramsWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listHistogramsWithHttpInfo
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $intervalStart This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $intervalEnd This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $intervalWidth This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Histograms|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listHistogramsWithHttpInfo($associative_array)
    {
        $request = $this->listHistogramsRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Histograms' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Histograms', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Histograms';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Histograms',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listHistogramsAsync
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $intervalStart This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $intervalEnd This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $intervalWidth This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listHistogramsAsync($associative_array)
    {
        return $this->listHistogramsAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listHistogramsAsyncWithHttpInfo
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $intervalStart This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $intervalEnd This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $intervalWidth This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listHistogramsAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Histograms';
        $request = $this->listHistogramsRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listHistograms'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $intervalStart This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $intervalEnd This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $intervalWidth This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listHistogramsRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translationsEnTitle = array_key_exists('translationsEnTitle', $associative_array) ? $associative_array['translationsEnTitle'] : null;
        $translationsEnBody = array_key_exists('translationsEnBody', $associative_array) ? $associative_array['translationsEnBody'] : null;
        $translationsEnText = array_key_exists('translationsEnText', $associative_array) ? $associative_array['translationsEnText'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $notLanguage = array_key_exists('notLanguage', $associative_array) ? $associative_array['notLanguage'] : null;
        $publishedAtStart = array_key_exists('publishedAtStart', $associative_array) ? $associative_array['publishedAtStart'] : null;
        $publishedAtEnd = array_key_exists('publishedAtEnd', $associative_array) ? $associative_array['publishedAtEnd'] : null;
        $categoriesTaxonomy = array_key_exists('categoriesTaxonomy', $associative_array) ? $associative_array['categoriesTaxonomy'] : null;
        $categoriesConfident = array_key_exists('categoriesConfident', $associative_array) ? $associative_array['categoriesConfident'] : true;
        $categoriesId = array_key_exists('categoriesId', $associative_array) ? $associative_array['categoriesId'] : null;
        $notCategoriesId = array_key_exists('notCategoriesId', $associative_array) ? $associative_array['notCategoriesId'] : null;
        $categoriesLevel = array_key_exists('categoriesLevel', $associative_array) ? $associative_array['categoriesLevel'] : null;
        $notCategoriesLevel = array_key_exists('notCategoriesLevel', $associative_array) ? $associative_array['notCategoriesLevel'] : null;
        $entitiesTitleText = array_key_exists('entitiesTitleText', $associative_array) ? $associative_array['entitiesTitleText'] : null;
        $notEntitiesTitleText = array_key_exists('notEntitiesTitleText', $associative_array) ? $associative_array['notEntitiesTitleText'] : null;
        $entitiesTitleType = array_key_exists('entitiesTitleType', $associative_array) ? $associative_array['entitiesTitleType'] : null;
        $notEntitiesTitleType = array_key_exists('notEntitiesTitleType', $associative_array) ? $associative_array['notEntitiesTitleType'] : null;
        $entitiesTitleLinksDbpedia = array_key_exists('entitiesTitleLinksDbpedia', $associative_array) ? $associative_array['entitiesTitleLinksDbpedia'] : null;
        $notEntitiesTitleLinksDbpedia = array_key_exists('notEntitiesTitleLinksDbpedia', $associative_array) ? $associative_array['notEntitiesTitleLinksDbpedia'] : null;
        $entitiesBodyText = array_key_exists('entitiesBodyText', $associative_array) ? $associative_array['entitiesBodyText'] : null;
        $notEntitiesBodyText = array_key_exists('notEntitiesBodyText', $associative_array) ? $associative_array['notEntitiesBodyText'] : null;
        $entitiesBodyType = array_key_exists('entitiesBodyType', $associative_array) ? $associative_array['entitiesBodyType'] : null;
        $notEntitiesBodyType = array_key_exists('notEntitiesBodyType', $associative_array) ? $associative_array['notEntitiesBodyType'] : null;
        $entitiesBodyLinksDbpedia = array_key_exists('entitiesBodyLinksDbpedia', $associative_array) ? $associative_array['entitiesBodyLinksDbpedia'] : null;
        $notEntitiesBodyLinksDbpedia = array_key_exists('notEntitiesBodyLinksDbpedia', $associative_array) ? $associative_array['notEntitiesBodyLinksDbpedia'] : null;
        $sentimentTitlePolarity = array_key_exists('sentimentTitlePolarity', $associative_array) ? $associative_array['sentimentTitlePolarity'] : null;
        $notSentimentTitlePolarity = array_key_exists('notSentimentTitlePolarity', $associative_array) ? $associative_array['notSentimentTitlePolarity'] : null;
        $sentimentBodyPolarity = array_key_exists('sentimentBodyPolarity', $associative_array) ? $associative_array['sentimentBodyPolarity'] : null;
        $notSentimentBodyPolarity = array_key_exists('notSentimentBodyPolarity', $associative_array) ? $associative_array['notSentimentBodyPolarity'] : null;
        $mediaImagesCountMin = array_key_exists('mediaImagesCountMin', $associative_array) ? $associative_array['mediaImagesCountMin'] : null;
        $mediaImagesCountMax = array_key_exists('mediaImagesCountMax', $associative_array) ? $associative_array['mediaImagesCountMax'] : null;
        $mediaImagesWidthMin = array_key_exists('mediaImagesWidthMin', $associative_array) ? $associative_array['mediaImagesWidthMin'] : null;
        $mediaImagesWidthMax = array_key_exists('mediaImagesWidthMax', $associative_array) ? $associative_array['mediaImagesWidthMax'] : null;
        $mediaImagesHeightMin = array_key_exists('mediaImagesHeightMin', $associative_array) ? $associative_array['mediaImagesHeightMin'] : null;
        $mediaImagesHeightMax = array_key_exists('mediaImagesHeightMax', $associative_array) ? $associative_array['mediaImagesHeightMax'] : null;
        $mediaImagesContentLengthMin = array_key_exists('mediaImagesContentLengthMin', $associative_array) ? $associative_array['mediaImagesContentLengthMin'] : null;
        $mediaImagesContentLengthMax = array_key_exists('mediaImagesContentLengthMax', $associative_array) ? $associative_array['mediaImagesContentLengthMax'] : null;
        $mediaImagesFormat = array_key_exists('mediaImagesFormat', $associative_array) ? $associative_array['mediaImagesFormat'] : null;
        $notMediaImagesFormat = array_key_exists('notMediaImagesFormat', $associative_array) ? $associative_array['notMediaImagesFormat'] : null;
        $mediaVideosCountMin = array_key_exists('mediaVideosCountMin', $associative_array) ? $associative_array['mediaVideosCountMin'] : null;
        $mediaVideosCountMax = array_key_exists('mediaVideosCountMax', $associative_array) ? $associative_array['mediaVideosCountMax'] : null;
        $authorId = array_key_exists('authorId', $associative_array) ? $associative_array['authorId'] : null;
        $notAuthorId = array_key_exists('notAuthorId', $associative_array) ? $associative_array['notAuthorId'] : null;
        $authorName = array_key_exists('authorName', $associative_array) ? $associative_array['authorName'] : null;
        $notAuthorName = array_key_exists('notAuthorName', $associative_array) ? $associative_array['notAuthorName'] : null;
        $sourceId = array_key_exists('sourceId', $associative_array) ? $associative_array['sourceId'] : null;
        $notSourceId = array_key_exists('notSourceId', $associative_array) ? $associative_array['notSourceId'] : null;
        $sourceName = array_key_exists('sourceName', $associative_array) ? $associative_array['sourceName'] : null;
        $notSourceName = array_key_exists('notSourceName', $associative_array) ? $associative_array['notSourceName'] : null;
        $sourceDomain = array_key_exists('sourceDomain', $associative_array) ? $associative_array['sourceDomain'] : null;
        $notSourceDomain = array_key_exists('notSourceDomain', $associative_array) ? $associative_array['notSourceDomain'] : null;
        $sourceLocationsCountry = array_key_exists('sourceLocationsCountry', $associative_array) ? $associative_array['sourceLocationsCountry'] : null;
        $notSourceLocationsCountry = array_key_exists('notSourceLocationsCountry', $associative_array) ? $associative_array['notSourceLocationsCountry'] : null;
        $sourceLocationsState = array_key_exists('sourceLocationsState', $associative_array) ? $associative_array['sourceLocationsState'] : null;
        $notSourceLocationsState = array_key_exists('notSourceLocationsState', $associative_array) ? $associative_array['notSourceLocationsState'] : null;
        $sourceLocationsCity = array_key_exists('sourceLocationsCity', $associative_array) ? $associative_array['sourceLocationsCity'] : null;
        $notSourceLocationsCity = array_key_exists('notSourceLocationsCity', $associative_array) ? $associative_array['notSourceLocationsCity'] : null;
        $sourceScopesCountry = array_key_exists('sourceScopesCountry', $associative_array) ? $associative_array['sourceScopesCountry'] : null;
        $notSourceScopesCountry = array_key_exists('notSourceScopesCountry', $associative_array) ? $associative_array['notSourceScopesCountry'] : null;
        $sourceScopesState = array_key_exists('sourceScopesState', $associative_array) ? $associative_array['sourceScopesState'] : null;
        $notSourceScopesState = array_key_exists('notSourceScopesState', $associative_array) ? $associative_array['notSourceScopesState'] : null;
        $sourceScopesCity = array_key_exists('sourceScopesCity', $associative_array) ? $associative_array['sourceScopesCity'] : null;
        $notSourceScopesCity = array_key_exists('notSourceScopesCity', $associative_array) ? $associative_array['notSourceScopesCity'] : null;
        $sourceScopesLevel = array_key_exists('sourceScopesLevel', $associative_array) ? $associative_array['sourceScopesLevel'] : null;
        $notSourceScopesLevel = array_key_exists('notSourceScopesLevel', $associative_array) ? $associative_array['notSourceScopesLevel'] : null;
        $sourceLinksInCountMin = array_key_exists('sourceLinksInCountMin', $associative_array) ? $associative_array['sourceLinksInCountMin'] : null;
        $sourceLinksInCountMax = array_key_exists('sourceLinksInCountMax', $associative_array) ? $associative_array['sourceLinksInCountMax'] : null;
        $sourceRankingsAlexaRankMin = array_key_exists('sourceRankingsAlexaRankMin', $associative_array) ? $associative_array['sourceRankingsAlexaRankMin'] : null;
        $sourceRankingsAlexaRankMax = array_key_exists('sourceRankingsAlexaRankMax', $associative_array) ? $associative_array['sourceRankingsAlexaRankMax'] : null;
        $sourceRankingsAlexaCountry = array_key_exists('sourceRankingsAlexaCountry', $associative_array) ? $associative_array['sourceRankingsAlexaCountry'] : null;
        $socialSharesCountFacebookMin = array_key_exists('socialSharesCountFacebookMin', $associative_array) ? $associative_array['socialSharesCountFacebookMin'] : null;
        $socialSharesCountFacebookMax = array_key_exists('socialSharesCountFacebookMax', $associative_array) ? $associative_array['socialSharesCountFacebookMax'] : null;
        $socialSharesCountGooglePlusMin = array_key_exists('socialSharesCountGooglePlusMin', $associative_array) ? $associative_array['socialSharesCountGooglePlusMin'] : null;
        $socialSharesCountGooglePlusMax = array_key_exists('socialSharesCountGooglePlusMax', $associative_array) ? $associative_array['socialSharesCountGooglePlusMax'] : null;
        $socialSharesCountLinkedinMin = array_key_exists('socialSharesCountLinkedinMin', $associative_array) ? $associative_array['socialSharesCountLinkedinMin'] : null;
        $socialSharesCountLinkedinMax = array_key_exists('socialSharesCountLinkedinMax', $associative_array) ? $associative_array['socialSharesCountLinkedinMax'] : null;
        $socialSharesCountRedditMin = array_key_exists('socialSharesCountRedditMin', $associative_array) ? $associative_array['socialSharesCountRedditMin'] : null;
        $socialSharesCountRedditMax = array_key_exists('socialSharesCountRedditMax', $associative_array) ? $associative_array['socialSharesCountRedditMax'] : null;
        $intervalStart = array_key_exists('intervalStart', $associative_array) ? $associative_array['intervalStart'] : null;
        $intervalEnd = array_key_exists('intervalEnd', $associative_array) ? $associative_array['intervalEnd'] : null;
        $intervalWidth = array_key_exists('intervalWidth', $associative_array) ? $associative_array['intervalWidth'] : null;
        $field = array_key_exists('field', $associative_array) ? $associative_array['field'] : 'social_shares_count';

        if ($mediaImagesCountMin !== null && $mediaImagesCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesCountMax !== null && $mediaImagesCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesWidthMin !== null && $mediaImagesWidthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesWidthMax !== null && $mediaImagesWidthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesHeightMin !== null && $mediaImagesHeightMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesHeightMax !== null && $mediaImagesHeightMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMin !== null && $mediaImagesContentLengthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMax !== null && $mediaImagesContentLengthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaVideosCountMin !== null && $mediaVideosCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($mediaVideosCountMax !== null && $mediaVideosCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($sourceLinksInCountMin !== null && $sourceLinksInCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($sourceLinksInCountMax !== null && $sourceLinksInCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMin !== null && $sourceRankingsAlexaRankMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMax !== null && $sourceRankingsAlexaRankMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMin !== null && $socialSharesCountFacebookMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMax !== null && $socialSharesCountFacebookMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMin !== null && $socialSharesCountGooglePlusMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMax !== null && $socialSharesCountGooglePlusMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMin !== null && $socialSharesCountLinkedinMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMax !== null && $socialSharesCountLinkedinMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMin !== null && $socialSharesCountRedditMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMin" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMax !== null && $socialSharesCountRedditMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMax" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }


        $resourcePath = '/histograms';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }
        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }
        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }
        // query params
        if ($translationsEnTitle !== null) {
            $queryParams['translations.en.title'] = $translationsEnTitle;
        }
        // query params
        if ($translationsEnBody !== null) {
            $queryParams['translations.en.body'] = $translationsEnBody;
        }
        // query params
        if ($translationsEnText !== null) {
            $queryParams['translations.en.text'] = $translationsEnText;
        }
        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }
        // query params
        if ($notLanguage !== null) {
            $queryParams['!language[]'] = $notLanguage;
        }
        // query params
        if ($publishedAtStart !== null) {
            $queryParams['published_at.start'] = $publishedAtStart;
        }
        // query params
        if ($publishedAtEnd !== null) {
            $queryParams['published_at.end'] = $publishedAtEnd;
        }
        // query params
        if ($categoriesTaxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categoriesTaxonomy;
        }
        // query params
        if ($categoriesConfident !== null) {
            $queryParams['categories.confident'] = $categoriesConfident;
        }
        // query params
        if ($categoriesId !== null) {
            $queryParams['categories.id[]'] = $categoriesId;
        }
        // query params
        if ($notCategoriesId !== null) {
            $queryParams['!categories.id[]'] = $notCategoriesId;
        }
        // query params
        if ($categoriesLevel !== null) {
            $queryParams['categories.level[]'] = $categoriesLevel;
        }
        // query params
        if ($notCategoriesLevel !== null) {
            $queryParams['!categories.level[]'] = $notCategoriesLevel;
        }
        // query params
        if ($entitiesTitleText !== null) {
            $queryParams['entities.title.text[]'] = $entitiesTitleText;
        }
        // query params
        if ($notEntitiesTitleText !== null) {
            $queryParams['!entities.title.text[]'] = $notEntitiesTitleText;
        }
        // query params
        if ($entitiesTitleType !== null) {
            $queryParams['entities.title.type[]'] = $entitiesTitleType;
        }
        // query params
        if ($notEntitiesTitleType !== null) {
            $queryParams['!entities.title.type[]'] = $notEntitiesTitleType;
        }
        // query params
        if ($entitiesTitleLinksDbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entitiesTitleLinksDbpedia;
        }
        // query params
        if ($notEntitiesTitleLinksDbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $notEntitiesTitleLinksDbpedia;
        }
        // query params
        if ($entitiesBodyText !== null) {
            $queryParams['entities.body.text[]'] = $entitiesBodyText;
        }
        // query params
        if ($notEntitiesBodyText !== null) {
            $queryParams['!entities.body.text[]'] = $notEntitiesBodyText;
        }
        // query params
        if ($entitiesBodyType !== null) {
            $queryParams['entities.body.type[]'] = $entitiesBodyType;
        }
        // query params
        if ($notEntitiesBodyType !== null) {
            $queryParams['!entities.body.type[]'] = $notEntitiesBodyType;
        }
        // query params
        if ($entitiesBodyLinksDbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entitiesBodyLinksDbpedia;
        }
        // query params
        if ($notEntitiesBodyLinksDbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $notEntitiesBodyLinksDbpedia;
        }
        // query params
        if ($sentimentTitlePolarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentimentTitlePolarity;
        }
        // query params
        if ($notSentimentTitlePolarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $notSentimentTitlePolarity;
        }
        // query params
        if ($sentimentBodyPolarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentimentBodyPolarity;
        }
        // query params
        if ($notSentimentBodyPolarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $notSentimentBodyPolarity;
        }
        // query params
        if ($mediaImagesCountMin !== null) {
            $queryParams['media.images.count.min'] = $mediaImagesCountMin;
        }
        // query params
        if ($mediaImagesCountMax !== null) {
            $queryParams['media.images.count.max'] = $mediaImagesCountMax;
        }
        // query params
        if ($mediaImagesWidthMin !== null) {
            $queryParams['media.images.width.min'] = $mediaImagesWidthMin;
        }
        // query params
        if ($mediaImagesWidthMax !== null) {
            $queryParams['media.images.width.max'] = $mediaImagesWidthMax;
        }
        // query params
        if ($mediaImagesHeightMin !== null) {
            $queryParams['media.images.height.min'] = $mediaImagesHeightMin;
        }
        // query params
        if ($mediaImagesHeightMax !== null) {
            $queryParams['media.images.height.max'] = $mediaImagesHeightMax;
        }
        // query params
        if ($mediaImagesContentLengthMin !== null) {
            $queryParams['media.images.content_length.min'] = $mediaImagesContentLengthMin;
        }
        // query params
        if ($mediaImagesContentLengthMax !== null) {
            $queryParams['media.images.content_length.max'] = $mediaImagesContentLengthMax;
        }
        // query params
        if ($mediaImagesFormat !== null) {
            $queryParams['media.images.format[]'] = $mediaImagesFormat;
        }
        // query params
        if ($notMediaImagesFormat !== null) {
            $queryParams['!media.images.format[]'] = $notMediaImagesFormat;
        }
        // query params
        if ($mediaVideosCountMin !== null) {
            $queryParams['media.videos.count.min'] = $mediaVideosCountMin;
        }
        // query params
        if ($mediaVideosCountMax !== null) {
            $queryParams['media.videos.count.max'] = $mediaVideosCountMax;
        }
        // query params
        if ($authorId !== null) {
            $queryParams['author.id[]'] = $authorId;
        }
        // query params
        if ($notAuthorId !== null) {
            $queryParams['!author.id[]'] = $notAuthorId;
        }
        // query params
        if ($authorName !== null) {
            $queryParams['author.name'] = $authorName;
        }
        // query params
        if ($notAuthorName !== null) {
            $queryParams['!author.name'] = $notAuthorName;
        }
        // query params
        if ($sourceId !== null) {
            $queryParams['source.id[]'] = $sourceId;
        }
        // query params
        if ($notSourceId !== null) {
            $queryParams['!source.id[]'] = $notSourceId;
        }
        // query params
        if ($sourceName !== null) {
            $queryParams['source.name[]'] = $sourceName;
        }
        // query params
        if ($notSourceName !== null) {
            $queryParams['!source.name[]'] = $notSourceName;
        }
        // query params
        if ($sourceDomain !== null) {
            $queryParams['source.domain[]'] = $sourceDomain;
        }
        // query params
        if ($notSourceDomain !== null) {
            $queryParams['!source.domain[]'] = $notSourceDomain;
        }
        // query params
        if ($sourceLocationsCountry !== null) {
            $queryParams['source.locations.country[]'] = $sourceLocationsCountry;
        }
        // query params
        if ($notSourceLocationsCountry !== null) {
            $queryParams['!source.locations.country[]'] = $notSourceLocationsCountry;
        }
        // query params
        if ($sourceLocationsState !== null) {
            $queryParams['source.locations.state[]'] = $sourceLocationsState;
        }
        // query params
        if ($notSourceLocationsState !== null) {
            $queryParams['!source.locations.state[]'] = $notSourceLocationsState;
        }
        // query params
        if ($sourceLocationsCity !== null) {
            $queryParams['source.locations.city[]'] = $sourceLocationsCity;
        }
        // query params
        if ($notSourceLocationsCity !== null) {
            $queryParams['!source.locations.city[]'] = $notSourceLocationsCity;
        }
        // query params
        if ($sourceScopesCountry !== null) {
            $queryParams['source.scopes.country[]'] = $sourceScopesCountry;
        }
        // query params
        if ($notSourceScopesCountry !== null) {
            $queryParams['!source.scopes.country[]'] = $notSourceScopesCountry;
        }
        // query params
        if ($sourceScopesState !== null) {
            $queryParams['source.scopes.state[]'] = $sourceScopesState;
        }
        // query params
        if ($notSourceScopesState !== null) {
            $queryParams['!source.scopes.state[]'] = $notSourceScopesState;
        }
        // query params
        if ($sourceScopesCity !== null) {
            $queryParams['source.scopes.city[]'] = $sourceScopesCity;
        }
        // query params
        if ($notSourceScopesCity !== null) {
            $queryParams['!source.scopes.city[]'] = $notSourceScopesCity;
        }
        // query params
        if ($sourceScopesLevel !== null) {
            $queryParams['source.scopes.level[]'] = $sourceScopesLevel;
        }
        // query params
        if ($notSourceScopesLevel !== null) {
            $queryParams['!source.scopes.level[]'] = $notSourceScopesLevel;
        }
        // query params
        if ($sourceLinksInCountMin !== null) {
            $queryParams['source.links_in_count.min'] = $sourceLinksInCountMin;
        }
        // query params
        if ($sourceLinksInCountMax !== null) {
            $queryParams['source.links_in_count.max'] = $sourceLinksInCountMax;
        }
        // query params
        if ($sourceRankingsAlexaRankMin !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $sourceRankingsAlexaRankMin;
        }
        // query params
        if ($sourceRankingsAlexaRankMax !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $sourceRankingsAlexaRankMax;
        }
        // query params
        if ($sourceRankingsAlexaCountry !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $sourceRankingsAlexaCountry;
        }
        // query params
        if ($socialSharesCountFacebookMin !== null) {
            $queryParams['social_shares_count.facebook.min'] = $socialSharesCountFacebookMin;
        }
        // query params
        if ($socialSharesCountFacebookMax !== null) {
            $queryParams['social_shares_count.facebook.max'] = $socialSharesCountFacebookMax;
        }
        // query params
        if ($socialSharesCountGooglePlusMin !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $socialSharesCountGooglePlusMin;
        }
        // query params
        if ($socialSharesCountGooglePlusMax !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $socialSharesCountGooglePlusMax;
        }
        // query params
        if ($socialSharesCountLinkedinMin !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $socialSharesCountLinkedinMin;
        }
        // query params
        if ($socialSharesCountLinkedinMax !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $socialSharesCountLinkedinMax;
        }
        // query params
        if ($socialSharesCountRedditMin !== null) {
            $queryParams['social_shares_count.reddit.min'] = $socialSharesCountRedditMin;
        }
        // query params
        if ($socialSharesCountRedditMax !== null) {
            $queryParams['social_shares_count.reddit.max'] = $socialSharesCountRedditMax;
        }
        // query params
        if ($intervalStart !== null) {
            $queryParams['interval.start'] = $intervalStart;
        }
        // query params
        if ($intervalEnd !== null) {
            $queryParams['interval.end'] = $intervalEnd;
        }
        // query params
        if ($intervalWidth !== null) {
            $queryParams['interval.width'] = $intervalWidth;
        }
        // query params
        if ($field !== null) {
            $queryParams['field'] = $field;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listRelatedStories
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  string $boostBy This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\RelatedStories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listRelatedStories($associative_array)
    {
        list($response) = $this->listRelatedStoriesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listRelatedStoriesWithHttpInfo
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  string $boostBy This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\RelatedStories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listRelatedStoriesWithHttpInfo($associative_array)
    {
        $request = $this->listRelatedStoriesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\RelatedStories' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\RelatedStories', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\RelatedStories';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\RelatedStories',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listRelatedStoriesAsync
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  string $boostBy This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listRelatedStoriesAsync($associative_array)
    {
        return $this->listRelatedStoriesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listRelatedStoriesAsyncWithHttpInfo
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  string $boostBy This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listRelatedStoriesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\RelatedStories';
        $request = $this->listRelatedStoriesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listRelatedStories'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $storyId A story id (optional)
     * @param  string $storyUrl An article or webpage (optional)
     * @param  string $storyTitle Title of the article (optional)
     * @param  string $storyBody Body of the article (optional)
     * @param  string $boostBy This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $storyLanguage This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $perPage This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listRelatedStoriesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translationsEnTitle = array_key_exists('translationsEnTitle', $associative_array) ? $associative_array['translationsEnTitle'] : null;
        $translationsEnBody = array_key_exists('translationsEnBody', $associative_array) ? $associative_array['translationsEnBody'] : null;
        $translationsEnText = array_key_exists('translationsEnText', $associative_array) ? $associative_array['translationsEnText'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $notLanguage = array_key_exists('notLanguage', $associative_array) ? $associative_array['notLanguage'] : null;
        $publishedAtStart = array_key_exists('publishedAtStart', $associative_array) ? $associative_array['publishedAtStart'] : null;
        $publishedAtEnd = array_key_exists('publishedAtEnd', $associative_array) ? $associative_array['publishedAtEnd'] : null;
        $categoriesTaxonomy = array_key_exists('categoriesTaxonomy', $associative_array) ? $associative_array['categoriesTaxonomy'] : null;
        $categoriesConfident = array_key_exists('categoriesConfident', $associative_array) ? $associative_array['categoriesConfident'] : true;
        $categoriesId = array_key_exists('categoriesId', $associative_array) ? $associative_array['categoriesId'] : null;
        $notCategoriesId = array_key_exists('notCategoriesId', $associative_array) ? $associative_array['notCategoriesId'] : null;
        $categoriesLevel = array_key_exists('categoriesLevel', $associative_array) ? $associative_array['categoriesLevel'] : null;
        $notCategoriesLevel = array_key_exists('notCategoriesLevel', $associative_array) ? $associative_array['notCategoriesLevel'] : null;
        $entitiesTitleText = array_key_exists('entitiesTitleText', $associative_array) ? $associative_array['entitiesTitleText'] : null;
        $notEntitiesTitleText = array_key_exists('notEntitiesTitleText', $associative_array) ? $associative_array['notEntitiesTitleText'] : null;
        $entitiesTitleType = array_key_exists('entitiesTitleType', $associative_array) ? $associative_array['entitiesTitleType'] : null;
        $notEntitiesTitleType = array_key_exists('notEntitiesTitleType', $associative_array) ? $associative_array['notEntitiesTitleType'] : null;
        $entitiesTitleLinksDbpedia = array_key_exists('entitiesTitleLinksDbpedia', $associative_array) ? $associative_array['entitiesTitleLinksDbpedia'] : null;
        $notEntitiesTitleLinksDbpedia = array_key_exists('notEntitiesTitleLinksDbpedia', $associative_array) ? $associative_array['notEntitiesTitleLinksDbpedia'] : null;
        $entitiesBodyText = array_key_exists('entitiesBodyText', $associative_array) ? $associative_array['entitiesBodyText'] : null;
        $notEntitiesBodyText = array_key_exists('notEntitiesBodyText', $associative_array) ? $associative_array['notEntitiesBodyText'] : null;
        $entitiesBodyType = array_key_exists('entitiesBodyType', $associative_array) ? $associative_array['entitiesBodyType'] : null;
        $notEntitiesBodyType = array_key_exists('notEntitiesBodyType', $associative_array) ? $associative_array['notEntitiesBodyType'] : null;
        $entitiesBodyLinksDbpedia = array_key_exists('entitiesBodyLinksDbpedia', $associative_array) ? $associative_array['entitiesBodyLinksDbpedia'] : null;
        $notEntitiesBodyLinksDbpedia = array_key_exists('notEntitiesBodyLinksDbpedia', $associative_array) ? $associative_array['notEntitiesBodyLinksDbpedia'] : null;
        $sentimentTitlePolarity = array_key_exists('sentimentTitlePolarity', $associative_array) ? $associative_array['sentimentTitlePolarity'] : null;
        $notSentimentTitlePolarity = array_key_exists('notSentimentTitlePolarity', $associative_array) ? $associative_array['notSentimentTitlePolarity'] : null;
        $sentimentBodyPolarity = array_key_exists('sentimentBodyPolarity', $associative_array) ? $associative_array['sentimentBodyPolarity'] : null;
        $notSentimentBodyPolarity = array_key_exists('notSentimentBodyPolarity', $associative_array) ? $associative_array['notSentimentBodyPolarity'] : null;
        $mediaImagesCountMin = array_key_exists('mediaImagesCountMin', $associative_array) ? $associative_array['mediaImagesCountMin'] : null;
        $mediaImagesCountMax = array_key_exists('mediaImagesCountMax', $associative_array) ? $associative_array['mediaImagesCountMax'] : null;
        $mediaImagesWidthMin = array_key_exists('mediaImagesWidthMin', $associative_array) ? $associative_array['mediaImagesWidthMin'] : null;
        $mediaImagesWidthMax = array_key_exists('mediaImagesWidthMax', $associative_array) ? $associative_array['mediaImagesWidthMax'] : null;
        $mediaImagesHeightMin = array_key_exists('mediaImagesHeightMin', $associative_array) ? $associative_array['mediaImagesHeightMin'] : null;
        $mediaImagesHeightMax = array_key_exists('mediaImagesHeightMax', $associative_array) ? $associative_array['mediaImagesHeightMax'] : null;
        $mediaImagesContentLengthMin = array_key_exists('mediaImagesContentLengthMin', $associative_array) ? $associative_array['mediaImagesContentLengthMin'] : null;
        $mediaImagesContentLengthMax = array_key_exists('mediaImagesContentLengthMax', $associative_array) ? $associative_array['mediaImagesContentLengthMax'] : null;
        $mediaImagesFormat = array_key_exists('mediaImagesFormat', $associative_array) ? $associative_array['mediaImagesFormat'] : null;
        $notMediaImagesFormat = array_key_exists('notMediaImagesFormat', $associative_array) ? $associative_array['notMediaImagesFormat'] : null;
        $mediaVideosCountMin = array_key_exists('mediaVideosCountMin', $associative_array) ? $associative_array['mediaVideosCountMin'] : null;
        $mediaVideosCountMax = array_key_exists('mediaVideosCountMax', $associative_array) ? $associative_array['mediaVideosCountMax'] : null;
        $authorId = array_key_exists('authorId', $associative_array) ? $associative_array['authorId'] : null;
        $notAuthorId = array_key_exists('notAuthorId', $associative_array) ? $associative_array['notAuthorId'] : null;
        $authorName = array_key_exists('authorName', $associative_array) ? $associative_array['authorName'] : null;
        $notAuthorName = array_key_exists('notAuthorName', $associative_array) ? $associative_array['notAuthorName'] : null;
        $sourceId = array_key_exists('sourceId', $associative_array) ? $associative_array['sourceId'] : null;
        $notSourceId = array_key_exists('notSourceId', $associative_array) ? $associative_array['notSourceId'] : null;
        $sourceName = array_key_exists('sourceName', $associative_array) ? $associative_array['sourceName'] : null;
        $notSourceName = array_key_exists('notSourceName', $associative_array) ? $associative_array['notSourceName'] : null;
        $sourceDomain = array_key_exists('sourceDomain', $associative_array) ? $associative_array['sourceDomain'] : null;
        $notSourceDomain = array_key_exists('notSourceDomain', $associative_array) ? $associative_array['notSourceDomain'] : null;
        $sourceLocationsCountry = array_key_exists('sourceLocationsCountry', $associative_array) ? $associative_array['sourceLocationsCountry'] : null;
        $notSourceLocationsCountry = array_key_exists('notSourceLocationsCountry', $associative_array) ? $associative_array['notSourceLocationsCountry'] : null;
        $sourceLocationsState = array_key_exists('sourceLocationsState', $associative_array) ? $associative_array['sourceLocationsState'] : null;
        $notSourceLocationsState = array_key_exists('notSourceLocationsState', $associative_array) ? $associative_array['notSourceLocationsState'] : null;
        $sourceLocationsCity = array_key_exists('sourceLocationsCity', $associative_array) ? $associative_array['sourceLocationsCity'] : null;
        $notSourceLocationsCity = array_key_exists('notSourceLocationsCity', $associative_array) ? $associative_array['notSourceLocationsCity'] : null;
        $sourceScopesCountry = array_key_exists('sourceScopesCountry', $associative_array) ? $associative_array['sourceScopesCountry'] : null;
        $notSourceScopesCountry = array_key_exists('notSourceScopesCountry', $associative_array) ? $associative_array['notSourceScopesCountry'] : null;
        $sourceScopesState = array_key_exists('sourceScopesState', $associative_array) ? $associative_array['sourceScopesState'] : null;
        $notSourceScopesState = array_key_exists('notSourceScopesState', $associative_array) ? $associative_array['notSourceScopesState'] : null;
        $sourceScopesCity = array_key_exists('sourceScopesCity', $associative_array) ? $associative_array['sourceScopesCity'] : null;
        $notSourceScopesCity = array_key_exists('notSourceScopesCity', $associative_array) ? $associative_array['notSourceScopesCity'] : null;
        $sourceScopesLevel = array_key_exists('sourceScopesLevel', $associative_array) ? $associative_array['sourceScopesLevel'] : null;
        $notSourceScopesLevel = array_key_exists('notSourceScopesLevel', $associative_array) ? $associative_array['notSourceScopesLevel'] : null;
        $sourceLinksInCountMin = array_key_exists('sourceLinksInCountMin', $associative_array) ? $associative_array['sourceLinksInCountMin'] : null;
        $sourceLinksInCountMax = array_key_exists('sourceLinksInCountMax', $associative_array) ? $associative_array['sourceLinksInCountMax'] : null;
        $sourceRankingsAlexaRankMin = array_key_exists('sourceRankingsAlexaRankMin', $associative_array) ? $associative_array['sourceRankingsAlexaRankMin'] : null;
        $sourceRankingsAlexaRankMax = array_key_exists('sourceRankingsAlexaRankMax', $associative_array) ? $associative_array['sourceRankingsAlexaRankMax'] : null;
        $sourceRankingsAlexaCountry = array_key_exists('sourceRankingsAlexaCountry', $associative_array) ? $associative_array['sourceRankingsAlexaCountry'] : null;
        $socialSharesCountFacebookMin = array_key_exists('socialSharesCountFacebookMin', $associative_array) ? $associative_array['socialSharesCountFacebookMin'] : null;
        $socialSharesCountFacebookMax = array_key_exists('socialSharesCountFacebookMax', $associative_array) ? $associative_array['socialSharesCountFacebookMax'] : null;
        $socialSharesCountGooglePlusMin = array_key_exists('socialSharesCountGooglePlusMin', $associative_array) ? $associative_array['socialSharesCountGooglePlusMin'] : null;
        $socialSharesCountGooglePlusMax = array_key_exists('socialSharesCountGooglePlusMax', $associative_array) ? $associative_array['socialSharesCountGooglePlusMax'] : null;
        $socialSharesCountLinkedinMin = array_key_exists('socialSharesCountLinkedinMin', $associative_array) ? $associative_array['socialSharesCountLinkedinMin'] : null;
        $socialSharesCountLinkedinMax = array_key_exists('socialSharesCountLinkedinMax', $associative_array) ? $associative_array['socialSharesCountLinkedinMax'] : null;
        $socialSharesCountRedditMin = array_key_exists('socialSharesCountRedditMin', $associative_array) ? $associative_array['socialSharesCountRedditMin'] : null;
        $socialSharesCountRedditMax = array_key_exists('socialSharesCountRedditMax', $associative_array) ? $associative_array['socialSharesCountRedditMax'] : null;
        $clusters = array_key_exists('clusters', $associative_array) ? $associative_array['clusters'] : null;
        $return = array_key_exists('return', $associative_array) ? $associative_array['return'] : null;
        $storyId = array_key_exists('storyId', $associative_array) ? $associative_array['storyId'] : null;
        $storyUrl = array_key_exists('storyUrl', $associative_array) ? $associative_array['storyUrl'] : null;
        $storyTitle = array_key_exists('storyTitle', $associative_array) ? $associative_array['storyTitle'] : null;
        $storyBody = array_key_exists('storyBody', $associative_array) ? $associative_array['storyBody'] : null;
        $boostBy = array_key_exists('boostBy', $associative_array) ? $associative_array['boostBy'] : null;
        $storyLanguage = array_key_exists('storyLanguage', $associative_array) ? $associative_array['storyLanguage'] : 'auto';
        $perPage = array_key_exists('perPage', $associative_array) ? $associative_array['perPage'] : 3;

        if ($mediaImagesCountMin !== null && $mediaImagesCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesCountMax !== null && $mediaImagesCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesWidthMin !== null && $mediaImagesWidthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesWidthMax !== null && $mediaImagesWidthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesHeightMin !== null && $mediaImagesHeightMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesHeightMax !== null && $mediaImagesHeightMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMin !== null && $mediaImagesContentLengthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMax !== null && $mediaImagesContentLengthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaVideosCountMin !== null && $mediaVideosCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($mediaVideosCountMax !== null && $mediaVideosCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($sourceLinksInCountMin !== null && $sourceLinksInCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($sourceLinksInCountMax !== null && $sourceLinksInCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMin !== null && $sourceRankingsAlexaRankMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMax !== null && $sourceRankingsAlexaRankMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMin !== null && $socialSharesCountFacebookMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMax !== null && $socialSharesCountFacebookMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMin !== null && $socialSharesCountGooglePlusMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMax !== null && $socialSharesCountGooglePlusMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMin !== null && $socialSharesCountLinkedinMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMax !== null && $socialSharesCountLinkedinMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMin !== null && $socialSharesCountRedditMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMin" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMax !== null && $socialSharesCountRedditMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMax" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($perPage !== null && $perPage > 100) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listRelatedStories, must be smaller than or equal to 100.');
        }
        if ($perPage !== null && $perPage < 1) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listRelatedStories, must be bigger than or equal to 1.');
        }


        $resourcePath = '/related_stories';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }
        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }
        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }
        // query params
        if ($translationsEnTitle !== null) {
            $queryParams['translations.en.title'] = $translationsEnTitle;
        }
        // query params
        if ($translationsEnBody !== null) {
            $queryParams['translations.en.body'] = $translationsEnBody;
        }
        // query params
        if ($translationsEnText !== null) {
            $queryParams['translations.en.text'] = $translationsEnText;
        }
        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }
        // query params
        if ($notLanguage !== null) {
            $queryParams['!language[]'] = $notLanguage;
        }
        // query params
        if ($publishedAtStart !== null) {
            $queryParams['published_at.start'] = $publishedAtStart;
        }
        // query params
        if ($publishedAtEnd !== null) {
            $queryParams['published_at.end'] = $publishedAtEnd;
        }
        // query params
        if ($categoriesTaxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categoriesTaxonomy;
        }
        // query params
        if ($categoriesConfident !== null) {
            $queryParams['categories.confident'] = $categoriesConfident;
        }
        // query params
        if ($categoriesId !== null) {
            $queryParams['categories.id[]'] = $categoriesId;
        }
        // query params
        if ($notCategoriesId !== null) {
            $queryParams['!categories.id[]'] = $notCategoriesId;
        }
        // query params
        if ($categoriesLevel !== null) {
            $queryParams['categories.level[]'] = $categoriesLevel;
        }
        // query params
        if ($notCategoriesLevel !== null) {
            $queryParams['!categories.level[]'] = $notCategoriesLevel;
        }
        // query params
        if ($entitiesTitleText !== null) {
            $queryParams['entities.title.text[]'] = $entitiesTitleText;
        }
        // query params
        if ($notEntitiesTitleText !== null) {
            $queryParams['!entities.title.text[]'] = $notEntitiesTitleText;
        }
        // query params
        if ($entitiesTitleType !== null) {
            $queryParams['entities.title.type[]'] = $entitiesTitleType;
        }
        // query params
        if ($notEntitiesTitleType !== null) {
            $queryParams['!entities.title.type[]'] = $notEntitiesTitleType;
        }
        // query params
        if ($entitiesTitleLinksDbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entitiesTitleLinksDbpedia;
        }
        // query params
        if ($notEntitiesTitleLinksDbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $notEntitiesTitleLinksDbpedia;
        }
        // query params
        if ($entitiesBodyText !== null) {
            $queryParams['entities.body.text[]'] = $entitiesBodyText;
        }
        // query params
        if ($notEntitiesBodyText !== null) {
            $queryParams['!entities.body.text[]'] = $notEntitiesBodyText;
        }
        // query params
        if ($entitiesBodyType !== null) {
            $queryParams['entities.body.type[]'] = $entitiesBodyType;
        }
        // query params
        if ($notEntitiesBodyType !== null) {
            $queryParams['!entities.body.type[]'] = $notEntitiesBodyType;
        }
        // query params
        if ($entitiesBodyLinksDbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entitiesBodyLinksDbpedia;
        }
        // query params
        if ($notEntitiesBodyLinksDbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $notEntitiesBodyLinksDbpedia;
        }
        // query params
        if ($sentimentTitlePolarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentimentTitlePolarity;
        }
        // query params
        if ($notSentimentTitlePolarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $notSentimentTitlePolarity;
        }
        // query params
        if ($sentimentBodyPolarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentimentBodyPolarity;
        }
        // query params
        if ($notSentimentBodyPolarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $notSentimentBodyPolarity;
        }
        // query params
        if ($mediaImagesCountMin !== null) {
            $queryParams['media.images.count.min'] = $mediaImagesCountMin;
        }
        // query params
        if ($mediaImagesCountMax !== null) {
            $queryParams['media.images.count.max'] = $mediaImagesCountMax;
        }
        // query params
        if ($mediaImagesWidthMin !== null) {
            $queryParams['media.images.width.min'] = $mediaImagesWidthMin;
        }
        // query params
        if ($mediaImagesWidthMax !== null) {
            $queryParams['media.images.width.max'] = $mediaImagesWidthMax;
        }
        // query params
        if ($mediaImagesHeightMin !== null) {
            $queryParams['media.images.height.min'] = $mediaImagesHeightMin;
        }
        // query params
        if ($mediaImagesHeightMax !== null) {
            $queryParams['media.images.height.max'] = $mediaImagesHeightMax;
        }
        // query params
        if ($mediaImagesContentLengthMin !== null) {
            $queryParams['media.images.content_length.min'] = $mediaImagesContentLengthMin;
        }
        // query params
        if ($mediaImagesContentLengthMax !== null) {
            $queryParams['media.images.content_length.max'] = $mediaImagesContentLengthMax;
        }
        // query params
        if ($mediaImagesFormat !== null) {
            $queryParams['media.images.format[]'] = $mediaImagesFormat;
        }
        // query params
        if ($notMediaImagesFormat !== null) {
            $queryParams['!media.images.format[]'] = $notMediaImagesFormat;
        }
        // query params
        if ($mediaVideosCountMin !== null) {
            $queryParams['media.videos.count.min'] = $mediaVideosCountMin;
        }
        // query params
        if ($mediaVideosCountMax !== null) {
            $queryParams['media.videos.count.max'] = $mediaVideosCountMax;
        }
        // query params
        if ($authorId !== null) {
            $queryParams['author.id[]'] = $authorId;
        }
        // query params
        if ($notAuthorId !== null) {
            $queryParams['!author.id[]'] = $notAuthorId;
        }
        // query params
        if ($authorName !== null) {
            $queryParams['author.name'] = $authorName;
        }
        // query params
        if ($notAuthorName !== null) {
            $queryParams['!author.name'] = $notAuthorName;
        }
        // query params
        if ($sourceId !== null) {
            $queryParams['source.id[]'] = $sourceId;
        }
        // query params
        if ($notSourceId !== null) {
            $queryParams['!source.id[]'] = $notSourceId;
        }
        // query params
        if ($sourceName !== null) {
            $queryParams['source.name[]'] = $sourceName;
        }
        // query params
        if ($notSourceName !== null) {
            $queryParams['!source.name[]'] = $notSourceName;
        }
        // query params
        if ($sourceDomain !== null) {
            $queryParams['source.domain[]'] = $sourceDomain;
        }
        // query params
        if ($notSourceDomain !== null) {
            $queryParams['!source.domain[]'] = $notSourceDomain;
        }
        // query params
        if ($sourceLocationsCountry !== null) {
            $queryParams['source.locations.country[]'] = $sourceLocationsCountry;
        }
        // query params
        if ($notSourceLocationsCountry !== null) {
            $queryParams['!source.locations.country[]'] = $notSourceLocationsCountry;
        }
        // query params
        if ($sourceLocationsState !== null) {
            $queryParams['source.locations.state[]'] = $sourceLocationsState;
        }
        // query params
        if ($notSourceLocationsState !== null) {
            $queryParams['!source.locations.state[]'] = $notSourceLocationsState;
        }
        // query params
        if ($sourceLocationsCity !== null) {
            $queryParams['source.locations.city[]'] = $sourceLocationsCity;
        }
        // query params
        if ($notSourceLocationsCity !== null) {
            $queryParams['!source.locations.city[]'] = $notSourceLocationsCity;
        }
        // query params
        if ($sourceScopesCountry !== null) {
            $queryParams['source.scopes.country[]'] = $sourceScopesCountry;
        }
        // query params
        if ($notSourceScopesCountry !== null) {
            $queryParams['!source.scopes.country[]'] = $notSourceScopesCountry;
        }
        // query params
        if ($sourceScopesState !== null) {
            $queryParams['source.scopes.state[]'] = $sourceScopesState;
        }
        // query params
        if ($notSourceScopesState !== null) {
            $queryParams['!source.scopes.state[]'] = $notSourceScopesState;
        }
        // query params
        if ($sourceScopesCity !== null) {
            $queryParams['source.scopes.city[]'] = $sourceScopesCity;
        }
        // query params
        if ($notSourceScopesCity !== null) {
            $queryParams['!source.scopes.city[]'] = $notSourceScopesCity;
        }
        // query params
        if ($sourceScopesLevel !== null) {
            $queryParams['source.scopes.level[]'] = $sourceScopesLevel;
        }
        // query params
        if ($notSourceScopesLevel !== null) {
            $queryParams['!source.scopes.level[]'] = $notSourceScopesLevel;
        }
        // query params
        if ($sourceLinksInCountMin !== null) {
            $queryParams['source.links_in_count.min'] = $sourceLinksInCountMin;
        }
        // query params
        if ($sourceLinksInCountMax !== null) {
            $queryParams['source.links_in_count.max'] = $sourceLinksInCountMax;
        }
        // query params
        if ($sourceRankingsAlexaRankMin !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $sourceRankingsAlexaRankMin;
        }
        // query params
        if ($sourceRankingsAlexaRankMax !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $sourceRankingsAlexaRankMax;
        }
        // query params
        if ($sourceRankingsAlexaCountry !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $sourceRankingsAlexaCountry;
        }
        // query params
        if ($socialSharesCountFacebookMin !== null) {
            $queryParams['social_shares_count.facebook.min'] = $socialSharesCountFacebookMin;
        }
        // query params
        if ($socialSharesCountFacebookMax !== null) {
            $queryParams['social_shares_count.facebook.max'] = $socialSharesCountFacebookMax;
        }
        // query params
        if ($socialSharesCountGooglePlusMin !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $socialSharesCountGooglePlusMin;
        }
        // query params
        if ($socialSharesCountGooglePlusMax !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $socialSharesCountGooglePlusMax;
        }
        // query params
        if ($socialSharesCountLinkedinMin !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $socialSharesCountLinkedinMin;
        }
        // query params
        if ($socialSharesCountLinkedinMax !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $socialSharesCountLinkedinMax;
        }
        // query params
        if ($socialSharesCountRedditMin !== null) {
            $queryParams['social_shares_count.reddit.min'] = $socialSharesCountRedditMin;
        }
        // query params
        if ($socialSharesCountRedditMax !== null) {
            $queryParams['social_shares_count.reddit.max'] = $socialSharesCountRedditMax;
        }
        // query params
        if ($clusters !== null) {
            $queryParams['clusters[]'] = $clusters;
        }
        // query params
        if ($return !== null) {
            $queryParams['return[]'] = $return;
        }
        // query params
        if ($storyId !== null) {
            $queryParams['story_id'] = $storyId;
        }
        // query params
        if ($storyUrl !== null) {
            $queryParams['story_url'] = $storyUrl;
        }
        // query params
        if ($storyTitle !== null) {
            $queryParams['story_title'] = $storyTitle;
        }
        // query params
        if ($storyBody !== null) {
            $queryParams['story_body'] = $storyBody;
        }
        // query params
        if ($boostBy !== null) {
            $queryParams['boost_by'] = $boostBy;
        }
        // query params
        if ($storyLanguage !== null) {
            $queryParams['story_language'] = $storyLanguage;
        }
        // query params
        if ($perPage !== null) {
            $queryParams['per_page'] = $perPage;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listStories
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sortBy This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sortDirection This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $perPage This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Stories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listStories($associative_array)
    {
        list($response) = $this->listStoriesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listStoriesWithHttpInfo
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sortBy This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sortDirection This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $perPage This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Stories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listStoriesWithHttpInfo($associative_array)
    {
        $request = $this->listStoriesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Stories' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Stories', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Stories';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Stories',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listStoriesAsync
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sortBy This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sortDirection This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $perPage This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listStoriesAsync($associative_array)
    {
        return $this->listStoriesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listStoriesAsyncWithHttpInfo
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sortBy This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sortDirection This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $perPage This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listStoriesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Stories';
        $request = $this->listStoriesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listStories'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sortBy This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sortDirection This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $perPage This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listStoriesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translationsEnTitle = array_key_exists('translationsEnTitle', $associative_array) ? $associative_array['translationsEnTitle'] : null;
        $translationsEnBody = array_key_exists('translationsEnBody', $associative_array) ? $associative_array['translationsEnBody'] : null;
        $translationsEnText = array_key_exists('translationsEnText', $associative_array) ? $associative_array['translationsEnText'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $notLanguage = array_key_exists('notLanguage', $associative_array) ? $associative_array['notLanguage'] : null;
        $publishedAtStart = array_key_exists('publishedAtStart', $associative_array) ? $associative_array['publishedAtStart'] : null;
        $publishedAtEnd = array_key_exists('publishedAtEnd', $associative_array) ? $associative_array['publishedAtEnd'] : null;
        $categoriesTaxonomy = array_key_exists('categoriesTaxonomy', $associative_array) ? $associative_array['categoriesTaxonomy'] : null;
        $categoriesConfident = array_key_exists('categoriesConfident', $associative_array) ? $associative_array['categoriesConfident'] : true;
        $categoriesId = array_key_exists('categoriesId', $associative_array) ? $associative_array['categoriesId'] : null;
        $notCategoriesId = array_key_exists('notCategoriesId', $associative_array) ? $associative_array['notCategoriesId'] : null;
        $categoriesLevel = array_key_exists('categoriesLevel', $associative_array) ? $associative_array['categoriesLevel'] : null;
        $notCategoriesLevel = array_key_exists('notCategoriesLevel', $associative_array) ? $associative_array['notCategoriesLevel'] : null;
        $entitiesTitleText = array_key_exists('entitiesTitleText', $associative_array) ? $associative_array['entitiesTitleText'] : null;
        $notEntitiesTitleText = array_key_exists('notEntitiesTitleText', $associative_array) ? $associative_array['notEntitiesTitleText'] : null;
        $entitiesTitleType = array_key_exists('entitiesTitleType', $associative_array) ? $associative_array['entitiesTitleType'] : null;
        $notEntitiesTitleType = array_key_exists('notEntitiesTitleType', $associative_array) ? $associative_array['notEntitiesTitleType'] : null;
        $entitiesTitleLinksDbpedia = array_key_exists('entitiesTitleLinksDbpedia', $associative_array) ? $associative_array['entitiesTitleLinksDbpedia'] : null;
        $notEntitiesTitleLinksDbpedia = array_key_exists('notEntitiesTitleLinksDbpedia', $associative_array) ? $associative_array['notEntitiesTitleLinksDbpedia'] : null;
        $entitiesBodyText = array_key_exists('entitiesBodyText', $associative_array) ? $associative_array['entitiesBodyText'] : null;
        $notEntitiesBodyText = array_key_exists('notEntitiesBodyText', $associative_array) ? $associative_array['notEntitiesBodyText'] : null;
        $entitiesBodyType = array_key_exists('entitiesBodyType', $associative_array) ? $associative_array['entitiesBodyType'] : null;
        $notEntitiesBodyType = array_key_exists('notEntitiesBodyType', $associative_array) ? $associative_array['notEntitiesBodyType'] : null;
        $entitiesBodyLinksDbpedia = array_key_exists('entitiesBodyLinksDbpedia', $associative_array) ? $associative_array['entitiesBodyLinksDbpedia'] : null;
        $notEntitiesBodyLinksDbpedia = array_key_exists('notEntitiesBodyLinksDbpedia', $associative_array) ? $associative_array['notEntitiesBodyLinksDbpedia'] : null;
        $sentimentTitlePolarity = array_key_exists('sentimentTitlePolarity', $associative_array) ? $associative_array['sentimentTitlePolarity'] : null;
        $notSentimentTitlePolarity = array_key_exists('notSentimentTitlePolarity', $associative_array) ? $associative_array['notSentimentTitlePolarity'] : null;
        $sentimentBodyPolarity = array_key_exists('sentimentBodyPolarity', $associative_array) ? $associative_array['sentimentBodyPolarity'] : null;
        $notSentimentBodyPolarity = array_key_exists('notSentimentBodyPolarity', $associative_array) ? $associative_array['notSentimentBodyPolarity'] : null;
        $mediaImagesCountMin = array_key_exists('mediaImagesCountMin', $associative_array) ? $associative_array['mediaImagesCountMin'] : null;
        $mediaImagesCountMax = array_key_exists('mediaImagesCountMax', $associative_array) ? $associative_array['mediaImagesCountMax'] : null;
        $mediaImagesWidthMin = array_key_exists('mediaImagesWidthMin', $associative_array) ? $associative_array['mediaImagesWidthMin'] : null;
        $mediaImagesWidthMax = array_key_exists('mediaImagesWidthMax', $associative_array) ? $associative_array['mediaImagesWidthMax'] : null;
        $mediaImagesHeightMin = array_key_exists('mediaImagesHeightMin', $associative_array) ? $associative_array['mediaImagesHeightMin'] : null;
        $mediaImagesHeightMax = array_key_exists('mediaImagesHeightMax', $associative_array) ? $associative_array['mediaImagesHeightMax'] : null;
        $mediaImagesContentLengthMin = array_key_exists('mediaImagesContentLengthMin', $associative_array) ? $associative_array['mediaImagesContentLengthMin'] : null;
        $mediaImagesContentLengthMax = array_key_exists('mediaImagesContentLengthMax', $associative_array) ? $associative_array['mediaImagesContentLengthMax'] : null;
        $mediaImagesFormat = array_key_exists('mediaImagesFormat', $associative_array) ? $associative_array['mediaImagesFormat'] : null;
        $notMediaImagesFormat = array_key_exists('notMediaImagesFormat', $associative_array) ? $associative_array['notMediaImagesFormat'] : null;
        $mediaVideosCountMin = array_key_exists('mediaVideosCountMin', $associative_array) ? $associative_array['mediaVideosCountMin'] : null;
        $mediaVideosCountMax = array_key_exists('mediaVideosCountMax', $associative_array) ? $associative_array['mediaVideosCountMax'] : null;
        $authorId = array_key_exists('authorId', $associative_array) ? $associative_array['authorId'] : null;
        $notAuthorId = array_key_exists('notAuthorId', $associative_array) ? $associative_array['notAuthorId'] : null;
        $authorName = array_key_exists('authorName', $associative_array) ? $associative_array['authorName'] : null;
        $notAuthorName = array_key_exists('notAuthorName', $associative_array) ? $associative_array['notAuthorName'] : null;
        $sourceId = array_key_exists('sourceId', $associative_array) ? $associative_array['sourceId'] : null;
        $notSourceId = array_key_exists('notSourceId', $associative_array) ? $associative_array['notSourceId'] : null;
        $sourceName = array_key_exists('sourceName', $associative_array) ? $associative_array['sourceName'] : null;
        $notSourceName = array_key_exists('notSourceName', $associative_array) ? $associative_array['notSourceName'] : null;
        $sourceDomain = array_key_exists('sourceDomain', $associative_array) ? $associative_array['sourceDomain'] : null;
        $notSourceDomain = array_key_exists('notSourceDomain', $associative_array) ? $associative_array['notSourceDomain'] : null;
        $sourceLocationsCountry = array_key_exists('sourceLocationsCountry', $associative_array) ? $associative_array['sourceLocationsCountry'] : null;
        $notSourceLocationsCountry = array_key_exists('notSourceLocationsCountry', $associative_array) ? $associative_array['notSourceLocationsCountry'] : null;
        $sourceLocationsState = array_key_exists('sourceLocationsState', $associative_array) ? $associative_array['sourceLocationsState'] : null;
        $notSourceLocationsState = array_key_exists('notSourceLocationsState', $associative_array) ? $associative_array['notSourceLocationsState'] : null;
        $sourceLocationsCity = array_key_exists('sourceLocationsCity', $associative_array) ? $associative_array['sourceLocationsCity'] : null;
        $notSourceLocationsCity = array_key_exists('notSourceLocationsCity', $associative_array) ? $associative_array['notSourceLocationsCity'] : null;
        $sourceScopesCountry = array_key_exists('sourceScopesCountry', $associative_array) ? $associative_array['sourceScopesCountry'] : null;
        $notSourceScopesCountry = array_key_exists('notSourceScopesCountry', $associative_array) ? $associative_array['notSourceScopesCountry'] : null;
        $sourceScopesState = array_key_exists('sourceScopesState', $associative_array) ? $associative_array['sourceScopesState'] : null;
        $notSourceScopesState = array_key_exists('notSourceScopesState', $associative_array) ? $associative_array['notSourceScopesState'] : null;
        $sourceScopesCity = array_key_exists('sourceScopesCity', $associative_array) ? $associative_array['sourceScopesCity'] : null;
        $notSourceScopesCity = array_key_exists('notSourceScopesCity', $associative_array) ? $associative_array['notSourceScopesCity'] : null;
        $sourceScopesLevel = array_key_exists('sourceScopesLevel', $associative_array) ? $associative_array['sourceScopesLevel'] : null;
        $notSourceScopesLevel = array_key_exists('notSourceScopesLevel', $associative_array) ? $associative_array['notSourceScopesLevel'] : null;
        $sourceLinksInCountMin = array_key_exists('sourceLinksInCountMin', $associative_array) ? $associative_array['sourceLinksInCountMin'] : null;
        $sourceLinksInCountMax = array_key_exists('sourceLinksInCountMax', $associative_array) ? $associative_array['sourceLinksInCountMax'] : null;
        $sourceRankingsAlexaRankMin = array_key_exists('sourceRankingsAlexaRankMin', $associative_array) ? $associative_array['sourceRankingsAlexaRankMin'] : null;
        $sourceRankingsAlexaRankMax = array_key_exists('sourceRankingsAlexaRankMax', $associative_array) ? $associative_array['sourceRankingsAlexaRankMax'] : null;
        $sourceRankingsAlexaCountry = array_key_exists('sourceRankingsAlexaCountry', $associative_array) ? $associative_array['sourceRankingsAlexaCountry'] : null;
        $socialSharesCountFacebookMin = array_key_exists('socialSharesCountFacebookMin', $associative_array) ? $associative_array['socialSharesCountFacebookMin'] : null;
        $socialSharesCountFacebookMax = array_key_exists('socialSharesCountFacebookMax', $associative_array) ? $associative_array['socialSharesCountFacebookMax'] : null;
        $socialSharesCountGooglePlusMin = array_key_exists('socialSharesCountGooglePlusMin', $associative_array) ? $associative_array['socialSharesCountGooglePlusMin'] : null;
        $socialSharesCountGooglePlusMax = array_key_exists('socialSharesCountGooglePlusMax', $associative_array) ? $associative_array['socialSharesCountGooglePlusMax'] : null;
        $socialSharesCountLinkedinMin = array_key_exists('socialSharesCountLinkedinMin', $associative_array) ? $associative_array['socialSharesCountLinkedinMin'] : null;
        $socialSharesCountLinkedinMax = array_key_exists('socialSharesCountLinkedinMax', $associative_array) ? $associative_array['socialSharesCountLinkedinMax'] : null;
        $socialSharesCountRedditMin = array_key_exists('socialSharesCountRedditMin', $associative_array) ? $associative_array['socialSharesCountRedditMin'] : null;
        $socialSharesCountRedditMax = array_key_exists('socialSharesCountRedditMax', $associative_array) ? $associative_array['socialSharesCountRedditMax'] : null;
        $clusters = array_key_exists('clusters', $associative_array) ? $associative_array['clusters'] : null;
        $return = array_key_exists('return', $associative_array) ? $associative_array['return'] : null;
        $sortBy = array_key_exists('sortBy', $associative_array) ? $associative_array['sortBy'] : 'published_at';
        $sortDirection = array_key_exists('sortDirection', $associative_array) ? $associative_array['sortDirection'] : 'desc';
        $cursor = array_key_exists('cursor', $associative_array) ? $associative_array['cursor'] : '*';
        $perPage = array_key_exists('perPage', $associative_array) ? $associative_array['perPage'] : 10;

        if ($mediaImagesCountMin !== null && $mediaImagesCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesCountMax !== null && $mediaImagesCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesWidthMin !== null && $mediaImagesWidthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesWidthMax !== null && $mediaImagesWidthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesHeightMin !== null && $mediaImagesHeightMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesHeightMax !== null && $mediaImagesHeightMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMin !== null && $mediaImagesContentLengthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMax !== null && $mediaImagesContentLengthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaVideosCountMin !== null && $mediaVideosCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($mediaVideosCountMax !== null && $mediaVideosCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($sourceLinksInCountMin !== null && $sourceLinksInCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($sourceLinksInCountMax !== null && $sourceLinksInCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMin !== null && $sourceRankingsAlexaRankMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMax !== null && $sourceRankingsAlexaRankMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMin !== null && $socialSharesCountFacebookMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMax !== null && $socialSharesCountFacebookMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMin !== null && $socialSharesCountGooglePlusMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMax !== null && $socialSharesCountGooglePlusMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMin !== null && $socialSharesCountLinkedinMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMax !== null && $socialSharesCountLinkedinMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMin !== null && $socialSharesCountRedditMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMin" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMax !== null && $socialSharesCountRedditMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMax" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($perPage !== null && $perPage > 100) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listStories, must be smaller than or equal to 100.');
        }
        if ($perPage !== null && $perPage < 1) {
            throw new \InvalidArgumentException('invalid value for "$perPage" when calling DefaultApi.listStories, must be bigger than or equal to 1.');
        }


        $resourcePath = '/stories';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }
        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }
        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }
        // query params
        if ($translationsEnTitle !== null) {
            $queryParams['translations.en.title'] = $translationsEnTitle;
        }
        // query params
        if ($translationsEnBody !== null) {
            $queryParams['translations.en.body'] = $translationsEnBody;
        }
        // query params
        if ($translationsEnText !== null) {
            $queryParams['translations.en.text'] = $translationsEnText;
        }
        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }
        // query params
        if ($notLanguage !== null) {
            $queryParams['!language[]'] = $notLanguage;
        }
        // query params
        if ($publishedAtStart !== null) {
            $queryParams['published_at.start'] = $publishedAtStart;
        }
        // query params
        if ($publishedAtEnd !== null) {
            $queryParams['published_at.end'] = $publishedAtEnd;
        }
        // query params
        if ($categoriesTaxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categoriesTaxonomy;
        }
        // query params
        if ($categoriesConfident !== null) {
            $queryParams['categories.confident'] = $categoriesConfident;
        }
        // query params
        if ($categoriesId !== null) {
            $queryParams['categories.id[]'] = $categoriesId;
        }
        // query params
        if ($notCategoriesId !== null) {
            $queryParams['!categories.id[]'] = $notCategoriesId;
        }
        // query params
        if ($categoriesLevel !== null) {
            $queryParams['categories.level[]'] = $categoriesLevel;
        }
        // query params
        if ($notCategoriesLevel !== null) {
            $queryParams['!categories.level[]'] = $notCategoriesLevel;
        }
        // query params
        if ($entitiesTitleText !== null) {
            $queryParams['entities.title.text[]'] = $entitiesTitleText;
        }
        // query params
        if ($notEntitiesTitleText !== null) {
            $queryParams['!entities.title.text[]'] = $notEntitiesTitleText;
        }
        // query params
        if ($entitiesTitleType !== null) {
            $queryParams['entities.title.type[]'] = $entitiesTitleType;
        }
        // query params
        if ($notEntitiesTitleType !== null) {
            $queryParams['!entities.title.type[]'] = $notEntitiesTitleType;
        }
        // query params
        if ($entitiesTitleLinksDbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entitiesTitleLinksDbpedia;
        }
        // query params
        if ($notEntitiesTitleLinksDbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $notEntitiesTitleLinksDbpedia;
        }
        // query params
        if ($entitiesBodyText !== null) {
            $queryParams['entities.body.text[]'] = $entitiesBodyText;
        }
        // query params
        if ($notEntitiesBodyText !== null) {
            $queryParams['!entities.body.text[]'] = $notEntitiesBodyText;
        }
        // query params
        if ($entitiesBodyType !== null) {
            $queryParams['entities.body.type[]'] = $entitiesBodyType;
        }
        // query params
        if ($notEntitiesBodyType !== null) {
            $queryParams['!entities.body.type[]'] = $notEntitiesBodyType;
        }
        // query params
        if ($entitiesBodyLinksDbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entitiesBodyLinksDbpedia;
        }
        // query params
        if ($notEntitiesBodyLinksDbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $notEntitiesBodyLinksDbpedia;
        }
        // query params
        if ($sentimentTitlePolarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentimentTitlePolarity;
        }
        // query params
        if ($notSentimentTitlePolarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $notSentimentTitlePolarity;
        }
        // query params
        if ($sentimentBodyPolarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentimentBodyPolarity;
        }
        // query params
        if ($notSentimentBodyPolarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $notSentimentBodyPolarity;
        }
        // query params
        if ($mediaImagesCountMin !== null) {
            $queryParams['media.images.count.min'] = $mediaImagesCountMin;
        }
        // query params
        if ($mediaImagesCountMax !== null) {
            $queryParams['media.images.count.max'] = $mediaImagesCountMax;
        }
        // query params
        if ($mediaImagesWidthMin !== null) {
            $queryParams['media.images.width.min'] = $mediaImagesWidthMin;
        }
        // query params
        if ($mediaImagesWidthMax !== null) {
            $queryParams['media.images.width.max'] = $mediaImagesWidthMax;
        }
        // query params
        if ($mediaImagesHeightMin !== null) {
            $queryParams['media.images.height.min'] = $mediaImagesHeightMin;
        }
        // query params
        if ($mediaImagesHeightMax !== null) {
            $queryParams['media.images.height.max'] = $mediaImagesHeightMax;
        }
        // query params
        if ($mediaImagesContentLengthMin !== null) {
            $queryParams['media.images.content_length.min'] = $mediaImagesContentLengthMin;
        }
        // query params
        if ($mediaImagesContentLengthMax !== null) {
            $queryParams['media.images.content_length.max'] = $mediaImagesContentLengthMax;
        }
        // query params
        if ($mediaImagesFormat !== null) {
            $queryParams['media.images.format[]'] = $mediaImagesFormat;
        }
        // query params
        if ($notMediaImagesFormat !== null) {
            $queryParams['!media.images.format[]'] = $notMediaImagesFormat;
        }
        // query params
        if ($mediaVideosCountMin !== null) {
            $queryParams['media.videos.count.min'] = $mediaVideosCountMin;
        }
        // query params
        if ($mediaVideosCountMax !== null) {
            $queryParams['media.videos.count.max'] = $mediaVideosCountMax;
        }
        // query params
        if ($authorId !== null) {
            $queryParams['author.id[]'] = $authorId;
        }
        // query params
        if ($notAuthorId !== null) {
            $queryParams['!author.id[]'] = $notAuthorId;
        }
        // query params
        if ($authorName !== null) {
            $queryParams['author.name'] = $authorName;
        }
        // query params
        if ($notAuthorName !== null) {
            $queryParams['!author.name'] = $notAuthorName;
        }
        // query params
        if ($sourceId !== null) {
            $queryParams['source.id[]'] = $sourceId;
        }
        // query params
        if ($notSourceId !== null) {
            $queryParams['!source.id[]'] = $notSourceId;
        }
        // query params
        if ($sourceName !== null) {
            $queryParams['source.name[]'] = $sourceName;
        }
        // query params
        if ($notSourceName !== null) {
            $queryParams['!source.name[]'] = $notSourceName;
        }
        // query params
        if ($sourceDomain !== null) {
            $queryParams['source.domain[]'] = $sourceDomain;
        }
        // query params
        if ($notSourceDomain !== null) {
            $queryParams['!source.domain[]'] = $notSourceDomain;
        }
        // query params
        if ($sourceLocationsCountry !== null) {
            $queryParams['source.locations.country[]'] = $sourceLocationsCountry;
        }
        // query params
        if ($notSourceLocationsCountry !== null) {
            $queryParams['!source.locations.country[]'] = $notSourceLocationsCountry;
        }
        // query params
        if ($sourceLocationsState !== null) {
            $queryParams['source.locations.state[]'] = $sourceLocationsState;
        }
        // query params
        if ($notSourceLocationsState !== null) {
            $queryParams['!source.locations.state[]'] = $notSourceLocationsState;
        }
        // query params
        if ($sourceLocationsCity !== null) {
            $queryParams['source.locations.city[]'] = $sourceLocationsCity;
        }
        // query params
        if ($notSourceLocationsCity !== null) {
            $queryParams['!source.locations.city[]'] = $notSourceLocationsCity;
        }
        // query params
        if ($sourceScopesCountry !== null) {
            $queryParams['source.scopes.country[]'] = $sourceScopesCountry;
        }
        // query params
        if ($notSourceScopesCountry !== null) {
            $queryParams['!source.scopes.country[]'] = $notSourceScopesCountry;
        }
        // query params
        if ($sourceScopesState !== null) {
            $queryParams['source.scopes.state[]'] = $sourceScopesState;
        }
        // query params
        if ($notSourceScopesState !== null) {
            $queryParams['!source.scopes.state[]'] = $notSourceScopesState;
        }
        // query params
        if ($sourceScopesCity !== null) {
            $queryParams['source.scopes.city[]'] = $sourceScopesCity;
        }
        // query params
        if ($notSourceScopesCity !== null) {
            $queryParams['!source.scopes.city[]'] = $notSourceScopesCity;
        }
        // query params
        if ($sourceScopesLevel !== null) {
            $queryParams['source.scopes.level[]'] = $sourceScopesLevel;
        }
        // query params
        if ($notSourceScopesLevel !== null) {
            $queryParams['!source.scopes.level[]'] = $notSourceScopesLevel;
        }
        // query params
        if ($sourceLinksInCountMin !== null) {
            $queryParams['source.links_in_count.min'] = $sourceLinksInCountMin;
        }
        // query params
        if ($sourceLinksInCountMax !== null) {
            $queryParams['source.links_in_count.max'] = $sourceLinksInCountMax;
        }
        // query params
        if ($sourceRankingsAlexaRankMin !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $sourceRankingsAlexaRankMin;
        }
        // query params
        if ($sourceRankingsAlexaRankMax !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $sourceRankingsAlexaRankMax;
        }
        // query params
        if ($sourceRankingsAlexaCountry !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $sourceRankingsAlexaCountry;
        }
        // query params
        if ($socialSharesCountFacebookMin !== null) {
            $queryParams['social_shares_count.facebook.min'] = $socialSharesCountFacebookMin;
        }
        // query params
        if ($socialSharesCountFacebookMax !== null) {
            $queryParams['social_shares_count.facebook.max'] = $socialSharesCountFacebookMax;
        }
        // query params
        if ($socialSharesCountGooglePlusMin !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $socialSharesCountGooglePlusMin;
        }
        // query params
        if ($socialSharesCountGooglePlusMax !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $socialSharesCountGooglePlusMax;
        }
        // query params
        if ($socialSharesCountLinkedinMin !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $socialSharesCountLinkedinMin;
        }
        // query params
        if ($socialSharesCountLinkedinMax !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $socialSharesCountLinkedinMax;
        }
        // query params
        if ($socialSharesCountRedditMin !== null) {
            $queryParams['social_shares_count.reddit.min'] = $socialSharesCountRedditMin;
        }
        // query params
        if ($socialSharesCountRedditMax !== null) {
            $queryParams['social_shares_count.reddit.max'] = $socialSharesCountRedditMax;
        }
        // query params
        if ($clusters !== null) {
            $queryParams['clusters[]'] = $clusters;
        }
        // query params
        if ($return !== null) {
            $queryParams['return[]'] = $return;
        }
        // query params
        if ($sortBy !== null) {
            $queryParams['sort_by'] = $sortBy;
        }
        // query params
        if ($sortDirection !== null) {
            $queryParams['sort_direction'] = $sortDirection;
        }
        // query params
        if ($cursor !== null) {
            $queryParams['cursor'] = $cursor;
        }
        // query params
        if ($perPage !== null) {
            $queryParams['per_page'] = $perPage;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listTimeSeries
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\TimeSeriesList|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listTimeSeries($associative_array)
    {
        list($response) = $this->listTimeSeriesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listTimeSeriesWithHttpInfo
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\TimeSeriesList|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listTimeSeriesWithHttpInfo($associative_array)
    {
        $request = $this->listTimeSeriesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\TimeSeriesList' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\TimeSeriesList', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\TimeSeriesList';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\TimeSeriesList',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listTimeSeriesAsync
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTimeSeriesAsync($associative_array)
    {
        return $this->listTimeSeriesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listTimeSeriesAsyncWithHttpInfo
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTimeSeriesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\TimeSeriesList';
        $request = $this->listTimeSeriesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listTimeSeries'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listTimeSeriesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translationsEnTitle = array_key_exists('translationsEnTitle', $associative_array) ? $associative_array['translationsEnTitle'] : null;
        $translationsEnBody = array_key_exists('translationsEnBody', $associative_array) ? $associative_array['translationsEnBody'] : null;
        $translationsEnText = array_key_exists('translationsEnText', $associative_array) ? $associative_array['translationsEnText'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $notLanguage = array_key_exists('notLanguage', $associative_array) ? $associative_array['notLanguage'] : null;
        $categoriesTaxonomy = array_key_exists('categoriesTaxonomy', $associative_array) ? $associative_array['categoriesTaxonomy'] : null;
        $categoriesConfident = array_key_exists('categoriesConfident', $associative_array) ? $associative_array['categoriesConfident'] : true;
        $categoriesId = array_key_exists('categoriesId', $associative_array) ? $associative_array['categoriesId'] : null;
        $notCategoriesId = array_key_exists('notCategoriesId', $associative_array) ? $associative_array['notCategoriesId'] : null;
        $categoriesLevel = array_key_exists('categoriesLevel', $associative_array) ? $associative_array['categoriesLevel'] : null;
        $notCategoriesLevel = array_key_exists('notCategoriesLevel', $associative_array) ? $associative_array['notCategoriesLevel'] : null;
        $entitiesTitleText = array_key_exists('entitiesTitleText', $associative_array) ? $associative_array['entitiesTitleText'] : null;
        $notEntitiesTitleText = array_key_exists('notEntitiesTitleText', $associative_array) ? $associative_array['notEntitiesTitleText'] : null;
        $entitiesTitleType = array_key_exists('entitiesTitleType', $associative_array) ? $associative_array['entitiesTitleType'] : null;
        $notEntitiesTitleType = array_key_exists('notEntitiesTitleType', $associative_array) ? $associative_array['notEntitiesTitleType'] : null;
        $entitiesTitleLinksDbpedia = array_key_exists('entitiesTitleLinksDbpedia', $associative_array) ? $associative_array['entitiesTitleLinksDbpedia'] : null;
        $notEntitiesTitleLinksDbpedia = array_key_exists('notEntitiesTitleLinksDbpedia', $associative_array) ? $associative_array['notEntitiesTitleLinksDbpedia'] : null;
        $entitiesBodyText = array_key_exists('entitiesBodyText', $associative_array) ? $associative_array['entitiesBodyText'] : null;
        $notEntitiesBodyText = array_key_exists('notEntitiesBodyText', $associative_array) ? $associative_array['notEntitiesBodyText'] : null;
        $entitiesBodyType = array_key_exists('entitiesBodyType', $associative_array) ? $associative_array['entitiesBodyType'] : null;
        $notEntitiesBodyType = array_key_exists('notEntitiesBodyType', $associative_array) ? $associative_array['notEntitiesBodyType'] : null;
        $entitiesBodyLinksDbpedia = array_key_exists('entitiesBodyLinksDbpedia', $associative_array) ? $associative_array['entitiesBodyLinksDbpedia'] : null;
        $notEntitiesBodyLinksDbpedia = array_key_exists('notEntitiesBodyLinksDbpedia', $associative_array) ? $associative_array['notEntitiesBodyLinksDbpedia'] : null;
        $sentimentTitlePolarity = array_key_exists('sentimentTitlePolarity', $associative_array) ? $associative_array['sentimentTitlePolarity'] : null;
        $notSentimentTitlePolarity = array_key_exists('notSentimentTitlePolarity', $associative_array) ? $associative_array['notSentimentTitlePolarity'] : null;
        $sentimentBodyPolarity = array_key_exists('sentimentBodyPolarity', $associative_array) ? $associative_array['sentimentBodyPolarity'] : null;
        $notSentimentBodyPolarity = array_key_exists('notSentimentBodyPolarity', $associative_array) ? $associative_array['notSentimentBodyPolarity'] : null;
        $mediaImagesCountMin = array_key_exists('mediaImagesCountMin', $associative_array) ? $associative_array['mediaImagesCountMin'] : null;
        $mediaImagesCountMax = array_key_exists('mediaImagesCountMax', $associative_array) ? $associative_array['mediaImagesCountMax'] : null;
        $mediaImagesWidthMin = array_key_exists('mediaImagesWidthMin', $associative_array) ? $associative_array['mediaImagesWidthMin'] : null;
        $mediaImagesWidthMax = array_key_exists('mediaImagesWidthMax', $associative_array) ? $associative_array['mediaImagesWidthMax'] : null;
        $mediaImagesHeightMin = array_key_exists('mediaImagesHeightMin', $associative_array) ? $associative_array['mediaImagesHeightMin'] : null;
        $mediaImagesHeightMax = array_key_exists('mediaImagesHeightMax', $associative_array) ? $associative_array['mediaImagesHeightMax'] : null;
        $mediaImagesContentLengthMin = array_key_exists('mediaImagesContentLengthMin', $associative_array) ? $associative_array['mediaImagesContentLengthMin'] : null;
        $mediaImagesContentLengthMax = array_key_exists('mediaImagesContentLengthMax', $associative_array) ? $associative_array['mediaImagesContentLengthMax'] : null;
        $mediaImagesFormat = array_key_exists('mediaImagesFormat', $associative_array) ? $associative_array['mediaImagesFormat'] : null;
        $notMediaImagesFormat = array_key_exists('notMediaImagesFormat', $associative_array) ? $associative_array['notMediaImagesFormat'] : null;
        $mediaVideosCountMin = array_key_exists('mediaVideosCountMin', $associative_array) ? $associative_array['mediaVideosCountMin'] : null;
        $mediaVideosCountMax = array_key_exists('mediaVideosCountMax', $associative_array) ? $associative_array['mediaVideosCountMax'] : null;
        $authorId = array_key_exists('authorId', $associative_array) ? $associative_array['authorId'] : null;
        $notAuthorId = array_key_exists('notAuthorId', $associative_array) ? $associative_array['notAuthorId'] : null;
        $authorName = array_key_exists('authorName', $associative_array) ? $associative_array['authorName'] : null;
        $notAuthorName = array_key_exists('notAuthorName', $associative_array) ? $associative_array['notAuthorName'] : null;
        $sourceId = array_key_exists('sourceId', $associative_array) ? $associative_array['sourceId'] : null;
        $notSourceId = array_key_exists('notSourceId', $associative_array) ? $associative_array['notSourceId'] : null;
        $sourceName = array_key_exists('sourceName', $associative_array) ? $associative_array['sourceName'] : null;
        $notSourceName = array_key_exists('notSourceName', $associative_array) ? $associative_array['notSourceName'] : null;
        $sourceDomain = array_key_exists('sourceDomain', $associative_array) ? $associative_array['sourceDomain'] : null;
        $notSourceDomain = array_key_exists('notSourceDomain', $associative_array) ? $associative_array['notSourceDomain'] : null;
        $sourceLocationsCountry = array_key_exists('sourceLocationsCountry', $associative_array) ? $associative_array['sourceLocationsCountry'] : null;
        $notSourceLocationsCountry = array_key_exists('notSourceLocationsCountry', $associative_array) ? $associative_array['notSourceLocationsCountry'] : null;
        $sourceLocationsState = array_key_exists('sourceLocationsState', $associative_array) ? $associative_array['sourceLocationsState'] : null;
        $notSourceLocationsState = array_key_exists('notSourceLocationsState', $associative_array) ? $associative_array['notSourceLocationsState'] : null;
        $sourceLocationsCity = array_key_exists('sourceLocationsCity', $associative_array) ? $associative_array['sourceLocationsCity'] : null;
        $notSourceLocationsCity = array_key_exists('notSourceLocationsCity', $associative_array) ? $associative_array['notSourceLocationsCity'] : null;
        $sourceScopesCountry = array_key_exists('sourceScopesCountry', $associative_array) ? $associative_array['sourceScopesCountry'] : null;
        $notSourceScopesCountry = array_key_exists('notSourceScopesCountry', $associative_array) ? $associative_array['notSourceScopesCountry'] : null;
        $sourceScopesState = array_key_exists('sourceScopesState', $associative_array) ? $associative_array['sourceScopesState'] : null;
        $notSourceScopesState = array_key_exists('notSourceScopesState', $associative_array) ? $associative_array['notSourceScopesState'] : null;
        $sourceScopesCity = array_key_exists('sourceScopesCity', $associative_array) ? $associative_array['sourceScopesCity'] : null;
        $notSourceScopesCity = array_key_exists('notSourceScopesCity', $associative_array) ? $associative_array['notSourceScopesCity'] : null;
        $sourceScopesLevel = array_key_exists('sourceScopesLevel', $associative_array) ? $associative_array['sourceScopesLevel'] : null;
        $notSourceScopesLevel = array_key_exists('notSourceScopesLevel', $associative_array) ? $associative_array['notSourceScopesLevel'] : null;
        $sourceLinksInCountMin = array_key_exists('sourceLinksInCountMin', $associative_array) ? $associative_array['sourceLinksInCountMin'] : null;
        $sourceLinksInCountMax = array_key_exists('sourceLinksInCountMax', $associative_array) ? $associative_array['sourceLinksInCountMax'] : null;
        $sourceRankingsAlexaRankMin = array_key_exists('sourceRankingsAlexaRankMin', $associative_array) ? $associative_array['sourceRankingsAlexaRankMin'] : null;
        $sourceRankingsAlexaRankMax = array_key_exists('sourceRankingsAlexaRankMax', $associative_array) ? $associative_array['sourceRankingsAlexaRankMax'] : null;
        $sourceRankingsAlexaCountry = array_key_exists('sourceRankingsAlexaCountry', $associative_array) ? $associative_array['sourceRankingsAlexaCountry'] : null;
        $socialSharesCountFacebookMin = array_key_exists('socialSharesCountFacebookMin', $associative_array) ? $associative_array['socialSharesCountFacebookMin'] : null;
        $socialSharesCountFacebookMax = array_key_exists('socialSharesCountFacebookMax', $associative_array) ? $associative_array['socialSharesCountFacebookMax'] : null;
        $socialSharesCountGooglePlusMin = array_key_exists('socialSharesCountGooglePlusMin', $associative_array) ? $associative_array['socialSharesCountGooglePlusMin'] : null;
        $socialSharesCountGooglePlusMax = array_key_exists('socialSharesCountGooglePlusMax', $associative_array) ? $associative_array['socialSharesCountGooglePlusMax'] : null;
        $socialSharesCountLinkedinMin = array_key_exists('socialSharesCountLinkedinMin', $associative_array) ? $associative_array['socialSharesCountLinkedinMin'] : null;
        $socialSharesCountLinkedinMax = array_key_exists('socialSharesCountLinkedinMax', $associative_array) ? $associative_array['socialSharesCountLinkedinMax'] : null;
        $socialSharesCountRedditMin = array_key_exists('socialSharesCountRedditMin', $associative_array) ? $associative_array['socialSharesCountRedditMin'] : null;
        $socialSharesCountRedditMax = array_key_exists('socialSharesCountRedditMax', $associative_array) ? $associative_array['socialSharesCountRedditMax'] : null;
        $publishedAtStart = array_key_exists('publishedAtStart', $associative_array) ? $associative_array['publishedAtStart'] : 'NOW-7DAYS/DAY';
        $publishedAtEnd = array_key_exists('publishedAtEnd', $associative_array) ? $associative_array['publishedAtEnd'] : 'NOW/DAY';
        $period = array_key_exists('period', $associative_array) ? $associative_array['period'] : '+1DAY';

        if ($mediaImagesCountMin !== null && $mediaImagesCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesCountMax !== null && $mediaImagesCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesWidthMin !== null && $mediaImagesWidthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesWidthMax !== null && $mediaImagesWidthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesHeightMin !== null && $mediaImagesHeightMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesHeightMax !== null && $mediaImagesHeightMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMin !== null && $mediaImagesContentLengthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMax !== null && $mediaImagesContentLengthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaVideosCountMin !== null && $mediaVideosCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($mediaVideosCountMax !== null && $mediaVideosCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($sourceLinksInCountMin !== null && $sourceLinksInCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($sourceLinksInCountMax !== null && $sourceLinksInCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMin !== null && $sourceRankingsAlexaRankMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMax !== null && $sourceRankingsAlexaRankMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMin !== null && $socialSharesCountFacebookMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMax !== null && $socialSharesCountFacebookMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMin !== null && $socialSharesCountGooglePlusMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMax !== null && $socialSharesCountGooglePlusMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMin !== null && $socialSharesCountLinkedinMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMax !== null && $socialSharesCountLinkedinMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMin !== null && $socialSharesCountRedditMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMin" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMax !== null && $socialSharesCountRedditMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMax" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }


        $resourcePath = '/time_series';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }
        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }
        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }
        // query params
        if ($translationsEnTitle !== null) {
            $queryParams['translations.en.title'] = $translationsEnTitle;
        }
        // query params
        if ($translationsEnBody !== null) {
            $queryParams['translations.en.body'] = $translationsEnBody;
        }
        // query params
        if ($translationsEnText !== null) {
            $queryParams['translations.en.text'] = $translationsEnText;
        }
        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }
        // query params
        if ($notLanguage !== null) {
            $queryParams['!language[]'] = $notLanguage;
        }
        // query params
        if ($categoriesTaxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categoriesTaxonomy;
        }
        // query params
        if ($categoriesConfident !== null) {
            $queryParams['categories.confident'] = $categoriesConfident;
        }
        // query params
        if ($categoriesId !== null) {
            $queryParams['categories.id[]'] = $categoriesId;
        }
        // query params
        if ($notCategoriesId !== null) {
            $queryParams['!categories.id[]'] = $notCategoriesId;
        }
        // query params
        if ($categoriesLevel !== null) {
            $queryParams['categories.level[]'] = $categoriesLevel;
        }
        // query params
        if ($notCategoriesLevel !== null) {
            $queryParams['!categories.level[]'] = $notCategoriesLevel;
        }
        // query params
        if ($entitiesTitleText !== null) {
            $queryParams['entities.title.text[]'] = $entitiesTitleText;
        }
        // query params
        if ($notEntitiesTitleText !== null) {
            $queryParams['!entities.title.text[]'] = $notEntitiesTitleText;
        }
        // query params
        if ($entitiesTitleType !== null) {
            $queryParams['entities.title.type[]'] = $entitiesTitleType;
        }
        // query params
        if ($notEntitiesTitleType !== null) {
            $queryParams['!entities.title.type[]'] = $notEntitiesTitleType;
        }
        // query params
        if ($entitiesTitleLinksDbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entitiesTitleLinksDbpedia;
        }
        // query params
        if ($notEntitiesTitleLinksDbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $notEntitiesTitleLinksDbpedia;
        }
        // query params
        if ($entitiesBodyText !== null) {
            $queryParams['entities.body.text[]'] = $entitiesBodyText;
        }
        // query params
        if ($notEntitiesBodyText !== null) {
            $queryParams['!entities.body.text[]'] = $notEntitiesBodyText;
        }
        // query params
        if ($entitiesBodyType !== null) {
            $queryParams['entities.body.type[]'] = $entitiesBodyType;
        }
        // query params
        if ($notEntitiesBodyType !== null) {
            $queryParams['!entities.body.type[]'] = $notEntitiesBodyType;
        }
        // query params
        if ($entitiesBodyLinksDbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entitiesBodyLinksDbpedia;
        }
        // query params
        if ($notEntitiesBodyLinksDbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $notEntitiesBodyLinksDbpedia;
        }
        // query params
        if ($sentimentTitlePolarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentimentTitlePolarity;
        }
        // query params
        if ($notSentimentTitlePolarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $notSentimentTitlePolarity;
        }
        // query params
        if ($sentimentBodyPolarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentimentBodyPolarity;
        }
        // query params
        if ($notSentimentBodyPolarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $notSentimentBodyPolarity;
        }
        // query params
        if ($mediaImagesCountMin !== null) {
            $queryParams['media.images.count.min'] = $mediaImagesCountMin;
        }
        // query params
        if ($mediaImagesCountMax !== null) {
            $queryParams['media.images.count.max'] = $mediaImagesCountMax;
        }
        // query params
        if ($mediaImagesWidthMin !== null) {
            $queryParams['media.images.width.min'] = $mediaImagesWidthMin;
        }
        // query params
        if ($mediaImagesWidthMax !== null) {
            $queryParams['media.images.width.max'] = $mediaImagesWidthMax;
        }
        // query params
        if ($mediaImagesHeightMin !== null) {
            $queryParams['media.images.height.min'] = $mediaImagesHeightMin;
        }
        // query params
        if ($mediaImagesHeightMax !== null) {
            $queryParams['media.images.height.max'] = $mediaImagesHeightMax;
        }
        // query params
        if ($mediaImagesContentLengthMin !== null) {
            $queryParams['media.images.content_length.min'] = $mediaImagesContentLengthMin;
        }
        // query params
        if ($mediaImagesContentLengthMax !== null) {
            $queryParams['media.images.content_length.max'] = $mediaImagesContentLengthMax;
        }
        // query params
        if ($mediaImagesFormat !== null) {
            $queryParams['media.images.format[]'] = $mediaImagesFormat;
        }
        // query params
        if ($notMediaImagesFormat !== null) {
            $queryParams['!media.images.format[]'] = $notMediaImagesFormat;
        }
        // query params
        if ($mediaVideosCountMin !== null) {
            $queryParams['media.videos.count.min'] = $mediaVideosCountMin;
        }
        // query params
        if ($mediaVideosCountMax !== null) {
            $queryParams['media.videos.count.max'] = $mediaVideosCountMax;
        }
        // query params
        if ($authorId !== null) {
            $queryParams['author.id[]'] = $authorId;
        }
        // query params
        if ($notAuthorId !== null) {
            $queryParams['!author.id[]'] = $notAuthorId;
        }
        // query params
        if ($authorName !== null) {
            $queryParams['author.name'] = $authorName;
        }
        // query params
        if ($notAuthorName !== null) {
            $queryParams['!author.name'] = $notAuthorName;
        }
        // query params
        if ($sourceId !== null) {
            $queryParams['source.id[]'] = $sourceId;
        }
        // query params
        if ($notSourceId !== null) {
            $queryParams['!source.id[]'] = $notSourceId;
        }
        // query params
        if ($sourceName !== null) {
            $queryParams['source.name[]'] = $sourceName;
        }
        // query params
        if ($notSourceName !== null) {
            $queryParams['!source.name[]'] = $notSourceName;
        }
        // query params
        if ($sourceDomain !== null) {
            $queryParams['source.domain[]'] = $sourceDomain;
        }
        // query params
        if ($notSourceDomain !== null) {
            $queryParams['!source.domain[]'] = $notSourceDomain;
        }
        // query params
        if ($sourceLocationsCountry !== null) {
            $queryParams['source.locations.country[]'] = $sourceLocationsCountry;
        }
        // query params
        if ($notSourceLocationsCountry !== null) {
            $queryParams['!source.locations.country[]'] = $notSourceLocationsCountry;
        }
        // query params
        if ($sourceLocationsState !== null) {
            $queryParams['source.locations.state[]'] = $sourceLocationsState;
        }
        // query params
        if ($notSourceLocationsState !== null) {
            $queryParams['!source.locations.state[]'] = $notSourceLocationsState;
        }
        // query params
        if ($sourceLocationsCity !== null) {
            $queryParams['source.locations.city[]'] = $sourceLocationsCity;
        }
        // query params
        if ($notSourceLocationsCity !== null) {
            $queryParams['!source.locations.city[]'] = $notSourceLocationsCity;
        }
        // query params
        if ($sourceScopesCountry !== null) {
            $queryParams['source.scopes.country[]'] = $sourceScopesCountry;
        }
        // query params
        if ($notSourceScopesCountry !== null) {
            $queryParams['!source.scopes.country[]'] = $notSourceScopesCountry;
        }
        // query params
        if ($sourceScopesState !== null) {
            $queryParams['source.scopes.state[]'] = $sourceScopesState;
        }
        // query params
        if ($notSourceScopesState !== null) {
            $queryParams['!source.scopes.state[]'] = $notSourceScopesState;
        }
        // query params
        if ($sourceScopesCity !== null) {
            $queryParams['source.scopes.city[]'] = $sourceScopesCity;
        }
        // query params
        if ($notSourceScopesCity !== null) {
            $queryParams['!source.scopes.city[]'] = $notSourceScopesCity;
        }
        // query params
        if ($sourceScopesLevel !== null) {
            $queryParams['source.scopes.level[]'] = $sourceScopesLevel;
        }
        // query params
        if ($notSourceScopesLevel !== null) {
            $queryParams['!source.scopes.level[]'] = $notSourceScopesLevel;
        }
        // query params
        if ($sourceLinksInCountMin !== null) {
            $queryParams['source.links_in_count.min'] = $sourceLinksInCountMin;
        }
        // query params
        if ($sourceLinksInCountMax !== null) {
            $queryParams['source.links_in_count.max'] = $sourceLinksInCountMax;
        }
        // query params
        if ($sourceRankingsAlexaRankMin !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $sourceRankingsAlexaRankMin;
        }
        // query params
        if ($sourceRankingsAlexaRankMax !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $sourceRankingsAlexaRankMax;
        }
        // query params
        if ($sourceRankingsAlexaCountry !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $sourceRankingsAlexaCountry;
        }
        // query params
        if ($socialSharesCountFacebookMin !== null) {
            $queryParams['social_shares_count.facebook.min'] = $socialSharesCountFacebookMin;
        }
        // query params
        if ($socialSharesCountFacebookMax !== null) {
            $queryParams['social_shares_count.facebook.max'] = $socialSharesCountFacebookMax;
        }
        // query params
        if ($socialSharesCountGooglePlusMin !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $socialSharesCountGooglePlusMin;
        }
        // query params
        if ($socialSharesCountGooglePlusMax !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $socialSharesCountGooglePlusMax;
        }
        // query params
        if ($socialSharesCountLinkedinMin !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $socialSharesCountLinkedinMin;
        }
        // query params
        if ($socialSharesCountLinkedinMax !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $socialSharesCountLinkedinMax;
        }
        // query params
        if ($socialSharesCountRedditMin !== null) {
            $queryParams['social_shares_count.reddit.min'] = $socialSharesCountRedditMin;
        }
        // query params
        if ($socialSharesCountRedditMax !== null) {
            $queryParams['social_shares_count.reddit.max'] = $socialSharesCountRedditMax;
        }
        // query params
        if ($publishedAtStart !== null) {
            $queryParams['published_at.start'] = $publishedAtStart;
        }
        // query params
        if ($publishedAtEnd !== null) {
            $queryParams['published_at.end'] = $publishedAtEnd;
        }
        // query params
        if ($period !== null) {
            $queryParams['period'] = $period;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listTrends
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Trends|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listTrends($associative_array)
    {
        list($response) = $this->listTrendsWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listTrendsWithHttpInfo
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Trends|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listTrendsWithHttpInfo($associative_array)
    {
        $request = $this->listTrendsRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Trends' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Trends', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not42:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case not49:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Trends';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Trends',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not42:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case not49:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listTrendsAsync
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTrendsAsync($associative_array)
    {
        return $this->listTrendsAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listTrendsAsyncWithHttpInfo
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTrendsAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Trends';
        $request = $this->listTrendsRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listTrends'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $notId This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnTitle This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnBody This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translationsEnText This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $notLanguage This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $publishedAtStart This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $publishedAtEnd This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categoriesTaxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categoriesConfident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categoriesId This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $notCategoriesId This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categoriesLevel This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $notCategoriesLevel This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entitiesTitleText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesTitleLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesTitleLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyText This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyText This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyType This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyType This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entitiesBodyLinksDbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $notEntitiesBodyLinksDbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentimentTitlePolarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $notSentimentTitlePolarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentimentBodyPolarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $notSentimentBodyPolarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $mediaImagesCountMin This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesCountMax This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMin This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesWidthMax This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMin This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesHeightMax This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMin This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $mediaImagesContentLengthMax This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $mediaImagesFormat This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $notMediaImagesFormat This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $mediaVideosCountMin This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $mediaVideosCountMax This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $authorId This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $notAuthorId This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $authorName This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $notAuthorName This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $sourceId This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $notSourceId This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $sourceName This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $notSourceName This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $sourceDomain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $notSourceDomain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $sourceLocationsCountry This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCountry This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsState This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsState This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceLocationsCity This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceLocationsCity This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCountry This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCountry This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesState This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesState This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesCity This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesCity This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $sourceScopesLevel This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $notSourceScopesLevel This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $sourceLinksInCountMin This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceLinksInCountMax This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $sourceRankingsAlexaRankMin This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $sourceRankingsAlexaRankMax This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $sourceRankingsAlexaCountry This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $socialSharesCountFacebookMin This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountFacebookMax This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMin This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountGooglePlusMax This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMin This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountLinkedinMax This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMin This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $socialSharesCountRedditMax This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listTrendsRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $field = array_key_exists('field', $associative_array) ? $associative_array['field'] : null;
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $notId = array_key_exists('notId', $associative_array) ? $associative_array['notId'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translationsEnTitle = array_key_exists('translationsEnTitle', $associative_array) ? $associative_array['translationsEnTitle'] : null;
        $translationsEnBody = array_key_exists('translationsEnBody', $associative_array) ? $associative_array['translationsEnBody'] : null;
        $translationsEnText = array_key_exists('translationsEnText', $associative_array) ? $associative_array['translationsEnText'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $notLanguage = array_key_exists('notLanguage', $associative_array) ? $associative_array['notLanguage'] : null;
        $publishedAtStart = array_key_exists('publishedAtStart', $associative_array) ? $associative_array['publishedAtStart'] : null;
        $publishedAtEnd = array_key_exists('publishedAtEnd', $associative_array) ? $associative_array['publishedAtEnd'] : null;
        $categoriesTaxonomy = array_key_exists('categoriesTaxonomy', $associative_array) ? $associative_array['categoriesTaxonomy'] : null;
        $categoriesConfident = array_key_exists('categoriesConfident', $associative_array) ? $associative_array['categoriesConfident'] : true;
        $categoriesId = array_key_exists('categoriesId', $associative_array) ? $associative_array['categoriesId'] : null;
        $notCategoriesId = array_key_exists('notCategoriesId', $associative_array) ? $associative_array['notCategoriesId'] : null;
        $categoriesLevel = array_key_exists('categoriesLevel', $associative_array) ? $associative_array['categoriesLevel'] : null;
        $notCategoriesLevel = array_key_exists('notCategoriesLevel', $associative_array) ? $associative_array['notCategoriesLevel'] : null;
        $entitiesTitleText = array_key_exists('entitiesTitleText', $associative_array) ? $associative_array['entitiesTitleText'] : null;
        $notEntitiesTitleText = array_key_exists('notEntitiesTitleText', $associative_array) ? $associative_array['notEntitiesTitleText'] : null;
        $entitiesTitleType = array_key_exists('entitiesTitleType', $associative_array) ? $associative_array['entitiesTitleType'] : null;
        $notEntitiesTitleType = array_key_exists('notEntitiesTitleType', $associative_array) ? $associative_array['notEntitiesTitleType'] : null;
        $entitiesTitleLinksDbpedia = array_key_exists('entitiesTitleLinksDbpedia', $associative_array) ? $associative_array['entitiesTitleLinksDbpedia'] : null;
        $notEntitiesTitleLinksDbpedia = array_key_exists('notEntitiesTitleLinksDbpedia', $associative_array) ? $associative_array['notEntitiesTitleLinksDbpedia'] : null;
        $entitiesBodyText = array_key_exists('entitiesBodyText', $associative_array) ? $associative_array['entitiesBodyText'] : null;
        $notEntitiesBodyText = array_key_exists('notEntitiesBodyText', $associative_array) ? $associative_array['notEntitiesBodyText'] : null;
        $entitiesBodyType = array_key_exists('entitiesBodyType', $associative_array) ? $associative_array['entitiesBodyType'] : null;
        $notEntitiesBodyType = array_key_exists('notEntitiesBodyType', $associative_array) ? $associative_array['notEntitiesBodyType'] : null;
        $entitiesBodyLinksDbpedia = array_key_exists('entitiesBodyLinksDbpedia', $associative_array) ? $associative_array['entitiesBodyLinksDbpedia'] : null;
        $notEntitiesBodyLinksDbpedia = array_key_exists('notEntitiesBodyLinksDbpedia', $associative_array) ? $associative_array['notEntitiesBodyLinksDbpedia'] : null;
        $sentimentTitlePolarity = array_key_exists('sentimentTitlePolarity', $associative_array) ? $associative_array['sentimentTitlePolarity'] : null;
        $notSentimentTitlePolarity = array_key_exists('notSentimentTitlePolarity', $associative_array) ? $associative_array['notSentimentTitlePolarity'] : null;
        $sentimentBodyPolarity = array_key_exists('sentimentBodyPolarity', $associative_array) ? $associative_array['sentimentBodyPolarity'] : null;
        $notSentimentBodyPolarity = array_key_exists('notSentimentBodyPolarity', $associative_array) ? $associative_array['notSentimentBodyPolarity'] : null;
        $mediaImagesCountMin = array_key_exists('mediaImagesCountMin', $associative_array) ? $associative_array['mediaImagesCountMin'] : null;
        $mediaImagesCountMax = array_key_exists('mediaImagesCountMax', $associative_array) ? $associative_array['mediaImagesCountMax'] : null;
        $mediaImagesWidthMin = array_key_exists('mediaImagesWidthMin', $associative_array) ? $associative_array['mediaImagesWidthMin'] : null;
        $mediaImagesWidthMax = array_key_exists('mediaImagesWidthMax', $associative_array) ? $associative_array['mediaImagesWidthMax'] : null;
        $mediaImagesHeightMin = array_key_exists('mediaImagesHeightMin', $associative_array) ? $associative_array['mediaImagesHeightMin'] : null;
        $mediaImagesHeightMax = array_key_exists('mediaImagesHeightMax', $associative_array) ? $associative_array['mediaImagesHeightMax'] : null;
        $mediaImagesContentLengthMin = array_key_exists('mediaImagesContentLengthMin', $associative_array) ? $associative_array['mediaImagesContentLengthMin'] : null;
        $mediaImagesContentLengthMax = array_key_exists('mediaImagesContentLengthMax', $associative_array) ? $associative_array['mediaImagesContentLengthMax'] : null;
        $mediaImagesFormat = array_key_exists('mediaImagesFormat', $associative_array) ? $associative_array['mediaImagesFormat'] : null;
        $notMediaImagesFormat = array_key_exists('notMediaImagesFormat', $associative_array) ? $associative_array['notMediaImagesFormat'] : null;
        $mediaVideosCountMin = array_key_exists('mediaVideosCountMin', $associative_array) ? $associative_array['mediaVideosCountMin'] : null;
        $mediaVideosCountMax = array_key_exists('mediaVideosCountMax', $associative_array) ? $associative_array['mediaVideosCountMax'] : null;
        $authorId = array_key_exists('authorId', $associative_array) ? $associative_array['authorId'] : null;
        $notAuthorId = array_key_exists('notAuthorId', $associative_array) ? $associative_array['notAuthorId'] : null;
        $authorName = array_key_exists('authorName', $associative_array) ? $associative_array['authorName'] : null;
        $notAuthorName = array_key_exists('notAuthorName', $associative_array) ? $associative_array['notAuthorName'] : null;
        $sourceId = array_key_exists('sourceId', $associative_array) ? $associative_array['sourceId'] : null;
        $notSourceId = array_key_exists('notSourceId', $associative_array) ? $associative_array['notSourceId'] : null;
        $sourceName = array_key_exists('sourceName', $associative_array) ? $associative_array['sourceName'] : null;
        $notSourceName = array_key_exists('notSourceName', $associative_array) ? $associative_array['notSourceName'] : null;
        $sourceDomain = array_key_exists('sourceDomain', $associative_array) ? $associative_array['sourceDomain'] : null;
        $notSourceDomain = array_key_exists('notSourceDomain', $associative_array) ? $associative_array['notSourceDomain'] : null;
        $sourceLocationsCountry = array_key_exists('sourceLocationsCountry', $associative_array) ? $associative_array['sourceLocationsCountry'] : null;
        $notSourceLocationsCountry = array_key_exists('notSourceLocationsCountry', $associative_array) ? $associative_array['notSourceLocationsCountry'] : null;
        $sourceLocationsState = array_key_exists('sourceLocationsState', $associative_array) ? $associative_array['sourceLocationsState'] : null;
        $notSourceLocationsState = array_key_exists('notSourceLocationsState', $associative_array) ? $associative_array['notSourceLocationsState'] : null;
        $sourceLocationsCity = array_key_exists('sourceLocationsCity', $associative_array) ? $associative_array['sourceLocationsCity'] : null;
        $notSourceLocationsCity = array_key_exists('notSourceLocationsCity', $associative_array) ? $associative_array['notSourceLocationsCity'] : null;
        $sourceScopesCountry = array_key_exists('sourceScopesCountry', $associative_array) ? $associative_array['sourceScopesCountry'] : null;
        $notSourceScopesCountry = array_key_exists('notSourceScopesCountry', $associative_array) ? $associative_array['notSourceScopesCountry'] : null;
        $sourceScopesState = array_key_exists('sourceScopesState', $associative_array) ? $associative_array['sourceScopesState'] : null;
        $notSourceScopesState = array_key_exists('notSourceScopesState', $associative_array) ? $associative_array['notSourceScopesState'] : null;
        $sourceScopesCity = array_key_exists('sourceScopesCity', $associative_array) ? $associative_array['sourceScopesCity'] : null;
        $notSourceScopesCity = array_key_exists('notSourceScopesCity', $associative_array) ? $associative_array['notSourceScopesCity'] : null;
        $sourceScopesLevel = array_key_exists('sourceScopesLevel', $associative_array) ? $associative_array['sourceScopesLevel'] : null;
        $notSourceScopesLevel = array_key_exists('notSourceScopesLevel', $associative_array) ? $associative_array['notSourceScopesLevel'] : null;
        $sourceLinksInCountMin = array_key_exists('sourceLinksInCountMin', $associative_array) ? $associative_array['sourceLinksInCountMin'] : null;
        $sourceLinksInCountMax = array_key_exists('sourceLinksInCountMax', $associative_array) ? $associative_array['sourceLinksInCountMax'] : null;
        $sourceRankingsAlexaRankMin = array_key_exists('sourceRankingsAlexaRankMin', $associative_array) ? $associative_array['sourceRankingsAlexaRankMin'] : null;
        $sourceRankingsAlexaRankMax = array_key_exists('sourceRankingsAlexaRankMax', $associative_array) ? $associative_array['sourceRankingsAlexaRankMax'] : null;
        $sourceRankingsAlexaCountry = array_key_exists('sourceRankingsAlexaCountry', $associative_array) ? $associative_array['sourceRankingsAlexaCountry'] : null;
        $socialSharesCountFacebookMin = array_key_exists('socialSharesCountFacebookMin', $associative_array) ? $associative_array['socialSharesCountFacebookMin'] : null;
        $socialSharesCountFacebookMax = array_key_exists('socialSharesCountFacebookMax', $associative_array) ? $associative_array['socialSharesCountFacebookMax'] : null;
        $socialSharesCountGooglePlusMin = array_key_exists('socialSharesCountGooglePlusMin', $associative_array) ? $associative_array['socialSharesCountGooglePlusMin'] : null;
        $socialSharesCountGooglePlusMax = array_key_exists('socialSharesCountGooglePlusMax', $associative_array) ? $associative_array['socialSharesCountGooglePlusMax'] : null;
        $socialSharesCountLinkedinMin = array_key_exists('socialSharesCountLinkedinMin', $associative_array) ? $associative_array['socialSharesCountLinkedinMin'] : null;
        $socialSharesCountLinkedinMax = array_key_exists('socialSharesCountLinkedinMax', $associative_array) ? $associative_array['socialSharesCountLinkedinMax'] : null;
        $socialSharesCountRedditMin = array_key_exists('socialSharesCountRedditMin', $associative_array) ? $associative_array['socialSharesCountRedditMin'] : null;
        $socialSharesCountRedditMax = array_key_exists('socialSharesCountRedditMax', $associative_array) ? $associative_array['socialSharesCountRedditMax'] : null;

        // verify the required parameter 'field' is set
        if ($field === null || (is_array($field) && count($field) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $field when calling listTrends'
            );
        }
        if ($mediaImagesCountMin !== null && $mediaImagesCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesCountMax !== null && $mediaImagesCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesCountMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesWidthMin !== null && $mediaImagesWidthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesWidthMax !== null && $mediaImagesWidthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesWidthMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesHeightMin !== null && $mediaImagesHeightMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesHeightMax !== null && $mediaImagesHeightMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesHeightMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMin !== null && $mediaImagesContentLengthMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaImagesContentLengthMax !== null && $mediaImagesContentLengthMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaImagesContentLengthMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaVideosCountMin !== null && $mediaVideosCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($mediaVideosCountMax !== null && $mediaVideosCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$mediaVideosCountMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($sourceLinksInCountMin !== null && $sourceLinksInCountMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($sourceLinksInCountMax !== null && $sourceLinksInCountMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceLinksInCountMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMin !== null && $sourceRankingsAlexaRankMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($sourceRankingsAlexaRankMax !== null && $sourceRankingsAlexaRankMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$sourceRankingsAlexaRankMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMin !== null && $socialSharesCountFacebookMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountFacebookMax !== null && $socialSharesCountFacebookMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountFacebookMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMin !== null && $socialSharesCountGooglePlusMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountGooglePlusMax !== null && $socialSharesCountGooglePlusMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountGooglePlusMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMin !== null && $socialSharesCountLinkedinMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountLinkedinMax !== null && $socialSharesCountLinkedinMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountLinkedinMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMin !== null && $socialSharesCountRedditMin <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMin" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($socialSharesCountRedditMax !== null && $socialSharesCountRedditMax <= 0) {
            throw new \InvalidArgumentException('invalid value for "$socialSharesCountRedditMax" when calling DefaultApi.listTrends, must be bigger than 0.');
        }


        $resourcePath = '/trends';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }
        // query params
        if ($notId !== null) {
            $queryParams['!id[]'] = $notId;
        }
        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }
        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }
        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }
        // query params
        if ($translationsEnTitle !== null) {
            $queryParams['translations.en.title'] = $translationsEnTitle;
        }
        // query params
        if ($translationsEnBody !== null) {
            $queryParams['translations.en.body'] = $translationsEnBody;
        }
        // query params
        if ($translationsEnText !== null) {
            $queryParams['translations.en.text'] = $translationsEnText;
        }
        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }
        // query params
        if ($notLanguage !== null) {
            $queryParams['!language[]'] = $notLanguage;
        }
        // query params
        if ($publishedAtStart !== null) {
            $queryParams['published_at.start'] = $publishedAtStart;
        }
        // query params
        if ($publishedAtEnd !== null) {
            $queryParams['published_at.end'] = $publishedAtEnd;
        }
        // query params
        if ($categoriesTaxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categoriesTaxonomy;
        }
        // query params
        if ($categoriesConfident !== null) {
            $queryParams['categories.confident'] = $categoriesConfident;
        }
        // query params
        if ($categoriesId !== null) {
            $queryParams['categories.id[]'] = $categoriesId;
        }
        // query params
        if ($notCategoriesId !== null) {
            $queryParams['!categories.id[]'] = $notCategoriesId;
        }
        // query params
        if ($categoriesLevel !== null) {
            $queryParams['categories.level[]'] = $categoriesLevel;
        }
        // query params
        if ($notCategoriesLevel !== null) {
            $queryParams['!categories.level[]'] = $notCategoriesLevel;
        }
        // query params
        if ($entitiesTitleText !== null) {
            $queryParams['entities.title.text[]'] = $entitiesTitleText;
        }
        // query params
        if ($notEntitiesTitleText !== null) {
            $queryParams['!entities.title.text[]'] = $notEntitiesTitleText;
        }
        // query params
        if ($entitiesTitleType !== null) {
            $queryParams['entities.title.type[]'] = $entitiesTitleType;
        }
        // query params
        if ($notEntitiesTitleType !== null) {
            $queryParams['!entities.title.type[]'] = $notEntitiesTitleType;
        }
        // query params
        if ($entitiesTitleLinksDbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entitiesTitleLinksDbpedia;
        }
        // query params
        if ($notEntitiesTitleLinksDbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $notEntitiesTitleLinksDbpedia;
        }
        // query params
        if ($entitiesBodyText !== null) {
            $queryParams['entities.body.text[]'] = $entitiesBodyText;
        }
        // query params
        if ($notEntitiesBodyText !== null) {
            $queryParams['!entities.body.text[]'] = $notEntitiesBodyText;
        }
        // query params
        if ($entitiesBodyType !== null) {
            $queryParams['entities.body.type[]'] = $entitiesBodyType;
        }
        // query params
        if ($notEntitiesBodyType !== null) {
            $queryParams['!entities.body.type[]'] = $notEntitiesBodyType;
        }
        // query params
        if ($entitiesBodyLinksDbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entitiesBodyLinksDbpedia;
        }
        // query params
        if ($notEntitiesBodyLinksDbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $notEntitiesBodyLinksDbpedia;
        }
        // query params
        if ($sentimentTitlePolarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentimentTitlePolarity;
        }
        // query params
        if ($notSentimentTitlePolarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $notSentimentTitlePolarity;
        }
        // query params
        if ($sentimentBodyPolarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentimentBodyPolarity;
        }
        // query params
        if ($notSentimentBodyPolarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $notSentimentBodyPolarity;
        }
        // query params
        if ($mediaImagesCountMin !== null) {
            $queryParams['media.images.count.min'] = $mediaImagesCountMin;
        }
        // query params
        if ($mediaImagesCountMax !== null) {
            $queryParams['media.images.count.max'] = $mediaImagesCountMax;
        }
        // query params
        if ($mediaImagesWidthMin !== null) {
            $queryParams['media.images.width.min'] = $mediaImagesWidthMin;
        }
        // query params
        if ($mediaImagesWidthMax !== null) {
            $queryParams['media.images.width.max'] = $mediaImagesWidthMax;
        }
        // query params
        if ($mediaImagesHeightMin !== null) {
            $queryParams['media.images.height.min'] = $mediaImagesHeightMin;
        }
        // query params
        if ($mediaImagesHeightMax !== null) {
            $queryParams['media.images.height.max'] = $mediaImagesHeightMax;
        }
        // query params
        if ($mediaImagesContentLengthMin !== null) {
            $queryParams['media.images.content_length.min'] = $mediaImagesContentLengthMin;
        }
        // query params
        if ($mediaImagesContentLengthMax !== null) {
            $queryParams['media.images.content_length.max'] = $mediaImagesContentLengthMax;
        }
        // query params
        if ($mediaImagesFormat !== null) {
            $queryParams['media.images.format[]'] = $mediaImagesFormat;
        }
        // query params
        if ($notMediaImagesFormat !== null) {
            $queryParams['!media.images.format[]'] = $notMediaImagesFormat;
        }
        // query params
        if ($mediaVideosCountMin !== null) {
            $queryParams['media.videos.count.min'] = $mediaVideosCountMin;
        }
        // query params
        if ($mediaVideosCountMax !== null) {
            $queryParams['media.videos.count.max'] = $mediaVideosCountMax;
        }
        // query params
        if ($authorId !== null) {
            $queryParams['author.id[]'] = $authorId;
        }
        // query params
        if ($notAuthorId !== null) {
            $queryParams['!author.id[]'] = $notAuthorId;
        }
        // query params
        if ($authorName !== null) {
            $queryParams['author.name'] = $authorName;
        }
        // query params
        if ($notAuthorName !== null) {
            $queryParams['!author.name'] = $notAuthorName;
        }
        // query params
        if ($sourceId !== null) {
            $queryParams['source.id[]'] = $sourceId;
        }
        // query params
        if ($notSourceId !== null) {
            $queryParams['!source.id[]'] = $notSourceId;
        }
        // query params
        if ($sourceName !== null) {
            $queryParams['source.name[]'] = $sourceName;
        }
        // query params
        if ($notSourceName !== null) {
            $queryParams['!source.name[]'] = $notSourceName;
        }
        // query params
        if ($sourceDomain !== null) {
            $queryParams['source.domain[]'] = $sourceDomain;
        }
        // query params
        if ($notSourceDomain !== null) {
            $queryParams['!source.domain[]'] = $notSourceDomain;
        }
        // query params
        if ($sourceLocationsCountry !== null) {
            $queryParams['source.locations.country[]'] = $sourceLocationsCountry;
        }
        // query params
        if ($notSourceLocationsCountry !== null) {
            $queryParams['!source.locations.country[]'] = $notSourceLocationsCountry;
        }
        // query params
        if ($sourceLocationsState !== null) {
            $queryParams['source.locations.state[]'] = $sourceLocationsState;
        }
        // query params
        if ($notSourceLocationsState !== null) {
            $queryParams['!source.locations.state[]'] = $notSourceLocationsState;
        }
        // query params
        if ($sourceLocationsCity !== null) {
            $queryParams['source.locations.city[]'] = $sourceLocationsCity;
        }
        // query params
        if ($notSourceLocationsCity !== null) {
            $queryParams['!source.locations.city[]'] = $notSourceLocationsCity;
        }
        // query params
        if ($sourceScopesCountry !== null) {
            $queryParams['source.scopes.country[]'] = $sourceScopesCountry;
        }
        // query params
        if ($notSourceScopesCountry !== null) {
            $queryParams['!source.scopes.country[]'] = $notSourceScopesCountry;
        }
        // query params
        if ($sourceScopesState !== null) {
            $queryParams['source.scopes.state[]'] = $sourceScopesState;
        }
        // query params
        if ($notSourceScopesState !== null) {
            $queryParams['!source.scopes.state[]'] = $notSourceScopesState;
        }
        // query params
        if ($sourceScopesCity !== null) {
            $queryParams['source.scopes.city[]'] = $sourceScopesCity;
        }
        // query params
        if ($notSourceScopesCity !== null) {
            $queryParams['!source.scopes.city[]'] = $notSourceScopesCity;
        }
        // query params
        if ($sourceScopesLevel !== null) {
            $queryParams['source.scopes.level[]'] = $sourceScopesLevel;
        }
        // query params
        if ($notSourceScopesLevel !== null) {
            $queryParams['!source.scopes.level[]'] = $notSourceScopesLevel;
        }
        // query params
        if ($sourceLinksInCountMin !== null) {
            $queryParams['source.links_in_count.min'] = $sourceLinksInCountMin;
        }
        // query params
        if ($sourceLinksInCountMax !== null) {
            $queryParams['source.links_in_count.max'] = $sourceLinksInCountMax;
        }
        // query params
        if ($sourceRankingsAlexaRankMin !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $sourceRankingsAlexaRankMin;
        }
        // query params
        if ($sourceRankingsAlexaRankMax !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $sourceRankingsAlexaRankMax;
        }
        // query params
        if ($sourceRankingsAlexaCountry !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $sourceRankingsAlexaCountry;
        }
        // query params
        if ($socialSharesCountFacebookMin !== null) {
            $queryParams['social_shares_count.facebook.min'] = $socialSharesCountFacebookMin;
        }
        // query params
        if ($socialSharesCountFacebookMax !== null) {
            $queryParams['social_shares_count.facebook.max'] = $socialSharesCountFacebookMax;
        }
        // query params
        if ($socialSharesCountGooglePlusMin !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $socialSharesCountGooglePlusMin;
        }
        // query params
        if ($socialSharesCountGooglePlusMax !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $socialSharesCountGooglePlusMax;
        }
        // query params
        if ($socialSharesCountLinkedinMin !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $socialSharesCountLinkedinMin;
        }
        // query params
        if ($socialSharesCountLinkedinMax !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $socialSharesCountLinkedinMax;
        }
        // query params
        if ($socialSharesCountRedditMin !== null) {
            $queryParams['social_shares_count.reddit.min'] = $socialSharesCountRedditMin;
        }
        // query params
        if ($socialSharesCountRedditMax !== null) {
            $queryParams['social_shares_count.reddit.max'] = $socialSharesCountRedditMax;
        }
        // query params
        if ($field !== null) {
            $queryParams['field'] = $field;
        }



        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
