<?php
/**
 * DefaultApi
 * PHP version 5
 *
 * @category Class
 * @package  Aylien\NewsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AYLIEN News API
 *
 * The AYLIEN News API is the most powerful way of sourcing, searching and syndicating analyzed and enriched news content. It is accessed by sending HTTP requests to our server, which returns information to your client.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@aylien.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Aylien\NewsApi\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use Aylien\NewsApi\ApiException;
use Aylien\NewsApi\Configuration;
use Aylien\NewsApi\HeaderSelector;
use Aylien\NewsApi\ObjectSerializer;

/**
 * DefaultApi Class Doc Comment
 *
 * @category Class
 * @package  Aylien\NewsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DefaultApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $host_index (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $host_index = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $host_index;
    }

    /**
     * Set the host index
     *
     * @param  int Host index (required)
     */
    public function setHostIndex($host_index)
    {
        $this->hostIndex = $host_index;
    }

    /**
     * Get the host index
     *
     * @return Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation listAutocompletes
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Autocompletes|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listAutocompletes($associative_array)
    {
        list($response) = $this->listAutocompletesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listAutocompletesWithHttpInfo
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Autocompletes|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listAutocompletesWithHttpInfo($associative_array)
    {
        $request = $this->listAutocompletesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Autocompletes' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Autocompletes', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Autocompletes';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Autocompletes',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listAutocompletesAsync
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listAutocompletesAsync($associative_array)
    {
        return $this->listAutocompletesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listAutocompletesAsyncWithHttpInfo
     *
     * List autocompletes
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listAutocompletesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Autocompletes';
        $request = $this->listAutocompletesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listAutocompletes'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $type This parameter is used for defining the type of autocompletes. (required)
     * @param  string $term This parameter is used for finding autocomplete objects that contain the specified value. (required)
     * @param  string $language This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'en')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listAutocompletesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $type = array_key_exists('type', $associative_array) ? $associative_array['type'] : null;
        $term = array_key_exists('term', $associative_array) ? $associative_array['term'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : 'en';
        $per_page = array_key_exists('per_page', $associative_array) ? $associative_array['per_page'] : 3;

        // verify the required parameter 'type' is set
        if ($type === null || (is_array($type) && count($type) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $type when calling listAutocompletes'
            );
        }
        // verify the required parameter 'term' is set
        if ($term === null || (is_array($term) && count($term) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $term when calling listAutocompletes'
            );
        }
        if (strlen($term) < 1) {
            throw new \InvalidArgumentException('invalid length for "$term" when calling DefaultApi.listAutocompletes, must be bigger than or equal to 1.');
        }

        if ($per_page !== null && $per_page > 100) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listAutocompletes, must be smaller than or equal to 100.');
        }
        if ($per_page !== null && $per_page < 1) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listAutocompletes, must be bigger than or equal to 1.');
        }


        $resourcePath = '/autocompletes';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($type !== null) {
            $queryParams['type'] = $type;
        }


        // query params
        if ($term !== null) {
            $queryParams['term'] = $term;
        }


        // query params
        if ($language !== null) {
            $queryParams['language'] = $language;
        }


        // query params
        if ($per_page !== null) {
            $queryParams['per_page'] = $per_page;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listClusters
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $not_id This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $story_count_min This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $story_count_max This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $time_start This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $time_end This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_start This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_end This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_start This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_end This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $location_country This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_location_country This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Clusters|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listClusters($associative_array)
    {
        list($response) = $this->listClustersWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listClustersWithHttpInfo
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $not_id This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $story_count_min This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $story_count_max This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $time_start This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $time_end This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_start This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_end This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_start This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_end This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $location_country This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_location_country This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Clusters|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listClustersWithHttpInfo($associative_array)
    {
        $request = $this->listClustersRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Clusters' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Clusters', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Clusters';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Clusters',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listClustersAsync
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $not_id This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $story_count_min This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $story_count_max This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $time_start This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $time_end This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_start This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_end This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_start This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_end This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $location_country This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_location_country This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listClustersAsync($associative_array)
    {
        return $this->listClustersAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listClustersAsyncWithHttpInfo
     *
     * List Clusters
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $not_id This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $story_count_min This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $story_count_max This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $time_start This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $time_end This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_start This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_end This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_start This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_end This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $location_country This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_location_country This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listClustersAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Clusters';
        $request = $this->listClustersRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listClusters'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding clusters by cluster id. (optional)
     * @param  int[] $not_id This parameter is used for excluding clusters by cluster id. (optional)
     * @param  int $story_count_min This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them. (optional)
     * @param  int $story_count_max This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them. (optional)
     * @param  string $time_start This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $time_end This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_start This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $earliest_story_end This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_start This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $latest_story_end This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string[] $location_country This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_location_country This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listClustersRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $story_count_min = array_key_exists('story_count_min', $associative_array) ? $associative_array['story_count_min'] : null;
        $story_count_max = array_key_exists('story_count_max', $associative_array) ? $associative_array['story_count_max'] : null;
        $time_start = array_key_exists('time_start', $associative_array) ? $associative_array['time_start'] : null;
        $time_end = array_key_exists('time_end', $associative_array) ? $associative_array['time_end'] : null;
        $earliest_story_start = array_key_exists('earliest_story_start', $associative_array) ? $associative_array['earliest_story_start'] : null;
        $earliest_story_end = array_key_exists('earliest_story_end', $associative_array) ? $associative_array['earliest_story_end'] : null;
        $latest_story_start = array_key_exists('latest_story_start', $associative_array) ? $associative_array['latest_story_start'] : null;
        $latest_story_end = array_key_exists('latest_story_end', $associative_array) ? $associative_array['latest_story_end'] : null;
        $location_country = array_key_exists('location_country', $associative_array) ? $associative_array['location_country'] : null;
        $not_location_country = array_key_exists('not_location_country', $associative_array) ? $associative_array['not_location_country'] : null;

        if ($story_count_min !== null && $story_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$story_count_min" when calling DefaultApi.listClusters, must be bigger than 0.');
        }

        if ($story_count_max !== null && $story_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$story_count_max" when calling DefaultApi.listClusters, must be bigger than 0.');
        }


        $resourcePath = '/clusters';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($story_count_min !== null) {
            $queryParams['story_count.min'] = $story_count_min;
        }


        // query params
        if ($story_count_max !== null) {
            $queryParams['story_count.max'] = $story_count_max;
        }


        // query params
        if ($time_start !== null) {
            $queryParams['time.start'] = $time_start;
        }


        // query params
        if ($time_end !== null) {
            $queryParams['time.end'] = $time_end;
        }


        // query params
        if ($earliest_story_start !== null) {
            $queryParams['earliest_story.start'] = $earliest_story_start;
        }


        // query params
        if ($earliest_story_end !== null) {
            $queryParams['earliest_story.end'] = $earliest_story_end;
        }


        // query params
        if ($latest_story_start !== null) {
            $queryParams['latest_story.start'] = $latest_story_start;
        }


        // query params
        if ($latest_story_end !== null) {
            $queryParams['latest_story.end'] = $latest_story_end;
        }


        // query params
        if ($location_country !== null) {
            $queryParams['location.country'] = $location_country;
        }


        // query params
        if ($not_location_country !== null) {
            $queryParams['!location.country'] = $not_location_country;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listCoverages
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  \DateTime $story_published_at Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Coverages|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listCoverages($associative_array)
    {
        list($response) = $this->listCoveragesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listCoveragesWithHttpInfo
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  \DateTime $story_published_at Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Coverages|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listCoveragesWithHttpInfo($associative_array)
    {
        $request = $this->listCoveragesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Coverages' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Coverages', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Coverages';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Coverages',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listCoveragesAsync
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  \DateTime $story_published_at Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCoveragesAsync($associative_array)
    {
        return $this->listCoveragesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listCoveragesAsyncWithHttpInfo
     *
     * List coverages
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  \DateTime $story_published_at Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCoveragesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Coverages';
        $request = $this->listCoveragesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listCoverages'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  \DateTime $story_published_at Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime). (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listCoveragesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translations_en_title = array_key_exists('translations_en_title', $associative_array) ? $associative_array['translations_en_title'] : null;
        $translations_en_body = array_key_exists('translations_en_body', $associative_array) ? $associative_array['translations_en_body'] : null;
        $translations_en_text = array_key_exists('translations_en_text', $associative_array) ? $associative_array['translations_en_text'] : null;
        $links_permalink = array_key_exists('links_permalink', $associative_array) ? $associative_array['links_permalink'] : null;
        $not_links_permalink = array_key_exists('not_links_permalink', $associative_array) ? $associative_array['not_links_permalink'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $not_language = array_key_exists('not_language', $associative_array) ? $associative_array['not_language'] : null;
        $published_at_start = array_key_exists('published_at_start', $associative_array) ? $associative_array['published_at_start'] : null;
        $published_at_end = array_key_exists('published_at_end', $associative_array) ? $associative_array['published_at_end'] : null;
        $categories_taxonomy = array_key_exists('categories_taxonomy', $associative_array) ? $associative_array['categories_taxonomy'] : null;
        $categories_confident = array_key_exists('categories_confident', $associative_array) ? $associative_array['categories_confident'] : true;
        $categories_id = array_key_exists('categories_id', $associative_array) ? $associative_array['categories_id'] : null;
        $not_categories_id = array_key_exists('not_categories_id', $associative_array) ? $associative_array['not_categories_id'] : null;
        $categories_level = array_key_exists('categories_level', $associative_array) ? $associative_array['categories_level'] : null;
        $not_categories_level = array_key_exists('not_categories_level', $associative_array) ? $associative_array['not_categories_level'] : null;
        $entities_title_text = array_key_exists('entities_title_text', $associative_array) ? $associative_array['entities_title_text'] : null;
        $not_entities_title_text = array_key_exists('not_entities_title_text', $associative_array) ? $associative_array['not_entities_title_text'] : null;
        $entities_title_type = array_key_exists('entities_title_type', $associative_array) ? $associative_array['entities_title_type'] : null;
        $not_entities_title_type = array_key_exists('not_entities_title_type', $associative_array) ? $associative_array['not_entities_title_type'] : null;
        $entities_title_links_dbpedia = array_key_exists('entities_title_links_dbpedia', $associative_array) ? $associative_array['entities_title_links_dbpedia'] : null;
        $not_entities_title_links_dbpedia = array_key_exists('not_entities_title_links_dbpedia', $associative_array) ? $associative_array['not_entities_title_links_dbpedia'] : null;
        $entities_body_text = array_key_exists('entities_body_text', $associative_array) ? $associative_array['entities_body_text'] : null;
        $not_entities_body_text = array_key_exists('not_entities_body_text', $associative_array) ? $associative_array['not_entities_body_text'] : null;
        $entities_body_type = array_key_exists('entities_body_type', $associative_array) ? $associative_array['entities_body_type'] : null;
        $not_entities_body_type = array_key_exists('not_entities_body_type', $associative_array) ? $associative_array['not_entities_body_type'] : null;
        $entities_body_links_dbpedia = array_key_exists('entities_body_links_dbpedia', $associative_array) ? $associative_array['entities_body_links_dbpedia'] : null;
        $not_entities_body_links_dbpedia = array_key_exists('not_entities_body_links_dbpedia', $associative_array) ? $associative_array['not_entities_body_links_dbpedia'] : null;
        $sentiment_title_polarity = array_key_exists('sentiment_title_polarity', $associative_array) ? $associative_array['sentiment_title_polarity'] : null;
        $not_sentiment_title_polarity = array_key_exists('not_sentiment_title_polarity', $associative_array) ? $associative_array['not_sentiment_title_polarity'] : null;
        $sentiment_body_polarity = array_key_exists('sentiment_body_polarity', $associative_array) ? $associative_array['sentiment_body_polarity'] : null;
        $not_sentiment_body_polarity = array_key_exists('not_sentiment_body_polarity', $associative_array) ? $associative_array['not_sentiment_body_polarity'] : null;
        $media_images_count_min = array_key_exists('media_images_count_min', $associative_array) ? $associative_array['media_images_count_min'] : null;
        $media_images_count_max = array_key_exists('media_images_count_max', $associative_array) ? $associative_array['media_images_count_max'] : null;
        $media_images_width_min = array_key_exists('media_images_width_min', $associative_array) ? $associative_array['media_images_width_min'] : null;
        $media_images_width_max = array_key_exists('media_images_width_max', $associative_array) ? $associative_array['media_images_width_max'] : null;
        $media_images_height_min = array_key_exists('media_images_height_min', $associative_array) ? $associative_array['media_images_height_min'] : null;
        $media_images_height_max = array_key_exists('media_images_height_max', $associative_array) ? $associative_array['media_images_height_max'] : null;
        $media_images_content_length_min = array_key_exists('media_images_content_length_min', $associative_array) ? $associative_array['media_images_content_length_min'] : null;
        $media_images_content_length_max = array_key_exists('media_images_content_length_max', $associative_array) ? $associative_array['media_images_content_length_max'] : null;
        $media_images_format = array_key_exists('media_images_format', $associative_array) ? $associative_array['media_images_format'] : null;
        $not_media_images_format = array_key_exists('not_media_images_format', $associative_array) ? $associative_array['not_media_images_format'] : null;
        $media_videos_count_min = array_key_exists('media_videos_count_min', $associative_array) ? $associative_array['media_videos_count_min'] : null;
        $media_videos_count_max = array_key_exists('media_videos_count_max', $associative_array) ? $associative_array['media_videos_count_max'] : null;
        $author_id = array_key_exists('author_id', $associative_array) ? $associative_array['author_id'] : null;
        $not_author_id = array_key_exists('not_author_id', $associative_array) ? $associative_array['not_author_id'] : null;
        $author_name = array_key_exists('author_name', $associative_array) ? $associative_array['author_name'] : null;
        $not_author_name = array_key_exists('not_author_name', $associative_array) ? $associative_array['not_author_name'] : null;
        $source_id = array_key_exists('source_id', $associative_array) ? $associative_array['source_id'] : null;
        $not_source_id = array_key_exists('not_source_id', $associative_array) ? $associative_array['not_source_id'] : null;
        $source_name = array_key_exists('source_name', $associative_array) ? $associative_array['source_name'] : null;
        $not_source_name = array_key_exists('not_source_name', $associative_array) ? $associative_array['not_source_name'] : null;
        $source_domain = array_key_exists('source_domain', $associative_array) ? $associative_array['source_domain'] : null;
        $not_source_domain = array_key_exists('not_source_domain', $associative_array) ? $associative_array['not_source_domain'] : null;
        $source_locations_country = array_key_exists('source_locations_country', $associative_array) ? $associative_array['source_locations_country'] : null;
        $not_source_locations_country = array_key_exists('not_source_locations_country', $associative_array) ? $associative_array['not_source_locations_country'] : null;
        $source_locations_state = array_key_exists('source_locations_state', $associative_array) ? $associative_array['source_locations_state'] : null;
        $not_source_locations_state = array_key_exists('not_source_locations_state', $associative_array) ? $associative_array['not_source_locations_state'] : null;
        $source_locations_city = array_key_exists('source_locations_city', $associative_array) ? $associative_array['source_locations_city'] : null;
        $not_source_locations_city = array_key_exists('not_source_locations_city', $associative_array) ? $associative_array['not_source_locations_city'] : null;
        $source_scopes_country = array_key_exists('source_scopes_country', $associative_array) ? $associative_array['source_scopes_country'] : null;
        $not_source_scopes_country = array_key_exists('not_source_scopes_country', $associative_array) ? $associative_array['not_source_scopes_country'] : null;
        $source_scopes_state = array_key_exists('source_scopes_state', $associative_array) ? $associative_array['source_scopes_state'] : null;
        $not_source_scopes_state = array_key_exists('not_source_scopes_state', $associative_array) ? $associative_array['not_source_scopes_state'] : null;
        $source_scopes_city = array_key_exists('source_scopes_city', $associative_array) ? $associative_array['source_scopes_city'] : null;
        $not_source_scopes_city = array_key_exists('not_source_scopes_city', $associative_array) ? $associative_array['not_source_scopes_city'] : null;
        $source_scopes_level = array_key_exists('source_scopes_level', $associative_array) ? $associative_array['source_scopes_level'] : null;
        $not_source_scopes_level = array_key_exists('not_source_scopes_level', $associative_array) ? $associative_array['not_source_scopes_level'] : null;
        $source_links_in_count_min = array_key_exists('source_links_in_count_min', $associative_array) ? $associative_array['source_links_in_count_min'] : null;
        $source_links_in_count_max = array_key_exists('source_links_in_count_max', $associative_array) ? $associative_array['source_links_in_count_max'] : null;
        $source_rankings_alexa_rank_min = array_key_exists('source_rankings_alexa_rank_min', $associative_array) ? $associative_array['source_rankings_alexa_rank_min'] : null;
        $source_rankings_alexa_rank_max = array_key_exists('source_rankings_alexa_rank_max', $associative_array) ? $associative_array['source_rankings_alexa_rank_max'] : null;
        $source_rankings_alexa_country = array_key_exists('source_rankings_alexa_country', $associative_array) ? $associative_array['source_rankings_alexa_country'] : null;
        $social_shares_count_facebook_min = array_key_exists('social_shares_count_facebook_min', $associative_array) ? $associative_array['social_shares_count_facebook_min'] : null;
        $social_shares_count_facebook_max = array_key_exists('social_shares_count_facebook_max', $associative_array) ? $associative_array['social_shares_count_facebook_max'] : null;
        $social_shares_count_google_plus_min = array_key_exists('social_shares_count_google_plus_min', $associative_array) ? $associative_array['social_shares_count_google_plus_min'] : null;
        $social_shares_count_google_plus_max = array_key_exists('social_shares_count_google_plus_max', $associative_array) ? $associative_array['social_shares_count_google_plus_max'] : null;
        $social_shares_count_linkedin_min = array_key_exists('social_shares_count_linkedin_min', $associative_array) ? $associative_array['social_shares_count_linkedin_min'] : null;
        $social_shares_count_linkedin_max = array_key_exists('social_shares_count_linkedin_max', $associative_array) ? $associative_array['social_shares_count_linkedin_max'] : null;
        $social_shares_count_reddit_min = array_key_exists('social_shares_count_reddit_min', $associative_array) ? $associative_array['social_shares_count_reddit_min'] : null;
        $social_shares_count_reddit_max = array_key_exists('social_shares_count_reddit_max', $associative_array) ? $associative_array['social_shares_count_reddit_max'] : null;
        $clusters = array_key_exists('clusters', $associative_array) ? $associative_array['clusters'] : null;
        $return = array_key_exists('return', $associative_array) ? $associative_array['return'] : null;
        $story_id = array_key_exists('story_id', $associative_array) ? $associative_array['story_id'] : null;
        $story_url = array_key_exists('story_url', $associative_array) ? $associative_array['story_url'] : null;
        $story_title = array_key_exists('story_title', $associative_array) ? $associative_array['story_title'] : null;
        $story_body = array_key_exists('story_body', $associative_array) ? $associative_array['story_body'] : null;
        $story_published_at = array_key_exists('story_published_at', $associative_array) ? $associative_array['story_published_at'] : null;
        $story_language = array_key_exists('story_language', $associative_array) ? $associative_array['story_language'] : 'auto';
        $per_page = array_key_exists('per_page', $associative_array) ? $associative_array['per_page'] : 3;

        if ($media_images_count_min !== null && $media_images_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_count_max !== null && $media_images_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_width_min !== null && $media_images_width_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_width_max !== null && $media_images_width_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_height_min !== null && $media_images_height_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_height_max !== null && $media_images_height_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_content_length_min !== null && $media_images_content_length_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_images_content_length_max !== null && $media_images_content_length_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_videos_count_min !== null && $media_videos_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($media_videos_count_max !== null && $media_videos_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($source_links_in_count_min !== null && $source_links_in_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($source_links_in_count_max !== null && $source_links_in_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_min !== null && $source_rankings_alexa_rank_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_max !== null && $source_rankings_alexa_rank_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_min !== null && $social_shares_count_facebook_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_max !== null && $social_shares_count_facebook_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_min !== null && $social_shares_count_google_plus_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_max !== null && $social_shares_count_google_plus_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_min !== null && $social_shares_count_linkedin_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_max !== null && $social_shares_count_linkedin_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_min !== null && $social_shares_count_reddit_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_min" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_max !== null && $social_shares_count_reddit_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_max" when calling DefaultApi.listCoverages, must be bigger than 0.');
        }

        if ($per_page !== null && $per_page > 100) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listCoverages, must be smaller than or equal to 100.');
        }
        if ($per_page !== null && $per_page < 1) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listCoverages, must be bigger than or equal to 1.');
        }


        $resourcePath = '/coverages';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }


        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }


        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }


        // query params
        if ($translations_en_title !== null) {
            $queryParams['translations.en.title'] = $translations_en_title;
        }


        // query params
        if ($translations_en_body !== null) {
            $queryParams['translations.en.body'] = $translations_en_body;
        }


        // query params
        if ($translations_en_text !== null) {
            $queryParams['translations.en.text'] = $translations_en_text;
        }


        // query params
        if ($links_permalink !== null) {
            $queryParams['links.permalink[]'] = $links_permalink;
        }


        // query params
        if ($not_links_permalink !== null) {
            $queryParams['!links.permalink[]'] = $not_links_permalink;
        }


        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }


        // query params
        if ($not_language !== null) {
            $queryParams['!language[]'] = $not_language;
        }


        // query params
        if ($published_at_start !== null) {
            $queryParams['published_at.start'] = $published_at_start;
        }


        // query params
        if ($published_at_end !== null) {
            $queryParams['published_at.end'] = $published_at_end;
        }


        // query params
        if ($categories_taxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categories_taxonomy;
        }


        // query params
        if ($categories_confident !== null) {
            $queryParams['categories.confident'] = $categories_confident;
        }


        // query params
        if ($categories_id !== null) {
            $queryParams['categories.id[]'] = $categories_id;
        }


        // query params
        if ($not_categories_id !== null) {
            $queryParams['!categories.id[]'] = $not_categories_id;
        }


        // query params
        if ($categories_level !== null) {
            $queryParams['categories.level[]'] = $categories_level;
        }


        // query params
        if ($not_categories_level !== null) {
            $queryParams['!categories.level[]'] = $not_categories_level;
        }


        // query params
        if ($entities_title_text !== null) {
            $queryParams['entities.title.text[]'] = $entities_title_text;
        }


        // query params
        if ($not_entities_title_text !== null) {
            $queryParams['!entities.title.text[]'] = $not_entities_title_text;
        }


        // query params
        if ($entities_title_type !== null) {
            $queryParams['entities.title.type[]'] = $entities_title_type;
        }


        // query params
        if ($not_entities_title_type !== null) {
            $queryParams['!entities.title.type[]'] = $not_entities_title_type;
        }


        // query params
        if ($entities_title_links_dbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entities_title_links_dbpedia;
        }


        // query params
        if ($not_entities_title_links_dbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $not_entities_title_links_dbpedia;
        }


        // query params
        if ($entities_body_text !== null) {
            $queryParams['entities.body.text[]'] = $entities_body_text;
        }


        // query params
        if ($not_entities_body_text !== null) {
            $queryParams['!entities.body.text[]'] = $not_entities_body_text;
        }


        // query params
        if ($entities_body_type !== null) {
            $queryParams['entities.body.type[]'] = $entities_body_type;
        }


        // query params
        if ($not_entities_body_type !== null) {
            $queryParams['!entities.body.type[]'] = $not_entities_body_type;
        }


        // query params
        if ($entities_body_links_dbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entities_body_links_dbpedia;
        }


        // query params
        if ($not_entities_body_links_dbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $not_entities_body_links_dbpedia;
        }


        // query params
        if ($sentiment_title_polarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentiment_title_polarity;
        }


        // query params
        if ($not_sentiment_title_polarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $not_sentiment_title_polarity;
        }


        // query params
        if ($sentiment_body_polarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentiment_body_polarity;
        }


        // query params
        if ($not_sentiment_body_polarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $not_sentiment_body_polarity;
        }


        // query params
        if ($media_images_count_min !== null) {
            $queryParams['media.images.count.min'] = $media_images_count_min;
        }


        // query params
        if ($media_images_count_max !== null) {
            $queryParams['media.images.count.max'] = $media_images_count_max;
        }


        // query params
        if ($media_images_width_min !== null) {
            $queryParams['media.images.width.min'] = $media_images_width_min;
        }


        // query params
        if ($media_images_width_max !== null) {
            $queryParams['media.images.width.max'] = $media_images_width_max;
        }


        // query params
        if ($media_images_height_min !== null) {
            $queryParams['media.images.height.min'] = $media_images_height_min;
        }


        // query params
        if ($media_images_height_max !== null) {
            $queryParams['media.images.height.max'] = $media_images_height_max;
        }


        // query params
        if ($media_images_content_length_min !== null) {
            $queryParams['media.images.content_length.min'] = $media_images_content_length_min;
        }


        // query params
        if ($media_images_content_length_max !== null) {
            $queryParams['media.images.content_length.max'] = $media_images_content_length_max;
        }


        // query params
        if ($media_images_format !== null) {
            $queryParams['media.images.format[]'] = $media_images_format;
        }


        // query params
        if ($not_media_images_format !== null) {
            $queryParams['!media.images.format[]'] = $not_media_images_format;
        }


        // query params
        if ($media_videos_count_min !== null) {
            $queryParams['media.videos.count.min'] = $media_videos_count_min;
        }


        // query params
        if ($media_videos_count_max !== null) {
            $queryParams['media.videos.count.max'] = $media_videos_count_max;
        }


        // query params
        if ($author_id !== null) {
            $queryParams['author.id[]'] = $author_id;
        }


        // query params
        if ($not_author_id !== null) {
            $queryParams['!author.id[]'] = $not_author_id;
        }


        // query params
        if ($author_name !== null) {
            $queryParams['author.name'] = $author_name;
        }


        // query params
        if ($not_author_name !== null) {
            $queryParams['!author.name'] = $not_author_name;
        }


        // query params
        if ($source_id !== null) {
            $queryParams['source.id[]'] = $source_id;
        }


        // query params
        if ($not_source_id !== null) {
            $queryParams['!source.id[]'] = $not_source_id;
        }


        // query params
        if ($source_name !== null) {
            $queryParams['source.name[]'] = $source_name;
        }


        // query params
        if ($not_source_name !== null) {
            $queryParams['!source.name[]'] = $not_source_name;
        }


        // query params
        if ($source_domain !== null) {
            $queryParams['source.domain[]'] = $source_domain;
        }


        // query params
        if ($not_source_domain !== null) {
            $queryParams['!source.domain[]'] = $not_source_domain;
        }


        // query params
        if ($source_locations_country !== null) {
            $queryParams['source.locations.country[]'] = $source_locations_country;
        }


        // query params
        if ($not_source_locations_country !== null) {
            $queryParams['!source.locations.country[]'] = $not_source_locations_country;
        }


        // query params
        if ($source_locations_state !== null) {
            $queryParams['source.locations.state[]'] = $source_locations_state;
        }


        // query params
        if ($not_source_locations_state !== null) {
            $queryParams['!source.locations.state[]'] = $not_source_locations_state;
        }


        // query params
        if ($source_locations_city !== null) {
            $queryParams['source.locations.city[]'] = $source_locations_city;
        }


        // query params
        if ($not_source_locations_city !== null) {
            $queryParams['!source.locations.city[]'] = $not_source_locations_city;
        }


        // query params
        if ($source_scopes_country !== null) {
            $queryParams['source.scopes.country[]'] = $source_scopes_country;
        }


        // query params
        if ($not_source_scopes_country !== null) {
            $queryParams['!source.scopes.country[]'] = $not_source_scopes_country;
        }


        // query params
        if ($source_scopes_state !== null) {
            $queryParams['source.scopes.state[]'] = $source_scopes_state;
        }


        // query params
        if ($not_source_scopes_state !== null) {
            $queryParams['!source.scopes.state[]'] = $not_source_scopes_state;
        }


        // query params
        if ($source_scopes_city !== null) {
            $queryParams['source.scopes.city[]'] = $source_scopes_city;
        }


        // query params
        if ($not_source_scopes_city !== null) {
            $queryParams['!source.scopes.city[]'] = $not_source_scopes_city;
        }


        // query params
        if ($source_scopes_level !== null) {
            $queryParams['source.scopes.level[]'] = $source_scopes_level;
        }


        // query params
        if ($not_source_scopes_level !== null) {
            $queryParams['!source.scopes.level[]'] = $not_source_scopes_level;
        }


        // query params
        if ($source_links_in_count_min !== null) {
            $queryParams['source.links_in_count.min'] = $source_links_in_count_min;
        }


        // query params
        if ($source_links_in_count_max !== null) {
            $queryParams['source.links_in_count.max'] = $source_links_in_count_max;
        }


        // query params
        if ($source_rankings_alexa_rank_min !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $source_rankings_alexa_rank_min;
        }


        // query params
        if ($source_rankings_alexa_rank_max !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $source_rankings_alexa_rank_max;
        }


        // query params
        if ($source_rankings_alexa_country !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $source_rankings_alexa_country;
        }


        // query params
        if ($social_shares_count_facebook_min !== null) {
            $queryParams['social_shares_count.facebook.min'] = $social_shares_count_facebook_min;
        }


        // query params
        if ($social_shares_count_facebook_max !== null) {
            $queryParams['social_shares_count.facebook.max'] = $social_shares_count_facebook_max;
        }


        // query params
        if ($social_shares_count_google_plus_min !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $social_shares_count_google_plus_min;
        }


        // query params
        if ($social_shares_count_google_plus_max !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $social_shares_count_google_plus_max;
        }


        // query params
        if ($social_shares_count_linkedin_min !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $social_shares_count_linkedin_min;
        }


        // query params
        if ($social_shares_count_linkedin_max !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $social_shares_count_linkedin_max;
        }


        // query params
        if ($social_shares_count_reddit_min !== null) {
            $queryParams['social_shares_count.reddit.min'] = $social_shares_count_reddit_min;
        }


        // query params
        if ($social_shares_count_reddit_max !== null) {
            $queryParams['social_shares_count.reddit.max'] = $social_shares_count_reddit_max;
        }


        // query params
        if ($clusters !== null) {
            $queryParams['clusters[]'] = $clusters;
        }


        // query params
        if ($return !== null) {
            $queryParams['return[]'] = $return;
        }


        // query params
        if ($story_id !== null) {
            $queryParams['story_id'] = $story_id;
        }


        // query params
        if ($story_url !== null) {
            $queryParams['story_url'] = $story_url;
        }


        // query params
        if ($story_title !== null) {
            $queryParams['story_title'] = $story_title;
        }


        // query params
        if ($story_body !== null) {
            $queryParams['story_body'] = $story_body;
        }


        // query params
        if ($story_published_at !== null) {
            $queryParams['story_published_at'] = $story_published_at;
        }


        // query params
        if ($story_language !== null) {
            $queryParams['story_language'] = $story_language;
        }


        // query params
        if ($per_page !== null) {
            $queryParams['per_page'] = $per_page;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listHistograms
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $interval_start This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $interval_end This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $interval_width This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Histograms|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listHistograms($associative_array)
    {
        list($response) = $this->listHistogramsWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listHistogramsWithHttpInfo
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $interval_start This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $interval_end This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $interval_width This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Histograms|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listHistogramsWithHttpInfo($associative_array)
    {
        $request = $this->listHistogramsRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Histograms' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Histograms', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Histograms';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Histograms',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listHistogramsAsync
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $interval_start This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $interval_end This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $interval_width This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listHistogramsAsync($associative_array)
    {
        return $this->listHistogramsAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listHistogramsAsyncWithHttpInfo
     *
     * List histograms
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $interval_start This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $interval_end This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $interval_width This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listHistogramsAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Histograms';
        $request = $this->listHistogramsRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listHistograms'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  int $interval_start This parameter is used for setting the start data point of histogram intervals. (optional)
     * @param  int $interval_end This parameter is used for setting the end data point of histogram intervals. (optional)
     * @param  int $interval_width This parameter is used for setting the width of histogram intervals. (optional)
     * @param  string $field This parameter is used for specifying the y-axis variable for the histogram. (optional, default to 'social_shares_count')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listHistogramsRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translations_en_title = array_key_exists('translations_en_title', $associative_array) ? $associative_array['translations_en_title'] : null;
        $translations_en_body = array_key_exists('translations_en_body', $associative_array) ? $associative_array['translations_en_body'] : null;
        $translations_en_text = array_key_exists('translations_en_text', $associative_array) ? $associative_array['translations_en_text'] : null;
        $links_permalink = array_key_exists('links_permalink', $associative_array) ? $associative_array['links_permalink'] : null;
        $not_links_permalink = array_key_exists('not_links_permalink', $associative_array) ? $associative_array['not_links_permalink'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $not_language = array_key_exists('not_language', $associative_array) ? $associative_array['not_language'] : null;
        $published_at_start = array_key_exists('published_at_start', $associative_array) ? $associative_array['published_at_start'] : null;
        $published_at_end = array_key_exists('published_at_end', $associative_array) ? $associative_array['published_at_end'] : null;
        $categories_taxonomy = array_key_exists('categories_taxonomy', $associative_array) ? $associative_array['categories_taxonomy'] : null;
        $categories_confident = array_key_exists('categories_confident', $associative_array) ? $associative_array['categories_confident'] : true;
        $categories_id = array_key_exists('categories_id', $associative_array) ? $associative_array['categories_id'] : null;
        $not_categories_id = array_key_exists('not_categories_id', $associative_array) ? $associative_array['not_categories_id'] : null;
        $categories_level = array_key_exists('categories_level', $associative_array) ? $associative_array['categories_level'] : null;
        $not_categories_level = array_key_exists('not_categories_level', $associative_array) ? $associative_array['not_categories_level'] : null;
        $entities_title_text = array_key_exists('entities_title_text', $associative_array) ? $associative_array['entities_title_text'] : null;
        $not_entities_title_text = array_key_exists('not_entities_title_text', $associative_array) ? $associative_array['not_entities_title_text'] : null;
        $entities_title_type = array_key_exists('entities_title_type', $associative_array) ? $associative_array['entities_title_type'] : null;
        $not_entities_title_type = array_key_exists('not_entities_title_type', $associative_array) ? $associative_array['not_entities_title_type'] : null;
        $entities_title_links_dbpedia = array_key_exists('entities_title_links_dbpedia', $associative_array) ? $associative_array['entities_title_links_dbpedia'] : null;
        $not_entities_title_links_dbpedia = array_key_exists('not_entities_title_links_dbpedia', $associative_array) ? $associative_array['not_entities_title_links_dbpedia'] : null;
        $entities_body_text = array_key_exists('entities_body_text', $associative_array) ? $associative_array['entities_body_text'] : null;
        $not_entities_body_text = array_key_exists('not_entities_body_text', $associative_array) ? $associative_array['not_entities_body_text'] : null;
        $entities_body_type = array_key_exists('entities_body_type', $associative_array) ? $associative_array['entities_body_type'] : null;
        $not_entities_body_type = array_key_exists('not_entities_body_type', $associative_array) ? $associative_array['not_entities_body_type'] : null;
        $entities_body_links_dbpedia = array_key_exists('entities_body_links_dbpedia', $associative_array) ? $associative_array['entities_body_links_dbpedia'] : null;
        $not_entities_body_links_dbpedia = array_key_exists('not_entities_body_links_dbpedia', $associative_array) ? $associative_array['not_entities_body_links_dbpedia'] : null;
        $sentiment_title_polarity = array_key_exists('sentiment_title_polarity', $associative_array) ? $associative_array['sentiment_title_polarity'] : null;
        $not_sentiment_title_polarity = array_key_exists('not_sentiment_title_polarity', $associative_array) ? $associative_array['not_sentiment_title_polarity'] : null;
        $sentiment_body_polarity = array_key_exists('sentiment_body_polarity', $associative_array) ? $associative_array['sentiment_body_polarity'] : null;
        $not_sentiment_body_polarity = array_key_exists('not_sentiment_body_polarity', $associative_array) ? $associative_array['not_sentiment_body_polarity'] : null;
        $media_images_count_min = array_key_exists('media_images_count_min', $associative_array) ? $associative_array['media_images_count_min'] : null;
        $media_images_count_max = array_key_exists('media_images_count_max', $associative_array) ? $associative_array['media_images_count_max'] : null;
        $media_images_width_min = array_key_exists('media_images_width_min', $associative_array) ? $associative_array['media_images_width_min'] : null;
        $media_images_width_max = array_key_exists('media_images_width_max', $associative_array) ? $associative_array['media_images_width_max'] : null;
        $media_images_height_min = array_key_exists('media_images_height_min', $associative_array) ? $associative_array['media_images_height_min'] : null;
        $media_images_height_max = array_key_exists('media_images_height_max', $associative_array) ? $associative_array['media_images_height_max'] : null;
        $media_images_content_length_min = array_key_exists('media_images_content_length_min', $associative_array) ? $associative_array['media_images_content_length_min'] : null;
        $media_images_content_length_max = array_key_exists('media_images_content_length_max', $associative_array) ? $associative_array['media_images_content_length_max'] : null;
        $media_images_format = array_key_exists('media_images_format', $associative_array) ? $associative_array['media_images_format'] : null;
        $not_media_images_format = array_key_exists('not_media_images_format', $associative_array) ? $associative_array['not_media_images_format'] : null;
        $media_videos_count_min = array_key_exists('media_videos_count_min', $associative_array) ? $associative_array['media_videos_count_min'] : null;
        $media_videos_count_max = array_key_exists('media_videos_count_max', $associative_array) ? $associative_array['media_videos_count_max'] : null;
        $author_id = array_key_exists('author_id', $associative_array) ? $associative_array['author_id'] : null;
        $not_author_id = array_key_exists('not_author_id', $associative_array) ? $associative_array['not_author_id'] : null;
        $author_name = array_key_exists('author_name', $associative_array) ? $associative_array['author_name'] : null;
        $not_author_name = array_key_exists('not_author_name', $associative_array) ? $associative_array['not_author_name'] : null;
        $source_id = array_key_exists('source_id', $associative_array) ? $associative_array['source_id'] : null;
        $not_source_id = array_key_exists('not_source_id', $associative_array) ? $associative_array['not_source_id'] : null;
        $source_name = array_key_exists('source_name', $associative_array) ? $associative_array['source_name'] : null;
        $not_source_name = array_key_exists('not_source_name', $associative_array) ? $associative_array['not_source_name'] : null;
        $source_domain = array_key_exists('source_domain', $associative_array) ? $associative_array['source_domain'] : null;
        $not_source_domain = array_key_exists('not_source_domain', $associative_array) ? $associative_array['not_source_domain'] : null;
        $source_locations_country = array_key_exists('source_locations_country', $associative_array) ? $associative_array['source_locations_country'] : null;
        $not_source_locations_country = array_key_exists('not_source_locations_country', $associative_array) ? $associative_array['not_source_locations_country'] : null;
        $source_locations_state = array_key_exists('source_locations_state', $associative_array) ? $associative_array['source_locations_state'] : null;
        $not_source_locations_state = array_key_exists('not_source_locations_state', $associative_array) ? $associative_array['not_source_locations_state'] : null;
        $source_locations_city = array_key_exists('source_locations_city', $associative_array) ? $associative_array['source_locations_city'] : null;
        $not_source_locations_city = array_key_exists('not_source_locations_city', $associative_array) ? $associative_array['not_source_locations_city'] : null;
        $source_scopes_country = array_key_exists('source_scopes_country', $associative_array) ? $associative_array['source_scopes_country'] : null;
        $not_source_scopes_country = array_key_exists('not_source_scopes_country', $associative_array) ? $associative_array['not_source_scopes_country'] : null;
        $source_scopes_state = array_key_exists('source_scopes_state', $associative_array) ? $associative_array['source_scopes_state'] : null;
        $not_source_scopes_state = array_key_exists('not_source_scopes_state', $associative_array) ? $associative_array['not_source_scopes_state'] : null;
        $source_scopes_city = array_key_exists('source_scopes_city', $associative_array) ? $associative_array['source_scopes_city'] : null;
        $not_source_scopes_city = array_key_exists('not_source_scopes_city', $associative_array) ? $associative_array['not_source_scopes_city'] : null;
        $source_scopes_level = array_key_exists('source_scopes_level', $associative_array) ? $associative_array['source_scopes_level'] : null;
        $not_source_scopes_level = array_key_exists('not_source_scopes_level', $associative_array) ? $associative_array['not_source_scopes_level'] : null;
        $source_links_in_count_min = array_key_exists('source_links_in_count_min', $associative_array) ? $associative_array['source_links_in_count_min'] : null;
        $source_links_in_count_max = array_key_exists('source_links_in_count_max', $associative_array) ? $associative_array['source_links_in_count_max'] : null;
        $source_rankings_alexa_rank_min = array_key_exists('source_rankings_alexa_rank_min', $associative_array) ? $associative_array['source_rankings_alexa_rank_min'] : null;
        $source_rankings_alexa_rank_max = array_key_exists('source_rankings_alexa_rank_max', $associative_array) ? $associative_array['source_rankings_alexa_rank_max'] : null;
        $source_rankings_alexa_country = array_key_exists('source_rankings_alexa_country', $associative_array) ? $associative_array['source_rankings_alexa_country'] : null;
        $social_shares_count_facebook_min = array_key_exists('social_shares_count_facebook_min', $associative_array) ? $associative_array['social_shares_count_facebook_min'] : null;
        $social_shares_count_facebook_max = array_key_exists('social_shares_count_facebook_max', $associative_array) ? $associative_array['social_shares_count_facebook_max'] : null;
        $social_shares_count_google_plus_min = array_key_exists('social_shares_count_google_plus_min', $associative_array) ? $associative_array['social_shares_count_google_plus_min'] : null;
        $social_shares_count_google_plus_max = array_key_exists('social_shares_count_google_plus_max', $associative_array) ? $associative_array['social_shares_count_google_plus_max'] : null;
        $social_shares_count_linkedin_min = array_key_exists('social_shares_count_linkedin_min', $associative_array) ? $associative_array['social_shares_count_linkedin_min'] : null;
        $social_shares_count_linkedin_max = array_key_exists('social_shares_count_linkedin_max', $associative_array) ? $associative_array['social_shares_count_linkedin_max'] : null;
        $social_shares_count_reddit_min = array_key_exists('social_shares_count_reddit_min', $associative_array) ? $associative_array['social_shares_count_reddit_min'] : null;
        $social_shares_count_reddit_max = array_key_exists('social_shares_count_reddit_max', $associative_array) ? $associative_array['social_shares_count_reddit_max'] : null;
        $interval_start = array_key_exists('interval_start', $associative_array) ? $associative_array['interval_start'] : null;
        $interval_end = array_key_exists('interval_end', $associative_array) ? $associative_array['interval_end'] : null;
        $interval_width = array_key_exists('interval_width', $associative_array) ? $associative_array['interval_width'] : null;
        $field = array_key_exists('field', $associative_array) ? $associative_array['field'] : 'social_shares_count';

        if ($media_images_count_min !== null && $media_images_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_count_max !== null && $media_images_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_width_min !== null && $media_images_width_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_width_max !== null && $media_images_width_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_height_min !== null && $media_images_height_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_height_max !== null && $media_images_height_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_content_length_min !== null && $media_images_content_length_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_images_content_length_max !== null && $media_images_content_length_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_videos_count_min !== null && $media_videos_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($media_videos_count_max !== null && $media_videos_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($source_links_in_count_min !== null && $source_links_in_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($source_links_in_count_max !== null && $source_links_in_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_min !== null && $source_rankings_alexa_rank_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_max !== null && $source_rankings_alexa_rank_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_min !== null && $social_shares_count_facebook_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_max !== null && $social_shares_count_facebook_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_min !== null && $social_shares_count_google_plus_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_max !== null && $social_shares_count_google_plus_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_min !== null && $social_shares_count_linkedin_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_max !== null && $social_shares_count_linkedin_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_min !== null && $social_shares_count_reddit_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_min" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_max !== null && $social_shares_count_reddit_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_max" when calling DefaultApi.listHistograms, must be bigger than 0.');
        }


        $resourcePath = '/histograms';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }


        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }


        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }


        // query params
        if ($translations_en_title !== null) {
            $queryParams['translations.en.title'] = $translations_en_title;
        }


        // query params
        if ($translations_en_body !== null) {
            $queryParams['translations.en.body'] = $translations_en_body;
        }


        // query params
        if ($translations_en_text !== null) {
            $queryParams['translations.en.text'] = $translations_en_text;
        }


        // query params
        if ($links_permalink !== null) {
            $queryParams['links.permalink[]'] = $links_permalink;
        }


        // query params
        if ($not_links_permalink !== null) {
            $queryParams['!links.permalink[]'] = $not_links_permalink;
        }


        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }


        // query params
        if ($not_language !== null) {
            $queryParams['!language[]'] = $not_language;
        }


        // query params
        if ($published_at_start !== null) {
            $queryParams['published_at.start'] = $published_at_start;
        }


        // query params
        if ($published_at_end !== null) {
            $queryParams['published_at.end'] = $published_at_end;
        }


        // query params
        if ($categories_taxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categories_taxonomy;
        }


        // query params
        if ($categories_confident !== null) {
            $queryParams['categories.confident'] = $categories_confident;
        }


        // query params
        if ($categories_id !== null) {
            $queryParams['categories.id[]'] = $categories_id;
        }


        // query params
        if ($not_categories_id !== null) {
            $queryParams['!categories.id[]'] = $not_categories_id;
        }


        // query params
        if ($categories_level !== null) {
            $queryParams['categories.level[]'] = $categories_level;
        }


        // query params
        if ($not_categories_level !== null) {
            $queryParams['!categories.level[]'] = $not_categories_level;
        }


        // query params
        if ($entities_title_text !== null) {
            $queryParams['entities.title.text[]'] = $entities_title_text;
        }


        // query params
        if ($not_entities_title_text !== null) {
            $queryParams['!entities.title.text[]'] = $not_entities_title_text;
        }


        // query params
        if ($entities_title_type !== null) {
            $queryParams['entities.title.type[]'] = $entities_title_type;
        }


        // query params
        if ($not_entities_title_type !== null) {
            $queryParams['!entities.title.type[]'] = $not_entities_title_type;
        }


        // query params
        if ($entities_title_links_dbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entities_title_links_dbpedia;
        }


        // query params
        if ($not_entities_title_links_dbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $not_entities_title_links_dbpedia;
        }


        // query params
        if ($entities_body_text !== null) {
            $queryParams['entities.body.text[]'] = $entities_body_text;
        }


        // query params
        if ($not_entities_body_text !== null) {
            $queryParams['!entities.body.text[]'] = $not_entities_body_text;
        }


        // query params
        if ($entities_body_type !== null) {
            $queryParams['entities.body.type[]'] = $entities_body_type;
        }


        // query params
        if ($not_entities_body_type !== null) {
            $queryParams['!entities.body.type[]'] = $not_entities_body_type;
        }


        // query params
        if ($entities_body_links_dbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entities_body_links_dbpedia;
        }


        // query params
        if ($not_entities_body_links_dbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $not_entities_body_links_dbpedia;
        }


        // query params
        if ($sentiment_title_polarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentiment_title_polarity;
        }


        // query params
        if ($not_sentiment_title_polarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $not_sentiment_title_polarity;
        }


        // query params
        if ($sentiment_body_polarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentiment_body_polarity;
        }


        // query params
        if ($not_sentiment_body_polarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $not_sentiment_body_polarity;
        }


        // query params
        if ($media_images_count_min !== null) {
            $queryParams['media.images.count.min'] = $media_images_count_min;
        }


        // query params
        if ($media_images_count_max !== null) {
            $queryParams['media.images.count.max'] = $media_images_count_max;
        }


        // query params
        if ($media_images_width_min !== null) {
            $queryParams['media.images.width.min'] = $media_images_width_min;
        }


        // query params
        if ($media_images_width_max !== null) {
            $queryParams['media.images.width.max'] = $media_images_width_max;
        }


        // query params
        if ($media_images_height_min !== null) {
            $queryParams['media.images.height.min'] = $media_images_height_min;
        }


        // query params
        if ($media_images_height_max !== null) {
            $queryParams['media.images.height.max'] = $media_images_height_max;
        }


        // query params
        if ($media_images_content_length_min !== null) {
            $queryParams['media.images.content_length.min'] = $media_images_content_length_min;
        }


        // query params
        if ($media_images_content_length_max !== null) {
            $queryParams['media.images.content_length.max'] = $media_images_content_length_max;
        }


        // query params
        if ($media_images_format !== null) {
            $queryParams['media.images.format[]'] = $media_images_format;
        }


        // query params
        if ($not_media_images_format !== null) {
            $queryParams['!media.images.format[]'] = $not_media_images_format;
        }


        // query params
        if ($media_videos_count_min !== null) {
            $queryParams['media.videos.count.min'] = $media_videos_count_min;
        }


        // query params
        if ($media_videos_count_max !== null) {
            $queryParams['media.videos.count.max'] = $media_videos_count_max;
        }


        // query params
        if ($author_id !== null) {
            $queryParams['author.id[]'] = $author_id;
        }


        // query params
        if ($not_author_id !== null) {
            $queryParams['!author.id[]'] = $not_author_id;
        }


        // query params
        if ($author_name !== null) {
            $queryParams['author.name'] = $author_name;
        }


        // query params
        if ($not_author_name !== null) {
            $queryParams['!author.name'] = $not_author_name;
        }


        // query params
        if ($source_id !== null) {
            $queryParams['source.id[]'] = $source_id;
        }


        // query params
        if ($not_source_id !== null) {
            $queryParams['!source.id[]'] = $not_source_id;
        }


        // query params
        if ($source_name !== null) {
            $queryParams['source.name[]'] = $source_name;
        }


        // query params
        if ($not_source_name !== null) {
            $queryParams['!source.name[]'] = $not_source_name;
        }


        // query params
        if ($source_domain !== null) {
            $queryParams['source.domain[]'] = $source_domain;
        }


        // query params
        if ($not_source_domain !== null) {
            $queryParams['!source.domain[]'] = $not_source_domain;
        }


        // query params
        if ($source_locations_country !== null) {
            $queryParams['source.locations.country[]'] = $source_locations_country;
        }


        // query params
        if ($not_source_locations_country !== null) {
            $queryParams['!source.locations.country[]'] = $not_source_locations_country;
        }


        // query params
        if ($source_locations_state !== null) {
            $queryParams['source.locations.state[]'] = $source_locations_state;
        }


        // query params
        if ($not_source_locations_state !== null) {
            $queryParams['!source.locations.state[]'] = $not_source_locations_state;
        }


        // query params
        if ($source_locations_city !== null) {
            $queryParams['source.locations.city[]'] = $source_locations_city;
        }


        // query params
        if ($not_source_locations_city !== null) {
            $queryParams['!source.locations.city[]'] = $not_source_locations_city;
        }


        // query params
        if ($source_scopes_country !== null) {
            $queryParams['source.scopes.country[]'] = $source_scopes_country;
        }


        // query params
        if ($not_source_scopes_country !== null) {
            $queryParams['!source.scopes.country[]'] = $not_source_scopes_country;
        }


        // query params
        if ($source_scopes_state !== null) {
            $queryParams['source.scopes.state[]'] = $source_scopes_state;
        }


        // query params
        if ($not_source_scopes_state !== null) {
            $queryParams['!source.scopes.state[]'] = $not_source_scopes_state;
        }


        // query params
        if ($source_scopes_city !== null) {
            $queryParams['source.scopes.city[]'] = $source_scopes_city;
        }


        // query params
        if ($not_source_scopes_city !== null) {
            $queryParams['!source.scopes.city[]'] = $not_source_scopes_city;
        }


        // query params
        if ($source_scopes_level !== null) {
            $queryParams['source.scopes.level[]'] = $source_scopes_level;
        }


        // query params
        if ($not_source_scopes_level !== null) {
            $queryParams['!source.scopes.level[]'] = $not_source_scopes_level;
        }


        // query params
        if ($source_links_in_count_min !== null) {
            $queryParams['source.links_in_count.min'] = $source_links_in_count_min;
        }


        // query params
        if ($source_links_in_count_max !== null) {
            $queryParams['source.links_in_count.max'] = $source_links_in_count_max;
        }


        // query params
        if ($source_rankings_alexa_rank_min !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $source_rankings_alexa_rank_min;
        }


        // query params
        if ($source_rankings_alexa_rank_max !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $source_rankings_alexa_rank_max;
        }


        // query params
        if ($source_rankings_alexa_country !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $source_rankings_alexa_country;
        }


        // query params
        if ($social_shares_count_facebook_min !== null) {
            $queryParams['social_shares_count.facebook.min'] = $social_shares_count_facebook_min;
        }


        // query params
        if ($social_shares_count_facebook_max !== null) {
            $queryParams['social_shares_count.facebook.max'] = $social_shares_count_facebook_max;
        }


        // query params
        if ($social_shares_count_google_plus_min !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $social_shares_count_google_plus_min;
        }


        // query params
        if ($social_shares_count_google_plus_max !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $social_shares_count_google_plus_max;
        }


        // query params
        if ($social_shares_count_linkedin_min !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $social_shares_count_linkedin_min;
        }


        // query params
        if ($social_shares_count_linkedin_max !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $social_shares_count_linkedin_max;
        }


        // query params
        if ($social_shares_count_reddit_min !== null) {
            $queryParams['social_shares_count.reddit.min'] = $social_shares_count_reddit_min;
        }


        // query params
        if ($social_shares_count_reddit_max !== null) {
            $queryParams['social_shares_count.reddit.max'] = $social_shares_count_reddit_max;
        }


        // query params
        if ($interval_start !== null) {
            $queryParams['interval.start'] = $interval_start;
        }


        // query params
        if ($interval_end !== null) {
            $queryParams['interval.end'] = $interval_end;
        }


        // query params
        if ($interval_width !== null) {
            $queryParams['interval.width'] = $interval_width;
        }


        // query params
        if ($field !== null) {
            $queryParams['field'] = $field;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listRelatedStories
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  string $boost_by This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\RelatedStories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listRelatedStories($associative_array)
    {
        list($response) = $this->listRelatedStoriesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listRelatedStoriesWithHttpInfo
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  string $boost_by This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\RelatedStories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listRelatedStoriesWithHttpInfo($associative_array)
    {
        $request = $this->listRelatedStoriesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\RelatedStories' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\RelatedStories', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\RelatedStories';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\RelatedStories',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listRelatedStoriesAsync
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  string $boost_by This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listRelatedStoriesAsync($associative_array)
    {
        return $this->listRelatedStoriesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listRelatedStoriesAsyncWithHttpInfo
     *
     * List related stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  string $boost_by This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listRelatedStoriesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\RelatedStories';
        $request = $this->listRelatedStoriesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listRelatedStories'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  int $story_id A story id (optional)
     * @param  string $story_url An article or webpage (optional)
     * @param  string $story_title Title of the article (optional)
     * @param  string $story_body Body of the article (optional)
     * @param  string $boost_by This parameter is used for boosting the result by the specified value. (optional)
     * @param  string $story_language This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional, default to 'auto')
     * @param  int $per_page This parameter is used for specifying number of items in each page. (optional, default to 3)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listRelatedStoriesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translations_en_title = array_key_exists('translations_en_title', $associative_array) ? $associative_array['translations_en_title'] : null;
        $translations_en_body = array_key_exists('translations_en_body', $associative_array) ? $associative_array['translations_en_body'] : null;
        $translations_en_text = array_key_exists('translations_en_text', $associative_array) ? $associative_array['translations_en_text'] : null;
        $links_permalink = array_key_exists('links_permalink', $associative_array) ? $associative_array['links_permalink'] : null;
        $not_links_permalink = array_key_exists('not_links_permalink', $associative_array) ? $associative_array['not_links_permalink'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $not_language = array_key_exists('not_language', $associative_array) ? $associative_array['not_language'] : null;
        $published_at_start = array_key_exists('published_at_start', $associative_array) ? $associative_array['published_at_start'] : null;
        $published_at_end = array_key_exists('published_at_end', $associative_array) ? $associative_array['published_at_end'] : null;
        $categories_taxonomy = array_key_exists('categories_taxonomy', $associative_array) ? $associative_array['categories_taxonomy'] : null;
        $categories_confident = array_key_exists('categories_confident', $associative_array) ? $associative_array['categories_confident'] : true;
        $categories_id = array_key_exists('categories_id', $associative_array) ? $associative_array['categories_id'] : null;
        $not_categories_id = array_key_exists('not_categories_id', $associative_array) ? $associative_array['not_categories_id'] : null;
        $categories_level = array_key_exists('categories_level', $associative_array) ? $associative_array['categories_level'] : null;
        $not_categories_level = array_key_exists('not_categories_level', $associative_array) ? $associative_array['not_categories_level'] : null;
        $entities_title_text = array_key_exists('entities_title_text', $associative_array) ? $associative_array['entities_title_text'] : null;
        $not_entities_title_text = array_key_exists('not_entities_title_text', $associative_array) ? $associative_array['not_entities_title_text'] : null;
        $entities_title_type = array_key_exists('entities_title_type', $associative_array) ? $associative_array['entities_title_type'] : null;
        $not_entities_title_type = array_key_exists('not_entities_title_type', $associative_array) ? $associative_array['not_entities_title_type'] : null;
        $entities_title_links_dbpedia = array_key_exists('entities_title_links_dbpedia', $associative_array) ? $associative_array['entities_title_links_dbpedia'] : null;
        $not_entities_title_links_dbpedia = array_key_exists('not_entities_title_links_dbpedia', $associative_array) ? $associative_array['not_entities_title_links_dbpedia'] : null;
        $entities_body_text = array_key_exists('entities_body_text', $associative_array) ? $associative_array['entities_body_text'] : null;
        $not_entities_body_text = array_key_exists('not_entities_body_text', $associative_array) ? $associative_array['not_entities_body_text'] : null;
        $entities_body_type = array_key_exists('entities_body_type', $associative_array) ? $associative_array['entities_body_type'] : null;
        $not_entities_body_type = array_key_exists('not_entities_body_type', $associative_array) ? $associative_array['not_entities_body_type'] : null;
        $entities_body_links_dbpedia = array_key_exists('entities_body_links_dbpedia', $associative_array) ? $associative_array['entities_body_links_dbpedia'] : null;
        $not_entities_body_links_dbpedia = array_key_exists('not_entities_body_links_dbpedia', $associative_array) ? $associative_array['not_entities_body_links_dbpedia'] : null;
        $sentiment_title_polarity = array_key_exists('sentiment_title_polarity', $associative_array) ? $associative_array['sentiment_title_polarity'] : null;
        $not_sentiment_title_polarity = array_key_exists('not_sentiment_title_polarity', $associative_array) ? $associative_array['not_sentiment_title_polarity'] : null;
        $sentiment_body_polarity = array_key_exists('sentiment_body_polarity', $associative_array) ? $associative_array['sentiment_body_polarity'] : null;
        $not_sentiment_body_polarity = array_key_exists('not_sentiment_body_polarity', $associative_array) ? $associative_array['not_sentiment_body_polarity'] : null;
        $media_images_count_min = array_key_exists('media_images_count_min', $associative_array) ? $associative_array['media_images_count_min'] : null;
        $media_images_count_max = array_key_exists('media_images_count_max', $associative_array) ? $associative_array['media_images_count_max'] : null;
        $media_images_width_min = array_key_exists('media_images_width_min', $associative_array) ? $associative_array['media_images_width_min'] : null;
        $media_images_width_max = array_key_exists('media_images_width_max', $associative_array) ? $associative_array['media_images_width_max'] : null;
        $media_images_height_min = array_key_exists('media_images_height_min', $associative_array) ? $associative_array['media_images_height_min'] : null;
        $media_images_height_max = array_key_exists('media_images_height_max', $associative_array) ? $associative_array['media_images_height_max'] : null;
        $media_images_content_length_min = array_key_exists('media_images_content_length_min', $associative_array) ? $associative_array['media_images_content_length_min'] : null;
        $media_images_content_length_max = array_key_exists('media_images_content_length_max', $associative_array) ? $associative_array['media_images_content_length_max'] : null;
        $media_images_format = array_key_exists('media_images_format', $associative_array) ? $associative_array['media_images_format'] : null;
        $not_media_images_format = array_key_exists('not_media_images_format', $associative_array) ? $associative_array['not_media_images_format'] : null;
        $media_videos_count_min = array_key_exists('media_videos_count_min', $associative_array) ? $associative_array['media_videos_count_min'] : null;
        $media_videos_count_max = array_key_exists('media_videos_count_max', $associative_array) ? $associative_array['media_videos_count_max'] : null;
        $author_id = array_key_exists('author_id', $associative_array) ? $associative_array['author_id'] : null;
        $not_author_id = array_key_exists('not_author_id', $associative_array) ? $associative_array['not_author_id'] : null;
        $author_name = array_key_exists('author_name', $associative_array) ? $associative_array['author_name'] : null;
        $not_author_name = array_key_exists('not_author_name', $associative_array) ? $associative_array['not_author_name'] : null;
        $source_id = array_key_exists('source_id', $associative_array) ? $associative_array['source_id'] : null;
        $not_source_id = array_key_exists('not_source_id', $associative_array) ? $associative_array['not_source_id'] : null;
        $source_name = array_key_exists('source_name', $associative_array) ? $associative_array['source_name'] : null;
        $not_source_name = array_key_exists('not_source_name', $associative_array) ? $associative_array['not_source_name'] : null;
        $source_domain = array_key_exists('source_domain', $associative_array) ? $associative_array['source_domain'] : null;
        $not_source_domain = array_key_exists('not_source_domain', $associative_array) ? $associative_array['not_source_domain'] : null;
        $source_locations_country = array_key_exists('source_locations_country', $associative_array) ? $associative_array['source_locations_country'] : null;
        $not_source_locations_country = array_key_exists('not_source_locations_country', $associative_array) ? $associative_array['not_source_locations_country'] : null;
        $source_locations_state = array_key_exists('source_locations_state', $associative_array) ? $associative_array['source_locations_state'] : null;
        $not_source_locations_state = array_key_exists('not_source_locations_state', $associative_array) ? $associative_array['not_source_locations_state'] : null;
        $source_locations_city = array_key_exists('source_locations_city', $associative_array) ? $associative_array['source_locations_city'] : null;
        $not_source_locations_city = array_key_exists('not_source_locations_city', $associative_array) ? $associative_array['not_source_locations_city'] : null;
        $source_scopes_country = array_key_exists('source_scopes_country', $associative_array) ? $associative_array['source_scopes_country'] : null;
        $not_source_scopes_country = array_key_exists('not_source_scopes_country', $associative_array) ? $associative_array['not_source_scopes_country'] : null;
        $source_scopes_state = array_key_exists('source_scopes_state', $associative_array) ? $associative_array['source_scopes_state'] : null;
        $not_source_scopes_state = array_key_exists('not_source_scopes_state', $associative_array) ? $associative_array['not_source_scopes_state'] : null;
        $source_scopes_city = array_key_exists('source_scopes_city', $associative_array) ? $associative_array['source_scopes_city'] : null;
        $not_source_scopes_city = array_key_exists('not_source_scopes_city', $associative_array) ? $associative_array['not_source_scopes_city'] : null;
        $source_scopes_level = array_key_exists('source_scopes_level', $associative_array) ? $associative_array['source_scopes_level'] : null;
        $not_source_scopes_level = array_key_exists('not_source_scopes_level', $associative_array) ? $associative_array['not_source_scopes_level'] : null;
        $source_links_in_count_min = array_key_exists('source_links_in_count_min', $associative_array) ? $associative_array['source_links_in_count_min'] : null;
        $source_links_in_count_max = array_key_exists('source_links_in_count_max', $associative_array) ? $associative_array['source_links_in_count_max'] : null;
        $source_rankings_alexa_rank_min = array_key_exists('source_rankings_alexa_rank_min', $associative_array) ? $associative_array['source_rankings_alexa_rank_min'] : null;
        $source_rankings_alexa_rank_max = array_key_exists('source_rankings_alexa_rank_max', $associative_array) ? $associative_array['source_rankings_alexa_rank_max'] : null;
        $source_rankings_alexa_country = array_key_exists('source_rankings_alexa_country', $associative_array) ? $associative_array['source_rankings_alexa_country'] : null;
        $social_shares_count_facebook_min = array_key_exists('social_shares_count_facebook_min', $associative_array) ? $associative_array['social_shares_count_facebook_min'] : null;
        $social_shares_count_facebook_max = array_key_exists('social_shares_count_facebook_max', $associative_array) ? $associative_array['social_shares_count_facebook_max'] : null;
        $social_shares_count_google_plus_min = array_key_exists('social_shares_count_google_plus_min', $associative_array) ? $associative_array['social_shares_count_google_plus_min'] : null;
        $social_shares_count_google_plus_max = array_key_exists('social_shares_count_google_plus_max', $associative_array) ? $associative_array['social_shares_count_google_plus_max'] : null;
        $social_shares_count_linkedin_min = array_key_exists('social_shares_count_linkedin_min', $associative_array) ? $associative_array['social_shares_count_linkedin_min'] : null;
        $social_shares_count_linkedin_max = array_key_exists('social_shares_count_linkedin_max', $associative_array) ? $associative_array['social_shares_count_linkedin_max'] : null;
        $social_shares_count_reddit_min = array_key_exists('social_shares_count_reddit_min', $associative_array) ? $associative_array['social_shares_count_reddit_min'] : null;
        $social_shares_count_reddit_max = array_key_exists('social_shares_count_reddit_max', $associative_array) ? $associative_array['social_shares_count_reddit_max'] : null;
        $clusters = array_key_exists('clusters', $associative_array) ? $associative_array['clusters'] : null;
        $return = array_key_exists('return', $associative_array) ? $associative_array['return'] : null;
        $story_id = array_key_exists('story_id', $associative_array) ? $associative_array['story_id'] : null;
        $story_url = array_key_exists('story_url', $associative_array) ? $associative_array['story_url'] : null;
        $story_title = array_key_exists('story_title', $associative_array) ? $associative_array['story_title'] : null;
        $story_body = array_key_exists('story_body', $associative_array) ? $associative_array['story_body'] : null;
        $boost_by = array_key_exists('boost_by', $associative_array) ? $associative_array['boost_by'] : null;
        $story_language = array_key_exists('story_language', $associative_array) ? $associative_array['story_language'] : 'auto';
        $per_page = array_key_exists('per_page', $associative_array) ? $associative_array['per_page'] : 3;

        if ($media_images_count_min !== null && $media_images_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_count_max !== null && $media_images_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_width_min !== null && $media_images_width_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_width_max !== null && $media_images_width_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_height_min !== null && $media_images_height_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_height_max !== null && $media_images_height_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_content_length_min !== null && $media_images_content_length_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_images_content_length_max !== null && $media_images_content_length_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_videos_count_min !== null && $media_videos_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($media_videos_count_max !== null && $media_videos_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($source_links_in_count_min !== null && $source_links_in_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($source_links_in_count_max !== null && $source_links_in_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_min !== null && $source_rankings_alexa_rank_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_max !== null && $source_rankings_alexa_rank_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_min !== null && $social_shares_count_facebook_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_max !== null && $social_shares_count_facebook_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_min !== null && $social_shares_count_google_plus_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_max !== null && $social_shares_count_google_plus_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_min !== null && $social_shares_count_linkedin_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_max !== null && $social_shares_count_linkedin_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_min !== null && $social_shares_count_reddit_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_min" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_max !== null && $social_shares_count_reddit_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_max" when calling DefaultApi.listRelatedStories, must be bigger than 0.');
        }

        if ($per_page !== null && $per_page > 100) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listRelatedStories, must be smaller than or equal to 100.');
        }
        if ($per_page !== null && $per_page < 1) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listRelatedStories, must be bigger than or equal to 1.');
        }


        $resourcePath = '/related_stories';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }


        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }


        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }


        // query params
        if ($translations_en_title !== null) {
            $queryParams['translations.en.title'] = $translations_en_title;
        }


        // query params
        if ($translations_en_body !== null) {
            $queryParams['translations.en.body'] = $translations_en_body;
        }


        // query params
        if ($translations_en_text !== null) {
            $queryParams['translations.en.text'] = $translations_en_text;
        }


        // query params
        if ($links_permalink !== null) {
            $queryParams['links.permalink[]'] = $links_permalink;
        }


        // query params
        if ($not_links_permalink !== null) {
            $queryParams['!links.permalink[]'] = $not_links_permalink;
        }


        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }


        // query params
        if ($not_language !== null) {
            $queryParams['!language[]'] = $not_language;
        }


        // query params
        if ($published_at_start !== null) {
            $queryParams['published_at.start'] = $published_at_start;
        }


        // query params
        if ($published_at_end !== null) {
            $queryParams['published_at.end'] = $published_at_end;
        }


        // query params
        if ($categories_taxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categories_taxonomy;
        }


        // query params
        if ($categories_confident !== null) {
            $queryParams['categories.confident'] = $categories_confident;
        }


        // query params
        if ($categories_id !== null) {
            $queryParams['categories.id[]'] = $categories_id;
        }


        // query params
        if ($not_categories_id !== null) {
            $queryParams['!categories.id[]'] = $not_categories_id;
        }


        // query params
        if ($categories_level !== null) {
            $queryParams['categories.level[]'] = $categories_level;
        }


        // query params
        if ($not_categories_level !== null) {
            $queryParams['!categories.level[]'] = $not_categories_level;
        }


        // query params
        if ($entities_title_text !== null) {
            $queryParams['entities.title.text[]'] = $entities_title_text;
        }


        // query params
        if ($not_entities_title_text !== null) {
            $queryParams['!entities.title.text[]'] = $not_entities_title_text;
        }


        // query params
        if ($entities_title_type !== null) {
            $queryParams['entities.title.type[]'] = $entities_title_type;
        }


        // query params
        if ($not_entities_title_type !== null) {
            $queryParams['!entities.title.type[]'] = $not_entities_title_type;
        }


        // query params
        if ($entities_title_links_dbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entities_title_links_dbpedia;
        }


        // query params
        if ($not_entities_title_links_dbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $not_entities_title_links_dbpedia;
        }


        // query params
        if ($entities_body_text !== null) {
            $queryParams['entities.body.text[]'] = $entities_body_text;
        }


        // query params
        if ($not_entities_body_text !== null) {
            $queryParams['!entities.body.text[]'] = $not_entities_body_text;
        }


        // query params
        if ($entities_body_type !== null) {
            $queryParams['entities.body.type[]'] = $entities_body_type;
        }


        // query params
        if ($not_entities_body_type !== null) {
            $queryParams['!entities.body.type[]'] = $not_entities_body_type;
        }


        // query params
        if ($entities_body_links_dbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entities_body_links_dbpedia;
        }


        // query params
        if ($not_entities_body_links_dbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $not_entities_body_links_dbpedia;
        }


        // query params
        if ($sentiment_title_polarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentiment_title_polarity;
        }


        // query params
        if ($not_sentiment_title_polarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $not_sentiment_title_polarity;
        }


        // query params
        if ($sentiment_body_polarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentiment_body_polarity;
        }


        // query params
        if ($not_sentiment_body_polarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $not_sentiment_body_polarity;
        }


        // query params
        if ($media_images_count_min !== null) {
            $queryParams['media.images.count.min'] = $media_images_count_min;
        }


        // query params
        if ($media_images_count_max !== null) {
            $queryParams['media.images.count.max'] = $media_images_count_max;
        }


        // query params
        if ($media_images_width_min !== null) {
            $queryParams['media.images.width.min'] = $media_images_width_min;
        }


        // query params
        if ($media_images_width_max !== null) {
            $queryParams['media.images.width.max'] = $media_images_width_max;
        }


        // query params
        if ($media_images_height_min !== null) {
            $queryParams['media.images.height.min'] = $media_images_height_min;
        }


        // query params
        if ($media_images_height_max !== null) {
            $queryParams['media.images.height.max'] = $media_images_height_max;
        }


        // query params
        if ($media_images_content_length_min !== null) {
            $queryParams['media.images.content_length.min'] = $media_images_content_length_min;
        }


        // query params
        if ($media_images_content_length_max !== null) {
            $queryParams['media.images.content_length.max'] = $media_images_content_length_max;
        }


        // query params
        if ($media_images_format !== null) {
            $queryParams['media.images.format[]'] = $media_images_format;
        }


        // query params
        if ($not_media_images_format !== null) {
            $queryParams['!media.images.format[]'] = $not_media_images_format;
        }


        // query params
        if ($media_videos_count_min !== null) {
            $queryParams['media.videos.count.min'] = $media_videos_count_min;
        }


        // query params
        if ($media_videos_count_max !== null) {
            $queryParams['media.videos.count.max'] = $media_videos_count_max;
        }


        // query params
        if ($author_id !== null) {
            $queryParams['author.id[]'] = $author_id;
        }


        // query params
        if ($not_author_id !== null) {
            $queryParams['!author.id[]'] = $not_author_id;
        }


        // query params
        if ($author_name !== null) {
            $queryParams['author.name'] = $author_name;
        }


        // query params
        if ($not_author_name !== null) {
            $queryParams['!author.name'] = $not_author_name;
        }


        // query params
        if ($source_id !== null) {
            $queryParams['source.id[]'] = $source_id;
        }


        // query params
        if ($not_source_id !== null) {
            $queryParams['!source.id[]'] = $not_source_id;
        }


        // query params
        if ($source_name !== null) {
            $queryParams['source.name[]'] = $source_name;
        }


        // query params
        if ($not_source_name !== null) {
            $queryParams['!source.name[]'] = $not_source_name;
        }


        // query params
        if ($source_domain !== null) {
            $queryParams['source.domain[]'] = $source_domain;
        }


        // query params
        if ($not_source_domain !== null) {
            $queryParams['!source.domain[]'] = $not_source_domain;
        }


        // query params
        if ($source_locations_country !== null) {
            $queryParams['source.locations.country[]'] = $source_locations_country;
        }


        // query params
        if ($not_source_locations_country !== null) {
            $queryParams['!source.locations.country[]'] = $not_source_locations_country;
        }


        // query params
        if ($source_locations_state !== null) {
            $queryParams['source.locations.state[]'] = $source_locations_state;
        }


        // query params
        if ($not_source_locations_state !== null) {
            $queryParams['!source.locations.state[]'] = $not_source_locations_state;
        }


        // query params
        if ($source_locations_city !== null) {
            $queryParams['source.locations.city[]'] = $source_locations_city;
        }


        // query params
        if ($not_source_locations_city !== null) {
            $queryParams['!source.locations.city[]'] = $not_source_locations_city;
        }


        // query params
        if ($source_scopes_country !== null) {
            $queryParams['source.scopes.country[]'] = $source_scopes_country;
        }


        // query params
        if ($not_source_scopes_country !== null) {
            $queryParams['!source.scopes.country[]'] = $not_source_scopes_country;
        }


        // query params
        if ($source_scopes_state !== null) {
            $queryParams['source.scopes.state[]'] = $source_scopes_state;
        }


        // query params
        if ($not_source_scopes_state !== null) {
            $queryParams['!source.scopes.state[]'] = $not_source_scopes_state;
        }


        // query params
        if ($source_scopes_city !== null) {
            $queryParams['source.scopes.city[]'] = $source_scopes_city;
        }


        // query params
        if ($not_source_scopes_city !== null) {
            $queryParams['!source.scopes.city[]'] = $not_source_scopes_city;
        }


        // query params
        if ($source_scopes_level !== null) {
            $queryParams['source.scopes.level[]'] = $source_scopes_level;
        }


        // query params
        if ($not_source_scopes_level !== null) {
            $queryParams['!source.scopes.level[]'] = $not_source_scopes_level;
        }


        // query params
        if ($source_links_in_count_min !== null) {
            $queryParams['source.links_in_count.min'] = $source_links_in_count_min;
        }


        // query params
        if ($source_links_in_count_max !== null) {
            $queryParams['source.links_in_count.max'] = $source_links_in_count_max;
        }


        // query params
        if ($source_rankings_alexa_rank_min !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $source_rankings_alexa_rank_min;
        }


        // query params
        if ($source_rankings_alexa_rank_max !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $source_rankings_alexa_rank_max;
        }


        // query params
        if ($source_rankings_alexa_country !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $source_rankings_alexa_country;
        }


        // query params
        if ($social_shares_count_facebook_min !== null) {
            $queryParams['social_shares_count.facebook.min'] = $social_shares_count_facebook_min;
        }


        // query params
        if ($social_shares_count_facebook_max !== null) {
            $queryParams['social_shares_count.facebook.max'] = $social_shares_count_facebook_max;
        }


        // query params
        if ($social_shares_count_google_plus_min !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $social_shares_count_google_plus_min;
        }


        // query params
        if ($social_shares_count_google_plus_max !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $social_shares_count_google_plus_max;
        }


        // query params
        if ($social_shares_count_linkedin_min !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $social_shares_count_linkedin_min;
        }


        // query params
        if ($social_shares_count_linkedin_max !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $social_shares_count_linkedin_max;
        }


        // query params
        if ($social_shares_count_reddit_min !== null) {
            $queryParams['social_shares_count.reddit.min'] = $social_shares_count_reddit_min;
        }


        // query params
        if ($social_shares_count_reddit_max !== null) {
            $queryParams['social_shares_count.reddit.max'] = $social_shares_count_reddit_max;
        }


        // query params
        if ($clusters !== null) {
            $queryParams['clusters[]'] = $clusters;
        }


        // query params
        if ($return !== null) {
            $queryParams['return[]'] = $return;
        }


        // query params
        if ($story_id !== null) {
            $queryParams['story_id'] = $story_id;
        }


        // query params
        if ($story_url !== null) {
            $queryParams['story_url'] = $story_url;
        }


        // query params
        if ($story_title !== null) {
            $queryParams['story_title'] = $story_title;
        }


        // query params
        if ($story_body !== null) {
            $queryParams['story_body'] = $story_body;
        }


        // query params
        if ($boost_by !== null) {
            $queryParams['boost_by'] = $boost_by;
        }


        // query params
        if ($story_language !== null) {
            $queryParams['story_language'] = $story_language;
        }


        // query params
        if ($per_page !== null) {
            $queryParams['per_page'] = $per_page;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listStories
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sort_by This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sort_direction This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $per_page This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Stories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listStories($associative_array)
    {
        list($response) = $this->listStoriesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listStoriesWithHttpInfo
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sort_by This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sort_direction This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $per_page This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Stories|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listStoriesWithHttpInfo($associative_array)
    {
        $request = $this->listStoriesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Stories' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Stories', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Stories';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Stories',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listStoriesAsync
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sort_by This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sort_direction This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $per_page This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listStoriesAsync($associative_array)
    {
        return $this->listStoriesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listStoriesAsyncWithHttpInfo
     *
     * List Stories
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sort_by This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sort_direction This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $per_page This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listStoriesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Stories';
        $request = $this->listStoriesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listStories'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string[] $clusters This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering). (optional)
     * @param  string[] $return This parameter is used for specifying return fields. (optional)
     * @param  string $sort_by This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'published_at')
     * @param  string $sort_direction This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results). (optional, default to 'desc')
     * @param  string $cursor This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results). (optional, default to '*')
     * @param  int $per_page This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results) (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listStoriesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translations_en_title = array_key_exists('translations_en_title', $associative_array) ? $associative_array['translations_en_title'] : null;
        $translations_en_body = array_key_exists('translations_en_body', $associative_array) ? $associative_array['translations_en_body'] : null;
        $translations_en_text = array_key_exists('translations_en_text', $associative_array) ? $associative_array['translations_en_text'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $not_language = array_key_exists('not_language', $associative_array) ? $associative_array['not_language'] : null;
        $links_permalink = array_key_exists('links_permalink', $associative_array) ? $associative_array['links_permalink'] : null;
        $not_links_permalink = array_key_exists('not_links_permalink', $associative_array) ? $associative_array['not_links_permalink'] : null;
        $published_at_start = array_key_exists('published_at_start', $associative_array) ? $associative_array['published_at_start'] : null;
        $published_at_end = array_key_exists('published_at_end', $associative_array) ? $associative_array['published_at_end'] : null;
        $categories_taxonomy = array_key_exists('categories_taxonomy', $associative_array) ? $associative_array['categories_taxonomy'] : null;
        $categories_confident = array_key_exists('categories_confident', $associative_array) ? $associative_array['categories_confident'] : true;
        $categories_id = array_key_exists('categories_id', $associative_array) ? $associative_array['categories_id'] : null;
        $not_categories_id = array_key_exists('not_categories_id', $associative_array) ? $associative_array['not_categories_id'] : null;
        $categories_level = array_key_exists('categories_level', $associative_array) ? $associative_array['categories_level'] : null;
        $not_categories_level = array_key_exists('not_categories_level', $associative_array) ? $associative_array['not_categories_level'] : null;
        $entities_title_text = array_key_exists('entities_title_text', $associative_array) ? $associative_array['entities_title_text'] : null;
        $not_entities_title_text = array_key_exists('not_entities_title_text', $associative_array) ? $associative_array['not_entities_title_text'] : null;
        $entities_title_type = array_key_exists('entities_title_type', $associative_array) ? $associative_array['entities_title_type'] : null;
        $not_entities_title_type = array_key_exists('not_entities_title_type', $associative_array) ? $associative_array['not_entities_title_type'] : null;
        $entities_title_links_dbpedia = array_key_exists('entities_title_links_dbpedia', $associative_array) ? $associative_array['entities_title_links_dbpedia'] : null;
        $not_entities_title_links_dbpedia = array_key_exists('not_entities_title_links_dbpedia', $associative_array) ? $associative_array['not_entities_title_links_dbpedia'] : null;
        $entities_body_text = array_key_exists('entities_body_text', $associative_array) ? $associative_array['entities_body_text'] : null;
        $not_entities_body_text = array_key_exists('not_entities_body_text', $associative_array) ? $associative_array['not_entities_body_text'] : null;
        $entities_body_type = array_key_exists('entities_body_type', $associative_array) ? $associative_array['entities_body_type'] : null;
        $not_entities_body_type = array_key_exists('not_entities_body_type', $associative_array) ? $associative_array['not_entities_body_type'] : null;
        $entities_body_links_dbpedia = array_key_exists('entities_body_links_dbpedia', $associative_array) ? $associative_array['entities_body_links_dbpedia'] : null;
        $not_entities_body_links_dbpedia = array_key_exists('not_entities_body_links_dbpedia', $associative_array) ? $associative_array['not_entities_body_links_dbpedia'] : null;
        $sentiment_title_polarity = array_key_exists('sentiment_title_polarity', $associative_array) ? $associative_array['sentiment_title_polarity'] : null;
        $not_sentiment_title_polarity = array_key_exists('not_sentiment_title_polarity', $associative_array) ? $associative_array['not_sentiment_title_polarity'] : null;
        $sentiment_body_polarity = array_key_exists('sentiment_body_polarity', $associative_array) ? $associative_array['sentiment_body_polarity'] : null;
        $not_sentiment_body_polarity = array_key_exists('not_sentiment_body_polarity', $associative_array) ? $associative_array['not_sentiment_body_polarity'] : null;
        $media_images_count_min = array_key_exists('media_images_count_min', $associative_array) ? $associative_array['media_images_count_min'] : null;
        $media_images_count_max = array_key_exists('media_images_count_max', $associative_array) ? $associative_array['media_images_count_max'] : null;
        $media_images_width_min = array_key_exists('media_images_width_min', $associative_array) ? $associative_array['media_images_width_min'] : null;
        $media_images_width_max = array_key_exists('media_images_width_max', $associative_array) ? $associative_array['media_images_width_max'] : null;
        $media_images_height_min = array_key_exists('media_images_height_min', $associative_array) ? $associative_array['media_images_height_min'] : null;
        $media_images_height_max = array_key_exists('media_images_height_max', $associative_array) ? $associative_array['media_images_height_max'] : null;
        $media_images_content_length_min = array_key_exists('media_images_content_length_min', $associative_array) ? $associative_array['media_images_content_length_min'] : null;
        $media_images_content_length_max = array_key_exists('media_images_content_length_max', $associative_array) ? $associative_array['media_images_content_length_max'] : null;
        $media_images_format = array_key_exists('media_images_format', $associative_array) ? $associative_array['media_images_format'] : null;
        $not_media_images_format = array_key_exists('not_media_images_format', $associative_array) ? $associative_array['not_media_images_format'] : null;
        $media_videos_count_min = array_key_exists('media_videos_count_min', $associative_array) ? $associative_array['media_videos_count_min'] : null;
        $media_videos_count_max = array_key_exists('media_videos_count_max', $associative_array) ? $associative_array['media_videos_count_max'] : null;
        $author_id = array_key_exists('author_id', $associative_array) ? $associative_array['author_id'] : null;
        $not_author_id = array_key_exists('not_author_id', $associative_array) ? $associative_array['not_author_id'] : null;
        $author_name = array_key_exists('author_name', $associative_array) ? $associative_array['author_name'] : null;
        $not_author_name = array_key_exists('not_author_name', $associative_array) ? $associative_array['not_author_name'] : null;
        $source_id = array_key_exists('source_id', $associative_array) ? $associative_array['source_id'] : null;
        $not_source_id = array_key_exists('not_source_id', $associative_array) ? $associative_array['not_source_id'] : null;
        $source_name = array_key_exists('source_name', $associative_array) ? $associative_array['source_name'] : null;
        $not_source_name = array_key_exists('not_source_name', $associative_array) ? $associative_array['not_source_name'] : null;
        $source_domain = array_key_exists('source_domain', $associative_array) ? $associative_array['source_domain'] : null;
        $not_source_domain = array_key_exists('not_source_domain', $associative_array) ? $associative_array['not_source_domain'] : null;
        $source_locations_country = array_key_exists('source_locations_country', $associative_array) ? $associative_array['source_locations_country'] : null;
        $not_source_locations_country = array_key_exists('not_source_locations_country', $associative_array) ? $associative_array['not_source_locations_country'] : null;
        $source_locations_state = array_key_exists('source_locations_state', $associative_array) ? $associative_array['source_locations_state'] : null;
        $not_source_locations_state = array_key_exists('not_source_locations_state', $associative_array) ? $associative_array['not_source_locations_state'] : null;
        $source_locations_city = array_key_exists('source_locations_city', $associative_array) ? $associative_array['source_locations_city'] : null;
        $not_source_locations_city = array_key_exists('not_source_locations_city', $associative_array) ? $associative_array['not_source_locations_city'] : null;
        $source_scopes_country = array_key_exists('source_scopes_country', $associative_array) ? $associative_array['source_scopes_country'] : null;
        $not_source_scopes_country = array_key_exists('not_source_scopes_country', $associative_array) ? $associative_array['not_source_scopes_country'] : null;
        $source_scopes_state = array_key_exists('source_scopes_state', $associative_array) ? $associative_array['source_scopes_state'] : null;
        $not_source_scopes_state = array_key_exists('not_source_scopes_state', $associative_array) ? $associative_array['not_source_scopes_state'] : null;
        $source_scopes_city = array_key_exists('source_scopes_city', $associative_array) ? $associative_array['source_scopes_city'] : null;
        $not_source_scopes_city = array_key_exists('not_source_scopes_city', $associative_array) ? $associative_array['not_source_scopes_city'] : null;
        $source_scopes_level = array_key_exists('source_scopes_level', $associative_array) ? $associative_array['source_scopes_level'] : null;
        $not_source_scopes_level = array_key_exists('not_source_scopes_level', $associative_array) ? $associative_array['not_source_scopes_level'] : null;
        $source_links_in_count_min = array_key_exists('source_links_in_count_min', $associative_array) ? $associative_array['source_links_in_count_min'] : null;
        $source_links_in_count_max = array_key_exists('source_links_in_count_max', $associative_array) ? $associative_array['source_links_in_count_max'] : null;
        $source_rankings_alexa_rank_min = array_key_exists('source_rankings_alexa_rank_min', $associative_array) ? $associative_array['source_rankings_alexa_rank_min'] : null;
        $source_rankings_alexa_rank_max = array_key_exists('source_rankings_alexa_rank_max', $associative_array) ? $associative_array['source_rankings_alexa_rank_max'] : null;
        $source_rankings_alexa_country = array_key_exists('source_rankings_alexa_country', $associative_array) ? $associative_array['source_rankings_alexa_country'] : null;
        $social_shares_count_facebook_min = array_key_exists('social_shares_count_facebook_min', $associative_array) ? $associative_array['social_shares_count_facebook_min'] : null;
        $social_shares_count_facebook_max = array_key_exists('social_shares_count_facebook_max', $associative_array) ? $associative_array['social_shares_count_facebook_max'] : null;
        $social_shares_count_google_plus_min = array_key_exists('social_shares_count_google_plus_min', $associative_array) ? $associative_array['social_shares_count_google_plus_min'] : null;
        $social_shares_count_google_plus_max = array_key_exists('social_shares_count_google_plus_max', $associative_array) ? $associative_array['social_shares_count_google_plus_max'] : null;
        $social_shares_count_linkedin_min = array_key_exists('social_shares_count_linkedin_min', $associative_array) ? $associative_array['social_shares_count_linkedin_min'] : null;
        $social_shares_count_linkedin_max = array_key_exists('social_shares_count_linkedin_max', $associative_array) ? $associative_array['social_shares_count_linkedin_max'] : null;
        $social_shares_count_reddit_min = array_key_exists('social_shares_count_reddit_min', $associative_array) ? $associative_array['social_shares_count_reddit_min'] : null;
        $social_shares_count_reddit_max = array_key_exists('social_shares_count_reddit_max', $associative_array) ? $associative_array['social_shares_count_reddit_max'] : null;
        $clusters = array_key_exists('clusters', $associative_array) ? $associative_array['clusters'] : null;
        $return = array_key_exists('return', $associative_array) ? $associative_array['return'] : null;
        $sort_by = array_key_exists('sort_by', $associative_array) ? $associative_array['sort_by'] : 'published_at';
        $sort_direction = array_key_exists('sort_direction', $associative_array) ? $associative_array['sort_direction'] : 'desc';
        $cursor = array_key_exists('cursor', $associative_array) ? $associative_array['cursor'] : '*';
        $per_page = array_key_exists('per_page', $associative_array) ? $associative_array['per_page'] : 10;

        if ($media_images_count_min !== null && $media_images_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_count_max !== null && $media_images_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_width_min !== null && $media_images_width_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_width_max !== null && $media_images_width_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_height_min !== null && $media_images_height_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_height_max !== null && $media_images_height_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_content_length_min !== null && $media_images_content_length_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_images_content_length_max !== null && $media_images_content_length_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_videos_count_min !== null && $media_videos_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($media_videos_count_max !== null && $media_videos_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($source_links_in_count_min !== null && $source_links_in_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($source_links_in_count_max !== null && $source_links_in_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_min !== null && $source_rankings_alexa_rank_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_max !== null && $source_rankings_alexa_rank_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_min !== null && $social_shares_count_facebook_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_max !== null && $social_shares_count_facebook_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_min !== null && $social_shares_count_google_plus_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_max !== null && $social_shares_count_google_plus_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_min !== null && $social_shares_count_linkedin_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_max !== null && $social_shares_count_linkedin_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_min !== null && $social_shares_count_reddit_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_min" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_max !== null && $social_shares_count_reddit_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_max" when calling DefaultApi.listStories, must be bigger than 0.');
        }

        if ($per_page !== null && $per_page > 100) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listStories, must be smaller than or equal to 100.');
        }
        if ($per_page !== null && $per_page < 1) {
            throw new \InvalidArgumentException('invalid value for "$per_page" when calling DefaultApi.listStories, must be bigger than or equal to 1.');
        }


        $resourcePath = '/stories';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }


        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }


        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }


        // query params
        if ($translations_en_title !== null) {
            $queryParams['translations.en.title'] = $translations_en_title;
        }


        // query params
        if ($translations_en_body !== null) {
            $queryParams['translations.en.body'] = $translations_en_body;
        }


        // query params
        if ($translations_en_text !== null) {
            $queryParams['translations.en.text'] = $translations_en_text;
        }


        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }


        // query params
        if ($not_language !== null) {
            $queryParams['!language[]'] = $not_language;
        }


        // query params
        if ($links_permalink !== null) {
            $queryParams['links.permalink[]'] = $links_permalink;
        }


        // query params
        if ($not_links_permalink !== null) {
            $queryParams['!links.permalink[]'] = $not_links_permalink;
        }


        // query params
        if ($published_at_start !== null) {
            $queryParams['published_at.start'] = $published_at_start;
        }


        // query params
        if ($published_at_end !== null) {
            $queryParams['published_at.end'] = $published_at_end;
        }


        // query params
        if ($categories_taxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categories_taxonomy;
        }


        // query params
        if ($categories_confident !== null) {
            $queryParams['categories.confident'] = $categories_confident;
        }


        // query params
        if ($categories_id !== null) {
            $queryParams['categories.id[]'] = $categories_id;
        }


        // query params
        if ($not_categories_id !== null) {
            $queryParams['!categories.id[]'] = $not_categories_id;
        }


        // query params
        if ($categories_level !== null) {
            $queryParams['categories.level[]'] = $categories_level;
        }


        // query params
        if ($not_categories_level !== null) {
            $queryParams['!categories.level[]'] = $not_categories_level;
        }


        // query params
        if ($entities_title_text !== null) {
            $queryParams['entities.title.text[]'] = $entities_title_text;
        }


        // query params
        if ($not_entities_title_text !== null) {
            $queryParams['!entities.title.text[]'] = $not_entities_title_text;
        }


        // query params
        if ($entities_title_type !== null) {
            $queryParams['entities.title.type[]'] = $entities_title_type;
        }


        // query params
        if ($not_entities_title_type !== null) {
            $queryParams['!entities.title.type[]'] = $not_entities_title_type;
        }


        // query params
        if ($entities_title_links_dbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entities_title_links_dbpedia;
        }


        // query params
        if ($not_entities_title_links_dbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $not_entities_title_links_dbpedia;
        }


        // query params
        if ($entities_body_text !== null) {
            $queryParams['entities.body.text[]'] = $entities_body_text;
        }


        // query params
        if ($not_entities_body_text !== null) {
            $queryParams['!entities.body.text[]'] = $not_entities_body_text;
        }


        // query params
        if ($entities_body_type !== null) {
            $queryParams['entities.body.type[]'] = $entities_body_type;
        }


        // query params
        if ($not_entities_body_type !== null) {
            $queryParams['!entities.body.type[]'] = $not_entities_body_type;
        }


        // query params
        if ($entities_body_links_dbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entities_body_links_dbpedia;
        }


        // query params
        if ($not_entities_body_links_dbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $not_entities_body_links_dbpedia;
        }


        // query params
        if ($sentiment_title_polarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentiment_title_polarity;
        }


        // query params
        if ($not_sentiment_title_polarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $not_sentiment_title_polarity;
        }


        // query params
        if ($sentiment_body_polarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentiment_body_polarity;
        }


        // query params
        if ($not_sentiment_body_polarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $not_sentiment_body_polarity;
        }


        // query params
        if ($media_images_count_min !== null) {
            $queryParams['media.images.count.min'] = $media_images_count_min;
        }


        // query params
        if ($media_images_count_max !== null) {
            $queryParams['media.images.count.max'] = $media_images_count_max;
        }


        // query params
        if ($media_images_width_min !== null) {
            $queryParams['media.images.width.min'] = $media_images_width_min;
        }


        // query params
        if ($media_images_width_max !== null) {
            $queryParams['media.images.width.max'] = $media_images_width_max;
        }


        // query params
        if ($media_images_height_min !== null) {
            $queryParams['media.images.height.min'] = $media_images_height_min;
        }


        // query params
        if ($media_images_height_max !== null) {
            $queryParams['media.images.height.max'] = $media_images_height_max;
        }


        // query params
        if ($media_images_content_length_min !== null) {
            $queryParams['media.images.content_length.min'] = $media_images_content_length_min;
        }


        // query params
        if ($media_images_content_length_max !== null) {
            $queryParams['media.images.content_length.max'] = $media_images_content_length_max;
        }


        // query params
        if ($media_images_format !== null) {
            $queryParams['media.images.format[]'] = $media_images_format;
        }


        // query params
        if ($not_media_images_format !== null) {
            $queryParams['!media.images.format[]'] = $not_media_images_format;
        }


        // query params
        if ($media_videos_count_min !== null) {
            $queryParams['media.videos.count.min'] = $media_videos_count_min;
        }


        // query params
        if ($media_videos_count_max !== null) {
            $queryParams['media.videos.count.max'] = $media_videos_count_max;
        }


        // query params
        if ($author_id !== null) {
            $queryParams['author.id[]'] = $author_id;
        }


        // query params
        if ($not_author_id !== null) {
            $queryParams['!author.id[]'] = $not_author_id;
        }


        // query params
        if ($author_name !== null) {
            $queryParams['author.name'] = $author_name;
        }


        // query params
        if ($not_author_name !== null) {
            $queryParams['!author.name'] = $not_author_name;
        }


        // query params
        if ($source_id !== null) {
            $queryParams['source.id[]'] = $source_id;
        }


        // query params
        if ($not_source_id !== null) {
            $queryParams['!source.id[]'] = $not_source_id;
        }


        // query params
        if ($source_name !== null) {
            $queryParams['source.name[]'] = $source_name;
        }


        // query params
        if ($not_source_name !== null) {
            $queryParams['!source.name[]'] = $not_source_name;
        }


        // query params
        if ($source_domain !== null) {
            $queryParams['source.domain[]'] = $source_domain;
        }


        // query params
        if ($not_source_domain !== null) {
            $queryParams['!source.domain[]'] = $not_source_domain;
        }


        // query params
        if ($source_locations_country !== null) {
            $queryParams['source.locations.country[]'] = $source_locations_country;
        }


        // query params
        if ($not_source_locations_country !== null) {
            $queryParams['!source.locations.country[]'] = $not_source_locations_country;
        }


        // query params
        if ($source_locations_state !== null) {
            $queryParams['source.locations.state[]'] = $source_locations_state;
        }


        // query params
        if ($not_source_locations_state !== null) {
            $queryParams['!source.locations.state[]'] = $not_source_locations_state;
        }


        // query params
        if ($source_locations_city !== null) {
            $queryParams['source.locations.city[]'] = $source_locations_city;
        }


        // query params
        if ($not_source_locations_city !== null) {
            $queryParams['!source.locations.city[]'] = $not_source_locations_city;
        }


        // query params
        if ($source_scopes_country !== null) {
            $queryParams['source.scopes.country[]'] = $source_scopes_country;
        }


        // query params
        if ($not_source_scopes_country !== null) {
            $queryParams['!source.scopes.country[]'] = $not_source_scopes_country;
        }


        // query params
        if ($source_scopes_state !== null) {
            $queryParams['source.scopes.state[]'] = $source_scopes_state;
        }


        // query params
        if ($not_source_scopes_state !== null) {
            $queryParams['!source.scopes.state[]'] = $not_source_scopes_state;
        }


        // query params
        if ($source_scopes_city !== null) {
            $queryParams['source.scopes.city[]'] = $source_scopes_city;
        }


        // query params
        if ($not_source_scopes_city !== null) {
            $queryParams['!source.scopes.city[]'] = $not_source_scopes_city;
        }


        // query params
        if ($source_scopes_level !== null) {
            $queryParams['source.scopes.level[]'] = $source_scopes_level;
        }


        // query params
        if ($not_source_scopes_level !== null) {
            $queryParams['!source.scopes.level[]'] = $not_source_scopes_level;
        }


        // query params
        if ($source_links_in_count_min !== null) {
            $queryParams['source.links_in_count.min'] = $source_links_in_count_min;
        }


        // query params
        if ($source_links_in_count_max !== null) {
            $queryParams['source.links_in_count.max'] = $source_links_in_count_max;
        }


        // query params
        if ($source_rankings_alexa_rank_min !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $source_rankings_alexa_rank_min;
        }


        // query params
        if ($source_rankings_alexa_rank_max !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $source_rankings_alexa_rank_max;
        }


        // query params
        if ($source_rankings_alexa_country !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $source_rankings_alexa_country;
        }


        // query params
        if ($social_shares_count_facebook_min !== null) {
            $queryParams['social_shares_count.facebook.min'] = $social_shares_count_facebook_min;
        }


        // query params
        if ($social_shares_count_facebook_max !== null) {
            $queryParams['social_shares_count.facebook.max'] = $social_shares_count_facebook_max;
        }


        // query params
        if ($social_shares_count_google_plus_min !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $social_shares_count_google_plus_min;
        }


        // query params
        if ($social_shares_count_google_plus_max !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $social_shares_count_google_plus_max;
        }


        // query params
        if ($social_shares_count_linkedin_min !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $social_shares_count_linkedin_min;
        }


        // query params
        if ($social_shares_count_linkedin_max !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $social_shares_count_linkedin_max;
        }


        // query params
        if ($social_shares_count_reddit_min !== null) {
            $queryParams['social_shares_count.reddit.min'] = $social_shares_count_reddit_min;
        }


        // query params
        if ($social_shares_count_reddit_max !== null) {
            $queryParams['social_shares_count.reddit.max'] = $social_shares_count_reddit_max;
        }


        // query params
        if ($clusters !== null) {
            $queryParams['clusters[]'] = $clusters;
        }


        // query params
        if ($return !== null) {
            $queryParams['return[]'] = $return;
        }


        // query params
        if ($sort_by !== null) {
            $queryParams['sort_by'] = $sort_by;
        }


        // query params
        if ($sort_direction !== null) {
            $queryParams['sort_direction'] = $sort_direction;
        }


        // query params
        if ($cursor !== null) {
            $queryParams['cursor'] = $cursor;
        }


        // query params
        if ($per_page !== null) {
            $queryParams['per_page'] = $per_page;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listTimeSeries
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\TimeSeriesList|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listTimeSeries($associative_array)
    {
        list($response) = $this->listTimeSeriesWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listTimeSeriesWithHttpInfo
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\TimeSeriesList|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listTimeSeriesWithHttpInfo($associative_array)
    {
        $request = $this->listTimeSeriesRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\TimeSeriesList' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\TimeSeriesList', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\TimeSeriesList';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\TimeSeriesList',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listTimeSeriesAsync
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTimeSeriesAsync($associative_array)
    {
        return $this->listTimeSeriesAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listTimeSeriesAsyncWithHttpInfo
     *
     * List time series
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTimeSeriesAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\TimeSeriesList';
        $request = $this->listTimeSeriesRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listTimeSeries'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW-7DAYS/DAY')
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional, default to 'NOW/DAY')
     * @param  string $period The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math). (optional, default to '+1DAY')
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listTimeSeriesRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translations_en_title = array_key_exists('translations_en_title', $associative_array) ? $associative_array['translations_en_title'] : null;
        $translations_en_body = array_key_exists('translations_en_body', $associative_array) ? $associative_array['translations_en_body'] : null;
        $translations_en_text = array_key_exists('translations_en_text', $associative_array) ? $associative_array['translations_en_text'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $not_language = array_key_exists('not_language', $associative_array) ? $associative_array['not_language'] : null;
        $categories_taxonomy = array_key_exists('categories_taxonomy', $associative_array) ? $associative_array['categories_taxonomy'] : null;
        $categories_confident = array_key_exists('categories_confident', $associative_array) ? $associative_array['categories_confident'] : true;
        $categories_id = array_key_exists('categories_id', $associative_array) ? $associative_array['categories_id'] : null;
        $not_categories_id = array_key_exists('not_categories_id', $associative_array) ? $associative_array['not_categories_id'] : null;
        $categories_level = array_key_exists('categories_level', $associative_array) ? $associative_array['categories_level'] : null;
        $not_categories_level = array_key_exists('not_categories_level', $associative_array) ? $associative_array['not_categories_level'] : null;
        $entities_title_text = array_key_exists('entities_title_text', $associative_array) ? $associative_array['entities_title_text'] : null;
        $not_entities_title_text = array_key_exists('not_entities_title_text', $associative_array) ? $associative_array['not_entities_title_text'] : null;
        $entities_title_type = array_key_exists('entities_title_type', $associative_array) ? $associative_array['entities_title_type'] : null;
        $not_entities_title_type = array_key_exists('not_entities_title_type', $associative_array) ? $associative_array['not_entities_title_type'] : null;
        $entities_title_links_dbpedia = array_key_exists('entities_title_links_dbpedia', $associative_array) ? $associative_array['entities_title_links_dbpedia'] : null;
        $not_entities_title_links_dbpedia = array_key_exists('not_entities_title_links_dbpedia', $associative_array) ? $associative_array['not_entities_title_links_dbpedia'] : null;
        $entities_body_text = array_key_exists('entities_body_text', $associative_array) ? $associative_array['entities_body_text'] : null;
        $not_entities_body_text = array_key_exists('not_entities_body_text', $associative_array) ? $associative_array['not_entities_body_text'] : null;
        $entities_body_type = array_key_exists('entities_body_type', $associative_array) ? $associative_array['entities_body_type'] : null;
        $not_entities_body_type = array_key_exists('not_entities_body_type', $associative_array) ? $associative_array['not_entities_body_type'] : null;
        $entities_body_links_dbpedia = array_key_exists('entities_body_links_dbpedia', $associative_array) ? $associative_array['entities_body_links_dbpedia'] : null;
        $not_entities_body_links_dbpedia = array_key_exists('not_entities_body_links_dbpedia', $associative_array) ? $associative_array['not_entities_body_links_dbpedia'] : null;
        $sentiment_title_polarity = array_key_exists('sentiment_title_polarity', $associative_array) ? $associative_array['sentiment_title_polarity'] : null;
        $not_sentiment_title_polarity = array_key_exists('not_sentiment_title_polarity', $associative_array) ? $associative_array['not_sentiment_title_polarity'] : null;
        $sentiment_body_polarity = array_key_exists('sentiment_body_polarity', $associative_array) ? $associative_array['sentiment_body_polarity'] : null;
        $not_sentiment_body_polarity = array_key_exists('not_sentiment_body_polarity', $associative_array) ? $associative_array['not_sentiment_body_polarity'] : null;
        $media_images_count_min = array_key_exists('media_images_count_min', $associative_array) ? $associative_array['media_images_count_min'] : null;
        $media_images_count_max = array_key_exists('media_images_count_max', $associative_array) ? $associative_array['media_images_count_max'] : null;
        $media_images_width_min = array_key_exists('media_images_width_min', $associative_array) ? $associative_array['media_images_width_min'] : null;
        $media_images_width_max = array_key_exists('media_images_width_max', $associative_array) ? $associative_array['media_images_width_max'] : null;
        $media_images_height_min = array_key_exists('media_images_height_min', $associative_array) ? $associative_array['media_images_height_min'] : null;
        $media_images_height_max = array_key_exists('media_images_height_max', $associative_array) ? $associative_array['media_images_height_max'] : null;
        $media_images_content_length_min = array_key_exists('media_images_content_length_min', $associative_array) ? $associative_array['media_images_content_length_min'] : null;
        $media_images_content_length_max = array_key_exists('media_images_content_length_max', $associative_array) ? $associative_array['media_images_content_length_max'] : null;
        $media_images_format = array_key_exists('media_images_format', $associative_array) ? $associative_array['media_images_format'] : null;
        $not_media_images_format = array_key_exists('not_media_images_format', $associative_array) ? $associative_array['not_media_images_format'] : null;
        $media_videos_count_min = array_key_exists('media_videos_count_min', $associative_array) ? $associative_array['media_videos_count_min'] : null;
        $media_videos_count_max = array_key_exists('media_videos_count_max', $associative_array) ? $associative_array['media_videos_count_max'] : null;
        $author_id = array_key_exists('author_id', $associative_array) ? $associative_array['author_id'] : null;
        $not_author_id = array_key_exists('not_author_id', $associative_array) ? $associative_array['not_author_id'] : null;
        $author_name = array_key_exists('author_name', $associative_array) ? $associative_array['author_name'] : null;
        $not_author_name = array_key_exists('not_author_name', $associative_array) ? $associative_array['not_author_name'] : null;
        $source_id = array_key_exists('source_id', $associative_array) ? $associative_array['source_id'] : null;
        $not_source_id = array_key_exists('not_source_id', $associative_array) ? $associative_array['not_source_id'] : null;
        $source_name = array_key_exists('source_name', $associative_array) ? $associative_array['source_name'] : null;
        $not_source_name = array_key_exists('not_source_name', $associative_array) ? $associative_array['not_source_name'] : null;
        $source_domain = array_key_exists('source_domain', $associative_array) ? $associative_array['source_domain'] : null;
        $not_source_domain = array_key_exists('not_source_domain', $associative_array) ? $associative_array['not_source_domain'] : null;
        $source_locations_country = array_key_exists('source_locations_country', $associative_array) ? $associative_array['source_locations_country'] : null;
        $not_source_locations_country = array_key_exists('not_source_locations_country', $associative_array) ? $associative_array['not_source_locations_country'] : null;
        $source_locations_state = array_key_exists('source_locations_state', $associative_array) ? $associative_array['source_locations_state'] : null;
        $not_source_locations_state = array_key_exists('not_source_locations_state', $associative_array) ? $associative_array['not_source_locations_state'] : null;
        $source_locations_city = array_key_exists('source_locations_city', $associative_array) ? $associative_array['source_locations_city'] : null;
        $not_source_locations_city = array_key_exists('not_source_locations_city', $associative_array) ? $associative_array['not_source_locations_city'] : null;
        $source_scopes_country = array_key_exists('source_scopes_country', $associative_array) ? $associative_array['source_scopes_country'] : null;
        $not_source_scopes_country = array_key_exists('not_source_scopes_country', $associative_array) ? $associative_array['not_source_scopes_country'] : null;
        $source_scopes_state = array_key_exists('source_scopes_state', $associative_array) ? $associative_array['source_scopes_state'] : null;
        $not_source_scopes_state = array_key_exists('not_source_scopes_state', $associative_array) ? $associative_array['not_source_scopes_state'] : null;
        $source_scopes_city = array_key_exists('source_scopes_city', $associative_array) ? $associative_array['source_scopes_city'] : null;
        $not_source_scopes_city = array_key_exists('not_source_scopes_city', $associative_array) ? $associative_array['not_source_scopes_city'] : null;
        $source_scopes_level = array_key_exists('source_scopes_level', $associative_array) ? $associative_array['source_scopes_level'] : null;
        $not_source_scopes_level = array_key_exists('not_source_scopes_level', $associative_array) ? $associative_array['not_source_scopes_level'] : null;
        $source_links_in_count_min = array_key_exists('source_links_in_count_min', $associative_array) ? $associative_array['source_links_in_count_min'] : null;
        $source_links_in_count_max = array_key_exists('source_links_in_count_max', $associative_array) ? $associative_array['source_links_in_count_max'] : null;
        $source_rankings_alexa_rank_min = array_key_exists('source_rankings_alexa_rank_min', $associative_array) ? $associative_array['source_rankings_alexa_rank_min'] : null;
        $source_rankings_alexa_rank_max = array_key_exists('source_rankings_alexa_rank_max', $associative_array) ? $associative_array['source_rankings_alexa_rank_max'] : null;
        $source_rankings_alexa_country = array_key_exists('source_rankings_alexa_country', $associative_array) ? $associative_array['source_rankings_alexa_country'] : null;
        $social_shares_count_facebook_min = array_key_exists('social_shares_count_facebook_min', $associative_array) ? $associative_array['social_shares_count_facebook_min'] : null;
        $social_shares_count_facebook_max = array_key_exists('social_shares_count_facebook_max', $associative_array) ? $associative_array['social_shares_count_facebook_max'] : null;
        $social_shares_count_google_plus_min = array_key_exists('social_shares_count_google_plus_min', $associative_array) ? $associative_array['social_shares_count_google_plus_min'] : null;
        $social_shares_count_google_plus_max = array_key_exists('social_shares_count_google_plus_max', $associative_array) ? $associative_array['social_shares_count_google_plus_max'] : null;
        $social_shares_count_linkedin_min = array_key_exists('social_shares_count_linkedin_min', $associative_array) ? $associative_array['social_shares_count_linkedin_min'] : null;
        $social_shares_count_linkedin_max = array_key_exists('social_shares_count_linkedin_max', $associative_array) ? $associative_array['social_shares_count_linkedin_max'] : null;
        $social_shares_count_reddit_min = array_key_exists('social_shares_count_reddit_min', $associative_array) ? $associative_array['social_shares_count_reddit_min'] : null;
        $social_shares_count_reddit_max = array_key_exists('social_shares_count_reddit_max', $associative_array) ? $associative_array['social_shares_count_reddit_max'] : null;
        $published_at_start = array_key_exists('published_at_start', $associative_array) ? $associative_array['published_at_start'] : 'NOW-7DAYS/DAY';
        $published_at_end = array_key_exists('published_at_end', $associative_array) ? $associative_array['published_at_end'] : 'NOW/DAY';
        $period = array_key_exists('period', $associative_array) ? $associative_array['period'] : '+1DAY';

        if ($media_images_count_min !== null && $media_images_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_count_max !== null && $media_images_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_width_min !== null && $media_images_width_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_width_max !== null && $media_images_width_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_height_min !== null && $media_images_height_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_height_max !== null && $media_images_height_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_content_length_min !== null && $media_images_content_length_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_images_content_length_max !== null && $media_images_content_length_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_videos_count_min !== null && $media_videos_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($media_videos_count_max !== null && $media_videos_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($source_links_in_count_min !== null && $source_links_in_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($source_links_in_count_max !== null && $source_links_in_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_min !== null && $source_rankings_alexa_rank_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_max !== null && $source_rankings_alexa_rank_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_min !== null && $social_shares_count_facebook_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_max !== null && $social_shares_count_facebook_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_min !== null && $social_shares_count_google_plus_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_max !== null && $social_shares_count_google_plus_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_min !== null && $social_shares_count_linkedin_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_max !== null && $social_shares_count_linkedin_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_min !== null && $social_shares_count_reddit_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_min" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_max !== null && $social_shares_count_reddit_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_max" when calling DefaultApi.listTimeSeries, must be bigger than 0.');
        }


        $resourcePath = '/time_series';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }


        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }


        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }


        // query params
        if ($translations_en_title !== null) {
            $queryParams['translations.en.title'] = $translations_en_title;
        }


        // query params
        if ($translations_en_body !== null) {
            $queryParams['translations.en.body'] = $translations_en_body;
        }


        // query params
        if ($translations_en_text !== null) {
            $queryParams['translations.en.text'] = $translations_en_text;
        }


        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }


        // query params
        if ($not_language !== null) {
            $queryParams['!language[]'] = $not_language;
        }


        // query params
        if ($categories_taxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categories_taxonomy;
        }


        // query params
        if ($categories_confident !== null) {
            $queryParams['categories.confident'] = $categories_confident;
        }


        // query params
        if ($categories_id !== null) {
            $queryParams['categories.id[]'] = $categories_id;
        }


        // query params
        if ($not_categories_id !== null) {
            $queryParams['!categories.id[]'] = $not_categories_id;
        }


        // query params
        if ($categories_level !== null) {
            $queryParams['categories.level[]'] = $categories_level;
        }


        // query params
        if ($not_categories_level !== null) {
            $queryParams['!categories.level[]'] = $not_categories_level;
        }


        // query params
        if ($entities_title_text !== null) {
            $queryParams['entities.title.text[]'] = $entities_title_text;
        }


        // query params
        if ($not_entities_title_text !== null) {
            $queryParams['!entities.title.text[]'] = $not_entities_title_text;
        }


        // query params
        if ($entities_title_type !== null) {
            $queryParams['entities.title.type[]'] = $entities_title_type;
        }


        // query params
        if ($not_entities_title_type !== null) {
            $queryParams['!entities.title.type[]'] = $not_entities_title_type;
        }


        // query params
        if ($entities_title_links_dbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entities_title_links_dbpedia;
        }


        // query params
        if ($not_entities_title_links_dbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $not_entities_title_links_dbpedia;
        }


        // query params
        if ($entities_body_text !== null) {
            $queryParams['entities.body.text[]'] = $entities_body_text;
        }


        // query params
        if ($not_entities_body_text !== null) {
            $queryParams['!entities.body.text[]'] = $not_entities_body_text;
        }


        // query params
        if ($entities_body_type !== null) {
            $queryParams['entities.body.type[]'] = $entities_body_type;
        }


        // query params
        if ($not_entities_body_type !== null) {
            $queryParams['!entities.body.type[]'] = $not_entities_body_type;
        }


        // query params
        if ($entities_body_links_dbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entities_body_links_dbpedia;
        }


        // query params
        if ($not_entities_body_links_dbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $not_entities_body_links_dbpedia;
        }


        // query params
        if ($sentiment_title_polarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentiment_title_polarity;
        }


        // query params
        if ($not_sentiment_title_polarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $not_sentiment_title_polarity;
        }


        // query params
        if ($sentiment_body_polarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentiment_body_polarity;
        }


        // query params
        if ($not_sentiment_body_polarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $not_sentiment_body_polarity;
        }


        // query params
        if ($media_images_count_min !== null) {
            $queryParams['media.images.count.min'] = $media_images_count_min;
        }


        // query params
        if ($media_images_count_max !== null) {
            $queryParams['media.images.count.max'] = $media_images_count_max;
        }


        // query params
        if ($media_images_width_min !== null) {
            $queryParams['media.images.width.min'] = $media_images_width_min;
        }


        // query params
        if ($media_images_width_max !== null) {
            $queryParams['media.images.width.max'] = $media_images_width_max;
        }


        // query params
        if ($media_images_height_min !== null) {
            $queryParams['media.images.height.min'] = $media_images_height_min;
        }


        // query params
        if ($media_images_height_max !== null) {
            $queryParams['media.images.height.max'] = $media_images_height_max;
        }


        // query params
        if ($media_images_content_length_min !== null) {
            $queryParams['media.images.content_length.min'] = $media_images_content_length_min;
        }


        // query params
        if ($media_images_content_length_max !== null) {
            $queryParams['media.images.content_length.max'] = $media_images_content_length_max;
        }


        // query params
        if ($media_images_format !== null) {
            $queryParams['media.images.format[]'] = $media_images_format;
        }


        // query params
        if ($not_media_images_format !== null) {
            $queryParams['!media.images.format[]'] = $not_media_images_format;
        }


        // query params
        if ($media_videos_count_min !== null) {
            $queryParams['media.videos.count.min'] = $media_videos_count_min;
        }


        // query params
        if ($media_videos_count_max !== null) {
            $queryParams['media.videos.count.max'] = $media_videos_count_max;
        }


        // query params
        if ($author_id !== null) {
            $queryParams['author.id[]'] = $author_id;
        }


        // query params
        if ($not_author_id !== null) {
            $queryParams['!author.id[]'] = $not_author_id;
        }


        // query params
        if ($author_name !== null) {
            $queryParams['author.name'] = $author_name;
        }


        // query params
        if ($not_author_name !== null) {
            $queryParams['!author.name'] = $not_author_name;
        }


        // query params
        if ($source_id !== null) {
            $queryParams['source.id[]'] = $source_id;
        }


        // query params
        if ($not_source_id !== null) {
            $queryParams['!source.id[]'] = $not_source_id;
        }


        // query params
        if ($source_name !== null) {
            $queryParams['source.name[]'] = $source_name;
        }


        // query params
        if ($not_source_name !== null) {
            $queryParams['!source.name[]'] = $not_source_name;
        }


        // query params
        if ($source_domain !== null) {
            $queryParams['source.domain[]'] = $source_domain;
        }


        // query params
        if ($not_source_domain !== null) {
            $queryParams['!source.domain[]'] = $not_source_domain;
        }


        // query params
        if ($source_locations_country !== null) {
            $queryParams['source.locations.country[]'] = $source_locations_country;
        }


        // query params
        if ($not_source_locations_country !== null) {
            $queryParams['!source.locations.country[]'] = $not_source_locations_country;
        }


        // query params
        if ($source_locations_state !== null) {
            $queryParams['source.locations.state[]'] = $source_locations_state;
        }


        // query params
        if ($not_source_locations_state !== null) {
            $queryParams['!source.locations.state[]'] = $not_source_locations_state;
        }


        // query params
        if ($source_locations_city !== null) {
            $queryParams['source.locations.city[]'] = $source_locations_city;
        }


        // query params
        if ($not_source_locations_city !== null) {
            $queryParams['!source.locations.city[]'] = $not_source_locations_city;
        }


        // query params
        if ($source_scopes_country !== null) {
            $queryParams['source.scopes.country[]'] = $source_scopes_country;
        }


        // query params
        if ($not_source_scopes_country !== null) {
            $queryParams['!source.scopes.country[]'] = $not_source_scopes_country;
        }


        // query params
        if ($source_scopes_state !== null) {
            $queryParams['source.scopes.state[]'] = $source_scopes_state;
        }


        // query params
        if ($not_source_scopes_state !== null) {
            $queryParams['!source.scopes.state[]'] = $not_source_scopes_state;
        }


        // query params
        if ($source_scopes_city !== null) {
            $queryParams['source.scopes.city[]'] = $source_scopes_city;
        }


        // query params
        if ($not_source_scopes_city !== null) {
            $queryParams['!source.scopes.city[]'] = $not_source_scopes_city;
        }


        // query params
        if ($source_scopes_level !== null) {
            $queryParams['source.scopes.level[]'] = $source_scopes_level;
        }


        // query params
        if ($not_source_scopes_level !== null) {
            $queryParams['!source.scopes.level[]'] = $not_source_scopes_level;
        }


        // query params
        if ($source_links_in_count_min !== null) {
            $queryParams['source.links_in_count.min'] = $source_links_in_count_min;
        }


        // query params
        if ($source_links_in_count_max !== null) {
            $queryParams['source.links_in_count.max'] = $source_links_in_count_max;
        }


        // query params
        if ($source_rankings_alexa_rank_min !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $source_rankings_alexa_rank_min;
        }


        // query params
        if ($source_rankings_alexa_rank_max !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $source_rankings_alexa_rank_max;
        }


        // query params
        if ($source_rankings_alexa_country !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $source_rankings_alexa_country;
        }


        // query params
        if ($social_shares_count_facebook_min !== null) {
            $queryParams['social_shares_count.facebook.min'] = $social_shares_count_facebook_min;
        }


        // query params
        if ($social_shares_count_facebook_max !== null) {
            $queryParams['social_shares_count.facebook.max'] = $social_shares_count_facebook_max;
        }


        // query params
        if ($social_shares_count_google_plus_min !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $social_shares_count_google_plus_min;
        }


        // query params
        if ($social_shares_count_google_plus_max !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $social_shares_count_google_plus_max;
        }


        // query params
        if ($social_shares_count_linkedin_min !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $social_shares_count_linkedin_min;
        }


        // query params
        if ($social_shares_count_linkedin_max !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $social_shares_count_linkedin_max;
        }


        // query params
        if ($social_shares_count_reddit_min !== null) {
            $queryParams['social_shares_count.reddit.min'] = $social_shares_count_reddit_min;
        }


        // query params
        if ($social_shares_count_reddit_max !== null) {
            $queryParams['social_shares_count.reddit.max'] = $social_shares_count_reddit_max;
        }


        // query params
        if ($published_at_start !== null) {
            $queryParams['published_at.start'] = $published_at_start;
        }


        // query params
        if ($published_at_end !== null) {
            $queryParams['published_at.end'] = $published_at_end;
        }


        // query params
        if ($period !== null) {
            $queryParams['period'] = $period;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation listTrends
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \Aylien\NewsApi\Models\Trends|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors
     */
    public function listTrends($associative_array)
    {
        list($response) = $this->listTrendsWithHttpInfo($associative_array);
        return $response;
    }

    /**
     * Operation listTrendsWithHttpInfo
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \Aylien\NewsApi\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \Aylien\NewsApi\Models\Trends|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors|\Aylien\NewsApi\Models\Errors, HTTP status code, HTTP response headers (array of strings)
     */
    public function listTrendsWithHttpInfo($associative_array)
    {
        $request = $this->listTrendsRequest($associative_array);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            switch($statusCode) {
                case 200:
                    if ('\Aylien\NewsApi\Models\Trends' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Trends', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 401:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 404:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 422:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 492:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                case 500:
                    if ('\Aylien\NewsApi\Models\Errors' === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Aylien\NewsApi\Models\Errors', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Aylien\NewsApi\Models\Trends';
            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Trends',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 422:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 492:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                case 500:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Aylien\NewsApi\Models\Errors',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation listTrendsAsync
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTrendsAsync($associative_array)
    {
        return $this->listTrendsAsyncWithHttpInfo($associative_array)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation listTrendsAsyncWithHttpInfo
     *
     * List trends
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listTrendsAsyncWithHttpInfo($associative_array)
    {
        $returnType = '\Aylien\NewsApi\Models\Trends';
        $request = $this->listTrendsRequest($associative_array);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'listTrends'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  string $field This parameter is used to specify the trend field. (required)
     * @param  int[] $id This parameter is used for finding stories by story id. (optional)
     * @param  int[] $not_id This parameter is used for excluding stories by story id. (optional)
     * @param  string $title This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $body This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $text This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_title This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_body This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string $translations_en_text This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators). (optional)
     * @param  string[] $links_permalink This parameter is used to find stories based on their url. (optional)
     * @param  string[] $not_links_permalink This parameter is used to exclude stories based on their url. (optional)
     * @param  string[] $language This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string[] $not_language This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes. (optional)
     * @param  string $published_at_start This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $published_at_end This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates). (optional)
     * @param  string $categories_taxonomy This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  bool $categories_confident This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional, default to true)
     * @param  string[] $categories_id This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $not_categories_id This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $categories_level This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  int[] $not_categories_level This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories). (optional)
     * @param  string[] $entities_title_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_title_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_title_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_text This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_text This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_type This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_type This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $entities_body_links_dbpedia This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string[] $not_entities_body_links_dbpedia This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities). (optional)
     * @param  string $sentiment_title_polarity This parameter is used for finding stories whose title sentiment is the specified value. (optional)
     * @param  string $not_sentiment_title_polarity This parameter is used for excluding stories whose title sentiment is the specified value. (optional)
     * @param  string $sentiment_body_polarity This parameter is used for finding stories whose body sentiment is the specified value. (optional)
     * @param  string $not_sentiment_body_polarity This parameter is used for excluding stories whose body sentiment is the specified value. (optional)
     * @param  int $media_images_count_min This parameter is used for finding stories whose number of images is greater than or equal to the specified value. (optional)
     * @param  int $media_images_count_max This parameter is used for finding stories whose number of images is less than or equal to the specified value. (optional)
     * @param  int $media_images_width_min This parameter is used for finding stories whose width of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_width_max This parameter is used for finding stories whose width of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_height_min This parameter is used for finding stories whose height of images are greater than or equal to the specified value. (optional)
     * @param  int $media_images_height_max This parameter is used for finding stories whose height of images are less than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_min This parameter is used for finding stories whose images content length are greater than or equal to the specified value. (optional)
     * @param  int $media_images_content_length_max This parameter is used for finding stories whose images content length are less than or equal to the specified value. (optional)
     * @param  string[] $media_images_format This parameter is used for finding stories whose images format are the specified value. (optional)
     * @param  string[] $not_media_images_format This parameter is used for excluding stories whose images format are the specified value. (optional)
     * @param  int $media_videos_count_min This parameter is used for finding stories whose number of videos is greater than or equal to the specified value. (optional)
     * @param  int $media_videos_count_max This parameter is used for finding stories whose number of videos is less than or equal to the specified value. (optional)
     * @param  int[] $author_id This parameter is used for finding stories whose author id is the specified value. (optional)
     * @param  int[] $not_author_id This parameter is used for excluding stories whose author id is the specified value. (optional)
     * @param  string $author_name This parameter is used for finding stories whose author full name contains the specified value. (optional)
     * @param  string $not_author_name This parameter is used for excluding stories whose author full name contains the specified value. (optional)
     * @param  int[] $source_id This parameter is used for finding stories whose source id is the specified value. (optional)
     * @param  int[] $not_source_id This parameter is used for excluding stories whose source id is the specified value. (optional)
     * @param  string[] $source_name This parameter is used for finding stories whose source name contains the specified value. (optional)
     * @param  string[] $not_source_name This parameter is used for excluding stories whose source name contains the specified value. (optional)
     * @param  string[] $source_domain This parameter is used for finding stories whose source domain is the specified value. (optional)
     * @param  string[] $not_source_domain This parameter is used for excluding stories whose source domain is the specified value. (optional)
     * @param  string[] $source_locations_country This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_country This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_state This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_state This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_locations_city This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_locations_city This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_country This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_country This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_state This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_state This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_city This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_city This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $source_scopes_level This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  string[] $not_source_scopes_level This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations). (optional)
     * @param  int $source_links_in_count_min This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_links_in_count_max This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count). (optional)
     * @param  int $source_rankings_alexa_rank_min This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $source_rankings_alexa_rank_max This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  string[] $source_rankings_alexa_country This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks). (optional)
     * @param  int $social_shares_count_facebook_min This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_facebook_max This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_min This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_google_plus_max This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_min This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_linkedin_max This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_min This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value. (optional)
     * @param  int $social_shares_count_reddit_max This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function listTrendsRequest($associative_array)
    {
        // unbox the parameters from the associative array
        $field = array_key_exists('field', $associative_array) ? $associative_array['field'] : null;
        $id = array_key_exists('id', $associative_array) ? $associative_array['id'] : null;
        $not_id = array_key_exists('not_id', $associative_array) ? $associative_array['not_id'] : null;
        $title = array_key_exists('title', $associative_array) ? $associative_array['title'] : null;
        $body = array_key_exists('body', $associative_array) ? $associative_array['body'] : null;
        $text = array_key_exists('text', $associative_array) ? $associative_array['text'] : null;
        $translations_en_title = array_key_exists('translations_en_title', $associative_array) ? $associative_array['translations_en_title'] : null;
        $translations_en_body = array_key_exists('translations_en_body', $associative_array) ? $associative_array['translations_en_body'] : null;
        $translations_en_text = array_key_exists('translations_en_text', $associative_array) ? $associative_array['translations_en_text'] : null;
        $links_permalink = array_key_exists('links_permalink', $associative_array) ? $associative_array['links_permalink'] : null;
        $not_links_permalink = array_key_exists('not_links_permalink', $associative_array) ? $associative_array['not_links_permalink'] : null;
        $language = array_key_exists('language', $associative_array) ? $associative_array['language'] : null;
        $not_language = array_key_exists('not_language', $associative_array) ? $associative_array['not_language'] : null;
        $published_at_start = array_key_exists('published_at_start', $associative_array) ? $associative_array['published_at_start'] : null;
        $published_at_end = array_key_exists('published_at_end', $associative_array) ? $associative_array['published_at_end'] : null;
        $categories_taxonomy = array_key_exists('categories_taxonomy', $associative_array) ? $associative_array['categories_taxonomy'] : null;
        $categories_confident = array_key_exists('categories_confident', $associative_array) ? $associative_array['categories_confident'] : true;
        $categories_id = array_key_exists('categories_id', $associative_array) ? $associative_array['categories_id'] : null;
        $not_categories_id = array_key_exists('not_categories_id', $associative_array) ? $associative_array['not_categories_id'] : null;
        $categories_level = array_key_exists('categories_level', $associative_array) ? $associative_array['categories_level'] : null;
        $not_categories_level = array_key_exists('not_categories_level', $associative_array) ? $associative_array['not_categories_level'] : null;
        $entities_title_text = array_key_exists('entities_title_text', $associative_array) ? $associative_array['entities_title_text'] : null;
        $not_entities_title_text = array_key_exists('not_entities_title_text', $associative_array) ? $associative_array['not_entities_title_text'] : null;
        $entities_title_type = array_key_exists('entities_title_type', $associative_array) ? $associative_array['entities_title_type'] : null;
        $not_entities_title_type = array_key_exists('not_entities_title_type', $associative_array) ? $associative_array['not_entities_title_type'] : null;
        $entities_title_links_dbpedia = array_key_exists('entities_title_links_dbpedia', $associative_array) ? $associative_array['entities_title_links_dbpedia'] : null;
        $not_entities_title_links_dbpedia = array_key_exists('not_entities_title_links_dbpedia', $associative_array) ? $associative_array['not_entities_title_links_dbpedia'] : null;
        $entities_body_text = array_key_exists('entities_body_text', $associative_array) ? $associative_array['entities_body_text'] : null;
        $not_entities_body_text = array_key_exists('not_entities_body_text', $associative_array) ? $associative_array['not_entities_body_text'] : null;
        $entities_body_type = array_key_exists('entities_body_type', $associative_array) ? $associative_array['entities_body_type'] : null;
        $not_entities_body_type = array_key_exists('not_entities_body_type', $associative_array) ? $associative_array['not_entities_body_type'] : null;
        $entities_body_links_dbpedia = array_key_exists('entities_body_links_dbpedia', $associative_array) ? $associative_array['entities_body_links_dbpedia'] : null;
        $not_entities_body_links_dbpedia = array_key_exists('not_entities_body_links_dbpedia', $associative_array) ? $associative_array['not_entities_body_links_dbpedia'] : null;
        $sentiment_title_polarity = array_key_exists('sentiment_title_polarity', $associative_array) ? $associative_array['sentiment_title_polarity'] : null;
        $not_sentiment_title_polarity = array_key_exists('not_sentiment_title_polarity', $associative_array) ? $associative_array['not_sentiment_title_polarity'] : null;
        $sentiment_body_polarity = array_key_exists('sentiment_body_polarity', $associative_array) ? $associative_array['sentiment_body_polarity'] : null;
        $not_sentiment_body_polarity = array_key_exists('not_sentiment_body_polarity', $associative_array) ? $associative_array['not_sentiment_body_polarity'] : null;
        $media_images_count_min = array_key_exists('media_images_count_min', $associative_array) ? $associative_array['media_images_count_min'] : null;
        $media_images_count_max = array_key_exists('media_images_count_max', $associative_array) ? $associative_array['media_images_count_max'] : null;
        $media_images_width_min = array_key_exists('media_images_width_min', $associative_array) ? $associative_array['media_images_width_min'] : null;
        $media_images_width_max = array_key_exists('media_images_width_max', $associative_array) ? $associative_array['media_images_width_max'] : null;
        $media_images_height_min = array_key_exists('media_images_height_min', $associative_array) ? $associative_array['media_images_height_min'] : null;
        $media_images_height_max = array_key_exists('media_images_height_max', $associative_array) ? $associative_array['media_images_height_max'] : null;
        $media_images_content_length_min = array_key_exists('media_images_content_length_min', $associative_array) ? $associative_array['media_images_content_length_min'] : null;
        $media_images_content_length_max = array_key_exists('media_images_content_length_max', $associative_array) ? $associative_array['media_images_content_length_max'] : null;
        $media_images_format = array_key_exists('media_images_format', $associative_array) ? $associative_array['media_images_format'] : null;
        $not_media_images_format = array_key_exists('not_media_images_format', $associative_array) ? $associative_array['not_media_images_format'] : null;
        $media_videos_count_min = array_key_exists('media_videos_count_min', $associative_array) ? $associative_array['media_videos_count_min'] : null;
        $media_videos_count_max = array_key_exists('media_videos_count_max', $associative_array) ? $associative_array['media_videos_count_max'] : null;
        $author_id = array_key_exists('author_id', $associative_array) ? $associative_array['author_id'] : null;
        $not_author_id = array_key_exists('not_author_id', $associative_array) ? $associative_array['not_author_id'] : null;
        $author_name = array_key_exists('author_name', $associative_array) ? $associative_array['author_name'] : null;
        $not_author_name = array_key_exists('not_author_name', $associative_array) ? $associative_array['not_author_name'] : null;
        $source_id = array_key_exists('source_id', $associative_array) ? $associative_array['source_id'] : null;
        $not_source_id = array_key_exists('not_source_id', $associative_array) ? $associative_array['not_source_id'] : null;
        $source_name = array_key_exists('source_name', $associative_array) ? $associative_array['source_name'] : null;
        $not_source_name = array_key_exists('not_source_name', $associative_array) ? $associative_array['not_source_name'] : null;
        $source_domain = array_key_exists('source_domain', $associative_array) ? $associative_array['source_domain'] : null;
        $not_source_domain = array_key_exists('not_source_domain', $associative_array) ? $associative_array['not_source_domain'] : null;
        $source_locations_country = array_key_exists('source_locations_country', $associative_array) ? $associative_array['source_locations_country'] : null;
        $not_source_locations_country = array_key_exists('not_source_locations_country', $associative_array) ? $associative_array['not_source_locations_country'] : null;
        $source_locations_state = array_key_exists('source_locations_state', $associative_array) ? $associative_array['source_locations_state'] : null;
        $not_source_locations_state = array_key_exists('not_source_locations_state', $associative_array) ? $associative_array['not_source_locations_state'] : null;
        $source_locations_city = array_key_exists('source_locations_city', $associative_array) ? $associative_array['source_locations_city'] : null;
        $not_source_locations_city = array_key_exists('not_source_locations_city', $associative_array) ? $associative_array['not_source_locations_city'] : null;
        $source_scopes_country = array_key_exists('source_scopes_country', $associative_array) ? $associative_array['source_scopes_country'] : null;
        $not_source_scopes_country = array_key_exists('not_source_scopes_country', $associative_array) ? $associative_array['not_source_scopes_country'] : null;
        $source_scopes_state = array_key_exists('source_scopes_state', $associative_array) ? $associative_array['source_scopes_state'] : null;
        $not_source_scopes_state = array_key_exists('not_source_scopes_state', $associative_array) ? $associative_array['not_source_scopes_state'] : null;
        $source_scopes_city = array_key_exists('source_scopes_city', $associative_array) ? $associative_array['source_scopes_city'] : null;
        $not_source_scopes_city = array_key_exists('not_source_scopes_city', $associative_array) ? $associative_array['not_source_scopes_city'] : null;
        $source_scopes_level = array_key_exists('source_scopes_level', $associative_array) ? $associative_array['source_scopes_level'] : null;
        $not_source_scopes_level = array_key_exists('not_source_scopes_level', $associative_array) ? $associative_array['not_source_scopes_level'] : null;
        $source_links_in_count_min = array_key_exists('source_links_in_count_min', $associative_array) ? $associative_array['source_links_in_count_min'] : null;
        $source_links_in_count_max = array_key_exists('source_links_in_count_max', $associative_array) ? $associative_array['source_links_in_count_max'] : null;
        $source_rankings_alexa_rank_min = array_key_exists('source_rankings_alexa_rank_min', $associative_array) ? $associative_array['source_rankings_alexa_rank_min'] : null;
        $source_rankings_alexa_rank_max = array_key_exists('source_rankings_alexa_rank_max', $associative_array) ? $associative_array['source_rankings_alexa_rank_max'] : null;
        $source_rankings_alexa_country = array_key_exists('source_rankings_alexa_country', $associative_array) ? $associative_array['source_rankings_alexa_country'] : null;
        $social_shares_count_facebook_min = array_key_exists('social_shares_count_facebook_min', $associative_array) ? $associative_array['social_shares_count_facebook_min'] : null;
        $social_shares_count_facebook_max = array_key_exists('social_shares_count_facebook_max', $associative_array) ? $associative_array['social_shares_count_facebook_max'] : null;
        $social_shares_count_google_plus_min = array_key_exists('social_shares_count_google_plus_min', $associative_array) ? $associative_array['social_shares_count_google_plus_min'] : null;
        $social_shares_count_google_plus_max = array_key_exists('social_shares_count_google_plus_max', $associative_array) ? $associative_array['social_shares_count_google_plus_max'] : null;
        $social_shares_count_linkedin_min = array_key_exists('social_shares_count_linkedin_min', $associative_array) ? $associative_array['social_shares_count_linkedin_min'] : null;
        $social_shares_count_linkedin_max = array_key_exists('social_shares_count_linkedin_max', $associative_array) ? $associative_array['social_shares_count_linkedin_max'] : null;
        $social_shares_count_reddit_min = array_key_exists('social_shares_count_reddit_min', $associative_array) ? $associative_array['social_shares_count_reddit_min'] : null;
        $social_shares_count_reddit_max = array_key_exists('social_shares_count_reddit_max', $associative_array) ? $associative_array['social_shares_count_reddit_max'] : null;

        // verify the required parameter 'field' is set
        if ($field === null || (is_array($field) && count($field) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $field when calling listTrends'
            );
        }
        if ($media_images_count_min !== null && $media_images_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_count_max !== null && $media_images_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_count_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_width_min !== null && $media_images_width_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_width_max !== null && $media_images_width_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_width_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_height_min !== null && $media_images_height_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_height_max !== null && $media_images_height_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_height_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_content_length_min !== null && $media_images_content_length_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_images_content_length_max !== null && $media_images_content_length_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_images_content_length_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_videos_count_min !== null && $media_videos_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($media_videos_count_max !== null && $media_videos_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$media_videos_count_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($source_links_in_count_min !== null && $source_links_in_count_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($source_links_in_count_max !== null && $source_links_in_count_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_links_in_count_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_min !== null && $source_rankings_alexa_rank_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($source_rankings_alexa_rank_max !== null && $source_rankings_alexa_rank_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$source_rankings_alexa_rank_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_min !== null && $social_shares_count_facebook_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_facebook_max !== null && $social_shares_count_facebook_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_facebook_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_min !== null && $social_shares_count_google_plus_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_google_plus_max !== null && $social_shares_count_google_plus_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_google_plus_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_min !== null && $social_shares_count_linkedin_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_linkedin_max !== null && $social_shares_count_linkedin_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_linkedin_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_min !== null && $social_shares_count_reddit_min <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_min" when calling DefaultApi.listTrends, must be bigger than 0.');
        }

        if ($social_shares_count_reddit_max !== null && $social_shares_count_reddit_max <= 0) {
            throw new \InvalidArgumentException('invalid value for "$social_shares_count_reddit_max" when calling DefaultApi.listTrends, must be bigger than 0.');
        }


        $resourcePath = '/trends';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // query params
        if ($id !== null) {
            $queryParams['id[]'] = $id;
        }


        // query params
        if ($not_id !== null) {
            $queryParams['!id[]'] = $not_id;
        }


        // query params
        if ($title !== null) {
            $queryParams['title'] = $title;
        }


        // query params
        if ($body !== null) {
            $queryParams['body'] = $body;
        }


        // query params
        if ($text !== null) {
            $queryParams['text'] = $text;
        }


        // query params
        if ($translations_en_title !== null) {
            $queryParams['translations.en.title'] = $translations_en_title;
        }


        // query params
        if ($translations_en_body !== null) {
            $queryParams['translations.en.body'] = $translations_en_body;
        }


        // query params
        if ($translations_en_text !== null) {
            $queryParams['translations.en.text'] = $translations_en_text;
        }


        // query params
        if ($links_permalink !== null) {
            $queryParams['links.permalink[]'] = $links_permalink;
        }


        // query params
        if ($not_links_permalink !== null) {
            $queryParams['!links.permalink[]'] = $not_links_permalink;
        }


        // query params
        if ($language !== null) {
            $queryParams['language[]'] = $language;
        }


        // query params
        if ($not_language !== null) {
            $queryParams['!language[]'] = $not_language;
        }


        // query params
        if ($published_at_start !== null) {
            $queryParams['published_at.start'] = $published_at_start;
        }


        // query params
        if ($published_at_end !== null) {
            $queryParams['published_at.end'] = $published_at_end;
        }


        // query params
        if ($categories_taxonomy !== null) {
            $queryParams['categories.taxonomy'] = $categories_taxonomy;
        }


        // query params
        if ($categories_confident !== null) {
            $queryParams['categories.confident'] = $categories_confident;
        }


        // query params
        if ($categories_id !== null) {
            $queryParams['categories.id[]'] = $categories_id;
        }


        // query params
        if ($not_categories_id !== null) {
            $queryParams['!categories.id[]'] = $not_categories_id;
        }


        // query params
        if ($categories_level !== null) {
            $queryParams['categories.level[]'] = $categories_level;
        }


        // query params
        if ($not_categories_level !== null) {
            $queryParams['!categories.level[]'] = $not_categories_level;
        }


        // query params
        if ($entities_title_text !== null) {
            $queryParams['entities.title.text[]'] = $entities_title_text;
        }


        // query params
        if ($not_entities_title_text !== null) {
            $queryParams['!entities.title.text[]'] = $not_entities_title_text;
        }


        // query params
        if ($entities_title_type !== null) {
            $queryParams['entities.title.type[]'] = $entities_title_type;
        }


        // query params
        if ($not_entities_title_type !== null) {
            $queryParams['!entities.title.type[]'] = $not_entities_title_type;
        }


        // query params
        if ($entities_title_links_dbpedia !== null) {
            $queryParams['entities.title.links.dbpedia[]'] = $entities_title_links_dbpedia;
        }


        // query params
        if ($not_entities_title_links_dbpedia !== null) {
            $queryParams['!entities.title.links.dbpedia[]'] = $not_entities_title_links_dbpedia;
        }


        // query params
        if ($entities_body_text !== null) {
            $queryParams['entities.body.text[]'] = $entities_body_text;
        }


        // query params
        if ($not_entities_body_text !== null) {
            $queryParams['!entities.body.text[]'] = $not_entities_body_text;
        }


        // query params
        if ($entities_body_type !== null) {
            $queryParams['entities.body.type[]'] = $entities_body_type;
        }


        // query params
        if ($not_entities_body_type !== null) {
            $queryParams['!entities.body.type[]'] = $not_entities_body_type;
        }


        // query params
        if ($entities_body_links_dbpedia !== null) {
            $queryParams['entities.body.links.dbpedia[]'] = $entities_body_links_dbpedia;
        }


        // query params
        if ($not_entities_body_links_dbpedia !== null) {
            $queryParams['!entities.body.links.dbpedia[]'] = $not_entities_body_links_dbpedia;
        }


        // query params
        if ($sentiment_title_polarity !== null) {
            $queryParams['sentiment.title.polarity'] = $sentiment_title_polarity;
        }


        // query params
        if ($not_sentiment_title_polarity !== null) {
            $queryParams['!sentiment.title.polarity'] = $not_sentiment_title_polarity;
        }


        // query params
        if ($sentiment_body_polarity !== null) {
            $queryParams['sentiment.body.polarity'] = $sentiment_body_polarity;
        }


        // query params
        if ($not_sentiment_body_polarity !== null) {
            $queryParams['!sentiment.body.polarity'] = $not_sentiment_body_polarity;
        }


        // query params
        if ($media_images_count_min !== null) {
            $queryParams['media.images.count.min'] = $media_images_count_min;
        }


        // query params
        if ($media_images_count_max !== null) {
            $queryParams['media.images.count.max'] = $media_images_count_max;
        }


        // query params
        if ($media_images_width_min !== null) {
            $queryParams['media.images.width.min'] = $media_images_width_min;
        }


        // query params
        if ($media_images_width_max !== null) {
            $queryParams['media.images.width.max'] = $media_images_width_max;
        }


        // query params
        if ($media_images_height_min !== null) {
            $queryParams['media.images.height.min'] = $media_images_height_min;
        }


        // query params
        if ($media_images_height_max !== null) {
            $queryParams['media.images.height.max'] = $media_images_height_max;
        }


        // query params
        if ($media_images_content_length_min !== null) {
            $queryParams['media.images.content_length.min'] = $media_images_content_length_min;
        }


        // query params
        if ($media_images_content_length_max !== null) {
            $queryParams['media.images.content_length.max'] = $media_images_content_length_max;
        }


        // query params
        if ($media_images_format !== null) {
            $queryParams['media.images.format[]'] = $media_images_format;
        }


        // query params
        if ($not_media_images_format !== null) {
            $queryParams['!media.images.format[]'] = $not_media_images_format;
        }


        // query params
        if ($media_videos_count_min !== null) {
            $queryParams['media.videos.count.min'] = $media_videos_count_min;
        }


        // query params
        if ($media_videos_count_max !== null) {
            $queryParams['media.videos.count.max'] = $media_videos_count_max;
        }


        // query params
        if ($author_id !== null) {
            $queryParams['author.id[]'] = $author_id;
        }


        // query params
        if ($not_author_id !== null) {
            $queryParams['!author.id[]'] = $not_author_id;
        }


        // query params
        if ($author_name !== null) {
            $queryParams['author.name'] = $author_name;
        }


        // query params
        if ($not_author_name !== null) {
            $queryParams['!author.name'] = $not_author_name;
        }


        // query params
        if ($source_id !== null) {
            $queryParams['source.id[]'] = $source_id;
        }


        // query params
        if ($not_source_id !== null) {
            $queryParams['!source.id[]'] = $not_source_id;
        }


        // query params
        if ($source_name !== null) {
            $queryParams['source.name[]'] = $source_name;
        }


        // query params
        if ($not_source_name !== null) {
            $queryParams['!source.name[]'] = $not_source_name;
        }


        // query params
        if ($source_domain !== null) {
            $queryParams['source.domain[]'] = $source_domain;
        }


        // query params
        if ($not_source_domain !== null) {
            $queryParams['!source.domain[]'] = $not_source_domain;
        }


        // query params
        if ($source_locations_country !== null) {
            $queryParams['source.locations.country[]'] = $source_locations_country;
        }


        // query params
        if ($not_source_locations_country !== null) {
            $queryParams['!source.locations.country[]'] = $not_source_locations_country;
        }


        // query params
        if ($source_locations_state !== null) {
            $queryParams['source.locations.state[]'] = $source_locations_state;
        }


        // query params
        if ($not_source_locations_state !== null) {
            $queryParams['!source.locations.state[]'] = $not_source_locations_state;
        }


        // query params
        if ($source_locations_city !== null) {
            $queryParams['source.locations.city[]'] = $source_locations_city;
        }


        // query params
        if ($not_source_locations_city !== null) {
            $queryParams['!source.locations.city[]'] = $not_source_locations_city;
        }


        // query params
        if ($source_scopes_country !== null) {
            $queryParams['source.scopes.country[]'] = $source_scopes_country;
        }


        // query params
        if ($not_source_scopes_country !== null) {
            $queryParams['!source.scopes.country[]'] = $not_source_scopes_country;
        }


        // query params
        if ($source_scopes_state !== null) {
            $queryParams['source.scopes.state[]'] = $source_scopes_state;
        }


        // query params
        if ($not_source_scopes_state !== null) {
            $queryParams['!source.scopes.state[]'] = $not_source_scopes_state;
        }


        // query params
        if ($source_scopes_city !== null) {
            $queryParams['source.scopes.city[]'] = $source_scopes_city;
        }


        // query params
        if ($not_source_scopes_city !== null) {
            $queryParams['!source.scopes.city[]'] = $not_source_scopes_city;
        }


        // query params
        if ($source_scopes_level !== null) {
            $queryParams['source.scopes.level[]'] = $source_scopes_level;
        }


        // query params
        if ($not_source_scopes_level !== null) {
            $queryParams['!source.scopes.level[]'] = $not_source_scopes_level;
        }


        // query params
        if ($source_links_in_count_min !== null) {
            $queryParams['source.links_in_count.min'] = $source_links_in_count_min;
        }


        // query params
        if ($source_links_in_count_max !== null) {
            $queryParams['source.links_in_count.max'] = $source_links_in_count_max;
        }


        // query params
        if ($source_rankings_alexa_rank_min !== null) {
            $queryParams['source.rankings.alexa.rank.min'] = $source_rankings_alexa_rank_min;
        }


        // query params
        if ($source_rankings_alexa_rank_max !== null) {
            $queryParams['source.rankings.alexa.rank.max'] = $source_rankings_alexa_rank_max;
        }


        // query params
        if ($source_rankings_alexa_country !== null) {
            $queryParams['source.rankings.alexa.country[]'] = $source_rankings_alexa_country;
        }


        // query params
        if ($social_shares_count_facebook_min !== null) {
            $queryParams['social_shares_count.facebook.min'] = $social_shares_count_facebook_min;
        }


        // query params
        if ($social_shares_count_facebook_max !== null) {
            $queryParams['social_shares_count.facebook.max'] = $social_shares_count_facebook_max;
        }


        // query params
        if ($social_shares_count_google_plus_min !== null) {
            $queryParams['social_shares_count.google_plus.min'] = $social_shares_count_google_plus_min;
        }


        // query params
        if ($social_shares_count_google_plus_max !== null) {
            $queryParams['social_shares_count.google_plus.max'] = $social_shares_count_google_plus_max;
        }


        // query params
        if ($social_shares_count_linkedin_min !== null) {
            $queryParams['social_shares_count.linkedin.min'] = $social_shares_count_linkedin_min;
        }


        // query params
        if ($social_shares_count_linkedin_max !== null) {
            $queryParams['social_shares_count.linkedin.max'] = $social_shares_count_linkedin_max;
        }


        // query params
        if ($social_shares_count_reddit_min !== null) {
            $queryParams['social_shares_count.reddit.min'] = $social_shares_count_reddit_min;
        }


        // query params
        if ($social_shares_count_reddit_max !== null) {
            $queryParams['social_shares_count.reddit.max'] = $social_shares_count_reddit_max;
        }


        // query params
        if ($field !== null) {
            $queryParams['field'] = $field;
        }




        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json', 'text/xml']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json', 'text/xml'],
                []
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            if ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($_tempBody));
            } else {
                $httpBody = $_tempBody;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }

        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-ID');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-ID'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->config->getApiKeyWithPrefix('X-AYLIEN-NewsAPI-Application-Key');
        if ($apiKey !== null) {
            $headers['X-AYLIEN-NewsAPI-Application-Key'] = $apiKey;
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
